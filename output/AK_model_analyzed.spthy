theory DeviceManagement_AK_model begin

// Function signature and definition of the equational theory E

functions: activateCredential/3 [private], adec/2, aenc/2, fst/1,
           makeCredential/3, nil/0, pair/2, pk/1, sign/2, snd/1, swstate/0, true/0,
           verify/3, verifyCredential/3 [private]
equations:
    activateCredential(n, k, makeCredential(pk(k), m, n)) = m,
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true,
    verifyCredential(n, k, makeCredential(pk(k), m, n)) = true

heuristic: p

restriction RestrictionTpmCommand:
  "∀ c #t1.
    (TPM_ReceiveCommand( c ) @ #t1) ⇒
    ((∃ #t2. (TPM_SendCommand( c ) @ #t2) ∧ (#t2 < #t1)) ∧
     (¬(∃ #t3. (TPM_ReceiveCommand( c ) @ #t3) ∧ (¬(#t3 = #t1)))))"

lemma SourcesLemma [sources]:
  all-traces
  "∀ m #t1.
    (Receive( m ) @ #t1) ⇒
    ((∃ #t2. (!KU( m ) @ #t2) ∧ (#t2 < #t1)) ∨ (∃ #t3. Source( m ) @ #t3))"
/*
guarded formula characterizing all counter-examples:
"∃ m #t1.
  (Receive( m ) @ #t1)
 ∧
  (∀ #t2. (!KU( m ) @ #t2) ⇒ ¬(#t2 < #t1)) ∧
  (∀ #t3. (Source( m ) @ #t3) ⇒ ⊥)"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∀ m #t1.
           (Receive( m ) @ #t1)
          ⇒
           ((last(#t1)) ∨
            (∃ #t2. (!KU( m ) @ #t2) ∧ (¬(last(#t2))) ∧ (#t2 < #t1)) ∨
            (∃ #t3. (Source( m ) @ #t3) ∧ ¬(last(#t3)))))  ∥
         (∃ c #t1.
           (TPM_ReceiveCommand( c ) @ #t1)
          ∧
           (¬(last(#t1))) ∧
           (((∀ #t2.
               (TPM_SendCommand( c ) @ #t2)
              ⇒
               ((last(#t2)) ∨ (#t2 = #t1) ∨ (#t1 < #t2))) ∨
             (∃ #t3.
               (TPM_ReceiveCommand( c ) @ #t3) ∧ (¬(last(#t3))) ∧ (¬(#t3 = #t1))))))  ∥
         (∃ x y #t3.
           (IsIn( x, y ) @ #t3)
          ∧
           (¬(last(#t3))) ∧
           (∀ #t2.
             (Insert( x, y ) @ #t2)
            ⇒
             ((last(#t2)) ∨
              (#t2 = #t3) ∨
              (#t3 < #t2) ∨
              (∃ #t1 yp.
                (Insert( x, yp ) @ #t1)
               ∧
                (¬(last(#t1))) ∧
                (((#t1 = #t2) ∨ (#t2 < #t1))) ∧
                (¬(#t1 = #t2)) ∧
                (((#t3 = #t1) ∨ (#t1 < #t3)))))))  ∥
         (∃ p pp l x lp #t1 #t3.
           (Lock_0( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)
          ∧
           (¬(last(#t3))) ∧
           (¬(last(#t1))) ∧
           (((#t1 = #t3) ∨
             (#t3 < #t1) ∨
             (∀ #t2.
               (Unlock_0( p, l, x ) @ #t2)
              ⇒
               ((last(#t2)) ∨
                (#t1 = #t2) ∨
                (#t2 < #t1) ∨
                (#t2 = #t3) ∨
                (#t3 < #t2) ∨
                (∃ #t0 pp.1.
                  (Unlock( pp.1, l, x ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2))) ∨
                (∃ pp.1 lpp #t0.
                  (Lock( pp.1, lpp, x ) @ #t0)
                 ∧
                  (¬(last(#t0))) ∧
                  (((#t0 = #t1) ∨ (#t1 < #t0))) ∧
                  (¬(#t0 = #t1)) ∧
                  (((#t2 = #t0) ∨ (#t0 < #t2)))) ∨
                (∃ pp.1 lpp #t0.
                  (Unlock( pp.1, lpp, x ) @ #t0)
                 ∧
                  (¬(last(#t0))) ∧
                  (((#t0 = #t1) ∨ (#t1 < #t0))) ∧
                  (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                  (¬(#t2 = #t0))))))) ∧
           (((#t3 = #t1) ∨ (#t1 < #t3))) ∧
           (¬(#t1 = #t3)))  ∥
         (∃ p pp l x lp #t1 #t3.
           (Lock_1( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)
          ∧
           (¬(last(#t3))) ∧
           (¬(last(#t1))) ∧
           (((#t1 = #t3) ∨
             (#t3 < #t1) ∨
             (∀ #t2.
               (Unlock_1( p, l, x ) @ #t2)
              ⇒
               ((last(#t2)) ∨
                (#t1 = #t2) ∨
                (#t2 < #t1) ∨
                (#t2 = #t3) ∨
                (#t3 < #t2) ∨
                (∃ #t0 pp.1.
                  (Unlock( pp.1, l, x ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2))) ∨
                (∃ pp.1 lpp #t0.
                  (Lock( pp.1, lpp, x ) @ #t0)
                 ∧
                  (¬(last(#t0))) ∧
                  (((#t0 = #t1) ∨ (#t1 < #t0))) ∧
                  (¬(#t0 = #t1)) ∧
                  (((#t2 = #t0) ∨ (#t0 < #t2)))) ∨
                (∃ pp.1 lpp #t0.
                  (Unlock( pp.1, lpp, x ) @ #t0)
                 ∧
                  (¬(last(#t0))) ∧
                  (((#t0 = #t1) ∨ (#t1 < #t0))) ∧
                  (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                  (¬(#t2 = #t0))))))) ∧
           (((#t3 = #t1) ∨ (#t1 < #t3))) ∧
           (¬(#t1 = #t3)))  ∥
         (∃ p pp l x lp #t1 #t3.
           (Lock_2( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)
          ∧
           (¬(last(#t3))) ∧
           (¬(last(#t1))) ∧
           (((#t1 = #t3) ∨
             (#t3 < #t1) ∨
             (∀ #t2.
               (Unlock_2( p, l, x ) @ #t2)
              ⇒
               ((last(#t2)) ∨
                (#t1 = #t2) ∨
                (#t2 < #t1) ∨
                (#t2 = #t3) ∨
                (#t3 < #t2) ∨
                (∃ #t0 pp.1.
                  (Unlock( pp.1, l, x ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2))) ∨
                (∃ pp.1 lpp #t0.
                  (Lock( pp.1, lpp, x ) @ #t0)
                 ∧
                  (¬(last(#t0))) ∧
                  (((#t0 = #t1) ∨ (#t1 < #t0))) ∧
                  (¬(#t0 = #t1)) ∧
                  (((#t2 = #t0) ∨ (#t0 < #t2)))) ∨
                (∃ pp.1 lpp #t0.
                  (Unlock( pp.1, lpp, x ) @ #t0)
                 ∧
                  (¬(last(#t0))) ∧
                  (((#t0 = #t1) ∨ (#t1 < #t0))) ∧
                  (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                  (¬(#t2 = #t0))))))) ∧
           (((#t3 = #t1) ∨ (#t1 < #t3))) ∧
           (¬(#t1 = #t3))) )
    case case_1
    solve( (last(#t1))  ∥
           (∃ #t2. (!KU( m ) @ #t2) ∧ (¬(last(#t2))) ∧ (#t2 < #t1))  ∥
           (∃ #t3. (Source( m ) @ #t3) ∧ ¬(last(#t3))) )
      case case_1
      solve( state_11111111111111111111112111111111( ~RouterID, ~ServerID,
                                                     ~ek_h, ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh,
                                                     a_sh_pd, credentialBlob, k_h, k_sk, lock
             ) ▶₀ #t1 )
        case ifverifyCredentialapkkskcredentialBlobtrue_0_1111111111111111111111211111111
        solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                                 makeCredential(pk(k_sk), m, a_pk)>
               ) @ #t2 )
          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                           ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router,
                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid, a_h, a_sh, ak_spk,
                                                           makeCredential(pk(k_sk), m, a_pk), fqdn_nms,
                                                           signature_cert_nms
                 ) ▶₀ #t2 )
            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
            solve( (#vr.14 < #t2.1)  ∥ (#vr.14 = #t2.1) )
              case case_1
              solve( !KU( makeCredential(pk(k_sk), m, a_pk) ) @ #vk.9 )
                case c_makeCredential
                by contradiction /* from formulas */
              next
                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                by contradiction /* cyclic */
              next
                case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( !KU( makeCredential(pk(k_sk), m, a_pk) ) @ #vk.9 )
                case c_makeCredential
                by contradiction /* from formulas */
              next
                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                by contradiction /* cyclic */
              next
                case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( (∀ #t2.
             (TPM_SendCommand( c ) @ #t2)
            ⇒
             ((last(#t2)) ∨ (#t2 = #t1.1) ∨ (#t1.1 < #t2)))  ∥
           (∃ #t3.
             (TPM_ReceiveCommand( c ) @ #t3) ∧ (¬(last(#t3))) ∧ (¬(#t3 = #t1.1))) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    qed
  next
    case case_3
    solve( (#t1.1 = #t2)  ∥ (#t2 < #t1.1) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    qed
  next
    case case_4
    solve( (#t1.1 = #t3)  ∥ (#t3 < #t1.1)  ∥
           (∀ #t2.
             (Unlock_0( '0', ~n, 'device' ) @ #t2)
            ⇒
             ((last(#t2)) ∨
              (#t1.1 = #t2) ∨
              (#t2 < #t1.1) ∨
              (#t2 = #t3) ∨
              (#t3 < #t2) ∨
              (∃ #t0 pp.
                (Unlock( pp, ~n, 'device' ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2))) ∨
              (∃ pp lpp #t0.
                (Lock( pp, lpp, 'device' ) @ #t0)
               ∧
                (¬(last(#t0))) ∧
                (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                (¬(#t0 = #t1.1)) ∧
                (((#t2 = #t0) ∨ (#t0 < #t2)))) ∨
              (∃ pp lpp #t0.
                (Unlock( pp, lpp, 'device' ) @ #t0)
               ∧
                (¬(last(#t0))) ∧
                (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                (¬(#t2 = #t0))))) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      solve( (#t3 = #t1.1)  ∥ (#t1.1 < #t3) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2
        solve( (∃ #t0 pp.
                 (Unlock( pp, ~n, 'device' ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2)))  ∥
               (∃ pp lpp #t0.
                 (Lock( pp, lpp, 'device' ) @ #t0)
                ∧
                 (¬(last(#t0))) ∧
                 (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                 (¬(#t0 = #t1.1)) ∧
                 (((#t2 = #t0) ∨ (#t0 < #t2))))  ∥
               (∃ pp lpp #t0.
                 (Unlock( pp, lpp, 'device' ) @ #t0)
                ∧
                 (¬(last(#t0))) ∧
                 (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                 (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                 (¬(#t2 = #t0))) )
          case case_1
          by contradiction /* from formulas */
        next
          case case_2
          solve( (#t0 = #t1.1)  ∥ (#t1.1 < #t0) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_3
          solve( (#t0 = #t1.1)  ∥ (#t1.1 < #t0) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            solve( (#t2 = #t0)  ∥ (#t0 < #t2) )
              case case_1
              by contradiction /* from formulas */
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  next
    case case_5
    solve( (#t1.1 = #t3)  ∥ (#t3 < #t1.1)  ∥
           (∀ #t2.
             (Unlock_1( '1', ~n, 'device' ) @ #t2)
            ⇒
             ((last(#t2)) ∨
              (#t1.1 = #t2) ∨
              (#t2 < #t1.1) ∨
              (#t2 = #t3) ∨
              (#t3 < #t2) ∨
              (∃ #t0 pp.
                (Unlock( pp, ~n, 'device' ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2))) ∨
              (∃ pp lpp #t0.
                (Lock( pp, lpp, 'device' ) @ #t0)
               ∧
                (¬(last(#t0))) ∧
                (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                (¬(#t0 = #t1.1)) ∧
                (((#t2 = #t0) ∨ (#t0 < #t2)))) ∨
              (∃ pp lpp #t0.
                (Unlock( pp, lpp, 'device' ) @ #t0)
               ∧
                (¬(last(#t0))) ∧
                (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                (¬(#t2 = #t0))))) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      solve( (#t3 = #t1.1)  ∥ (#t1.1 < #t3) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2
        solve( (∃ #t0 pp.
                 (Unlock( pp, ~n, 'device' ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2)))  ∥
               (∃ pp lpp #t0.
                 (Lock( pp, lpp, 'device' ) @ #t0)
                ∧
                 (¬(last(#t0))) ∧
                 (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                 (¬(#t0 = #t1.1)) ∧
                 (((#t2 = #t0) ∨ (#t0 < #t2))))  ∥
               (∃ pp lpp #t0.
                 (Unlock( pp, lpp, 'device' ) @ #t0)
                ∧
                 (¬(last(#t0))) ∧
                 (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                 (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                 (¬(#t2 = #t0))) )
          case case_1
          by contradiction /* from formulas */
        next
          case case_2
          solve( (#t0 = #t1.1)  ∥ (#t1.1 < #t0) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_3
          solve( (#t0 = #t1.1)  ∥ (#t1.1 < #t0) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            solve( (#t2 = #t0)  ∥ (#t0 < #t2) )
              case case_1
              by contradiction /* from formulas */
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  next
    case case_6
    solve( (#t1.1 = #t3)  ∥ (#t3 < #t1.1)  ∥
           (∀ #t2.
             (Unlock_2( '2', ~n, 'device' ) @ #t2)
            ⇒
             ((last(#t2)) ∨
              (#t1.1 = #t2) ∨
              (#t2 < #t1.1) ∨
              (#t2 = #t3) ∨
              (#t3 < #t2) ∨
              (∃ #t0 pp.
                (Unlock( pp, ~n, 'device' ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2))) ∨
              (∃ pp lpp #t0.
                (Lock( pp, lpp, 'device' ) @ #t0)
               ∧
                (¬(last(#t0))) ∧
                (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                (¬(#t0 = #t1.1)) ∧
                (((#t2 = #t0) ∨ (#t0 < #t2)))) ∨
              (∃ pp lpp #t0.
                (Unlock( pp, lpp, 'device' ) @ #t0)
               ∧
                (¬(last(#t0))) ∧
                (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                (¬(#t2 = #t0))))) )
      case case_1
      by contradiction /* from formulas */
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      solve( (#t3 = #t1.1)  ∥ (#t1.1 < #t3) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2
        solve( (∃ #t0 pp.
                 (Unlock( pp, ~n, 'device' ) @ #t0) ∧ (¬(last(#t0))) ∧ (¬(#t0 = #t2)))  ∥
               (∃ pp lpp #t0.
                 (Lock( pp, lpp, 'device' ) @ #t0)
                ∧
                 (¬(last(#t0))) ∧
                 (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                 (¬(#t0 = #t1.1)) ∧
                 (((#t2 = #t0) ∨ (#t0 < #t2))))  ∥
               (∃ pp lpp #t0.
                 (Unlock( pp, lpp, 'device' ) @ #t0)
                ∧
                 (¬(last(#t0))) ∧
                 (((#t0 = #t1.1) ∨ (#t1.1 < #t0))) ∧
                 (((#t2 = #t0) ∨ (#t0 < #t2))) ∧
                 (¬(#t2 = #t0))) )
          case case_1
          by contradiction /* from formulas */
        next
          case case_2
          solve( (#t0 = #t1.1)  ∥ (#t1.1 < #t0) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_3
          solve( (#t0 = #t1.1)  ∥ (#t1.1 < #t0) )
            case case_1
            by contradiction /* from formulas */
          next
            case case_2
            solve( (#t2 = #t0)  ∥ (#t0 < #t2) )
              case case_1
              by contradiction /* from formulas */
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma RouterFinishes:
  exists-trace "∃ #t1. RouterFinish( ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ #t1. (RouterFinish( ) @ #t1)"
*/
simplify
solve( state_1111111111111111211111111111111111111111111111( ~RouterID,
                                                             ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                             ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                             credentialBlob, fqdn_nms, signature_cert_ak,
                                                             signature_cert_nms
       ) ▶₀ #t1 )
  case eventHasKeyAKRouterIDakspk_0_111111111111111121111111111111111111111111111
  solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                           makeCredential(pk(k_sk), challenge, a_pk)>
         ) @ #t2 )
    case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
    solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                     ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                     ~ssk_nms.1, ~ssk_ra.1, ~tid.1, a_h, a_sh, ak_spk.1,
                                                     makeCredential(pk(k_sk), challenge, a_pk), fqdn_nms.1,
                                                     signature_cert_nms
           ) ▶₀ #t2 )
      case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
      solve( (#vr.42 < #t2.1)  ∥ (#vr.42 = #t2.1) )
        case case_2
        solve( !KU( sign(<ak_spk, ~fqdn_router>, ~ssk_ra) ) @ #vk.7 )
          case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
          solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.25 )
            case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
            solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
              case insertprivatePartekheksk_0_111111111111111111
              solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.19 )
                case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                  case insertpublicPartekhpkeksk_0_1111111111111111111
                  solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                    ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( (#vr.42 < #t2.3)  ∥ (#vr.42 = #t2.3) )
                      case case_2
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                     ~ssk_ra.1, lock
                                 ) ▶₀ #t2.4 )
                            case lockdevice_0_111111111111111111111112111
                            solve( ((#vr.26 < #vr.91) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                     ∧
                                      (#vr.26 < #t2) ∧
                                      (#t2 < #vr.91) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.26) ∨ (#t0 = #vr.26) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.26) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.91 < #vr.26) )
                              case case_2
                              solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                     ) ▶₀ #t2.5 )
                                case outsh_0_11111111111111111111111211111
                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                  solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                              ~ek_h.1, ~ek_sk.1,
                                                                              ~fqdn_router.1, ~ssk_nms.1,
                                                                              ~ssk_ra.1, ~tid.1, ak_h,
                                                                              ak_spk.1, credentialBlob,
                                                                              fqdn_nms.1, signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( !KU( ~challenge.1 ) @ #vk.28 )
                                          case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                          solve( (#t2.1 < #t2.8)  ∥ (#t2.1 = #t2.8) )
                                            case case_2
                                            solve( (#t2.2 < #t2.8)  ∥ (#t2.2 = #t2.8) )
                                              case case_2
                                              solve( (#t2.3 < #t2.8)  ∥ (#t2.3 = #t2.8) )
                                                case case_2
                                                solve( (#t2.4 < #t2.8)  ∥ (#t2.4 = #t2.8) )
                                                  case case_2
                                                  solve( TPM_SendCommand( <'TPM2_ActivateCredential', ~ek_h, 
                                                                           ~s_h, ~ek_h, 
                                                                           makeCredential(pk(~ek_sk),
                                                                                          ~challenge,
                                                                                          pk(~ek_sk))
                                                                          >
                                                         ) @ #t2.7 )
                                                    case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                    solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                     ~ServerID.1,
                                                                                                     ~ek_h,
                                                                                                     ~ek_sk.1,
                                                                                                     ~fqdn_router.1,
                                                                                                     ~ssk_nms.1,
                                                                                                     ~ssk_ra.1,
                                                                                                     ~tid.1,
                                                                                                     ~ek_h,
                                                                                                     ~s_h,
                                                                                                     ak_spk,
                                                                                                     makeCredential(pk(~ek_sk),
                                                                                                                    ~challenge,
                                                                                                                    pk(~ek_sk)),
                                                                                                     fqdn_nms.1,
                                                                                                     signature_cert_nms
                                                           ) ▶₀ #t2.7 )
                                                      case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                      solve( !KU( ~fqdn_router ) @ #vk.20 )
                                                        case outRAenrollrequestfqdnrouterpkekskakspk_0_111111111111111121111111111
                                                        solve( !KU( pk(~ssk_ra) ) @ #vk.26 )
                                                          case outpksskra_0_1111111111
                                                          solve( !KU( ~ek_h ) @ #vk.24 )
                                                            case outekh_0_1111
                                                            solve( !KU( pk(~ek_sk) ) @ #vk.21 )
                                                              case outpkeksk_0_1
                                                              solve( !KU( ~fqdn_nms ) @ #vk.27 )
                                                                case outfqdnnms_0_111111111111111211
                                                                solve( !KU( ~s_h ) @ #vk.25 )
                                                                  case outsh_0_11111111111111111111111211111
                                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                         ) @ #t2.7 )
                                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                ~ServerID.1,
                                                                                                                ~ek_h.1,
                                                                                                                ~ek_sk.1,
                                                                                                                ~fqdn_router.1,
                                                                                                                ~ssk_nms.1,
                                                                                                                ~ssk_ra.1,
                                                                                                                ~tid.1,
                                                                                                                ak_h,
                                                                                                                ak_spk,
                                                                                                                credentialBlob,
                                                                                                                fqdn_nms.1,
                                                                                                                signature_cert_nms
                                                                           ) ▶₀ #t2.7 )
                                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                      SOLVED // trace found
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma ServerFinishes:
  exists-trace "∃ #t1. ServerFinish( ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ #t1. (ServerFinish( ) @ #t1)"
*/
simplify
solve( state_111111111111111211111111111111111( ~RouterID, ~ServerID,
                                                ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra,
                                                ak_spk, fqdn_router
       ) ▶₀ #t1 )
  case eventHasKeyEKServerIDpkeksk_0_11111111111111121111111111111111
  solve( !KU( ~challenge ) @ #vk.2 )
    case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
    solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                             makeCredential(pk(k_sk), ~challenge, a_pk)>
           ) @ #t2 )
      case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
      solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                       ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                       ~ssk_nms.1, ~ssk_ra.1, ~tid, a_h, a_sh, ak_spk.1,
                                                       makeCredential(pk(k_sk), ~challenge, a_pk), fqdn_nms.1,
                                                       signature_cert_nms
             ) ▶₀ #t2 )
        case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
        solve( (#vr.71 < #t2.1)  ∥ (#vr.71 = #t2.1) )
          case case_2
          solve( !KU( makeCredential(pk(k_sk), ~challenge, a_pk) ) @ #vk.15 )
            case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
            solve( !KU( sign(<pk(~ssk_ra), fqdn_nms.1>, ~ssk_nms) ) @ #vk.27 )
              case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
              solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.1 )
                case insertprivatePartekheksk_0_111111111111111111
                solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                  case insertpublicPartekhpkeksk_0_1111111111111111111
                  solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                    ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( (#vr.71 < #t2.3)  ∥ (#vr.71 = #t2.3) )
                      case case_2
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                     ~ssk_ra.1, lock
                                 ) ▶₀ #t2.4 )
                            case lockdevice_0_111111111111111111111112111
                            solve( ((#vr.55 < #vr.79) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.55 < #t2) ∧
                                      (#t2 < #vr.79) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.55) ∨ (#t0 = #vr.55) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.55) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.79 < #vr.55) )
                              case case_2
                              solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outsh_0_11111111111111111111111211111
                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                  solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                              ~ek_h.1, ~ek_sk.1,
                                                                              ~fqdn_router.2, ~ssk_nms.1,
                                                                              ~ssk_ra.1, ~tid.1, ak_h,
                                                                              ak_spk.1, credentialBlob,
                                                                              fqdn_nms.2, signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( !KU( pk(~ek_sk) ) @ #vk.16 )
                                          case outRAenrollrequestfqdnrouterpkekskakspk_0_111111111111111121111111111
                                          solve( !KU( pk(~ssk_ra) ) @ #vk.24 )
                                            case outpksskra_0_1111111111
                                            solve( !KU( ~ek_h ) @ #vk.21 )
                                              case outekh_0_1111
                                              solve( !KU( ~fqdn_nms.1 ) @ #vk.25 )
                                                case outfqdnnms_0_111111111111111211
                                                solve( !KU( ~s_h ) @ #vk.22 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.7 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      SOLVED // trace found
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma AvailabilityKey:
  all-traces
  "∀ label id1 id2 k1 k2 #t1 #t2.
    (((¬(id1 = id2)) ∧ (HasKey( label, id1, k1 ) @ #t1)) ∧
     (HasKey( label, id2, k2 ) @ #t2)) ⇒
    (k1 = k2)"
/*
guarded formula characterizing all counter-examples:
"∃ label id1 id2 k1 k2 #t1 #t2.
  (HasKey( label, id1, k1 ) @ #t1) ∧ (HasKey( label, id2, k2 ) @ #t2)
 ∧
  (¬(id1 = id2)) ∧ (¬(k1 = k2))"
*/
simplify
solve( HasKey( label, id1, k1 ) @ #t1 )
  case eventHasKeyAKRouterIDakspk_0_111111111111111121111111111111111111111111111
  solve( state_111111111111111121111111111111111111111111111( ~RouterID,
                                                              ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router,
                                                              ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh, k1,
                                                              challenge, credentialBlob, fqdn_nms,
                                                              signature_cert_ak, signature_cert_nms
         ) ▶₀ #t1 )
    case eventHasKeyRARouterIDpksskra_0_11111111111111112111111111111111111111111111
    solve( HasKey( 'AK', id2, k2 ) @ #t2.5 )
      case eventHasKeyAKRouterIDakspk_0_111111111111111121111111111111111111111111111
      solve( state_111111111111111121111111111111111111111111111( ~RouterID.1,
                                                                  ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                  ~fqdn_router.1, ~ssk_nms.1, ~ssk_ra.1,
                                                                  ~tid.1, ak_h.1, ak_sh.1, k2, challenge.1,
                                                                  credentialBlob.1, fqdn_nms.1,
                                                                  signature_cert_ak, signature_cert_nms
             ) ▶₀ #t2 )
        case eventHasKeyRARouterIDpksskra_0_11111111111111112111111111111111111111111111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyAKServerIDakspk_0_11111111111111121111111111111
      solve( state_11111111111111121111111111111( ~RouterID.1, ~ServerID.1,
                                                  ~challenge.1, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                  ~ssk_ra.1, k2, fqdn_router.1
             ) ▶₀ #t2 )
        case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
        solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                                 makeCredential(pk(k_sk), challenge, a_pk)>
               ) @ #t2.1 )
          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                           ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router.2,
                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1, a_h, a_sh, ak_spk,
                                                           makeCredential(pk(k_sk), challenge, a_pk),
                                                           fqdn_nms.2, signature_cert_nms
                 ) ▶₀ #t2.1 )
            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
            solve( (#vr.41 < #t2.2)  ∥ (#vr.41 = #t2.2) )
              case case_1
              solve( !KU( sign(<ak_spk, ~fqdn_router>, ~ssk_ra) ) @ #vk.7 )
                case c_sign
                solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.23 )
                  case c_sign
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                     ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                           ) ▶₀ #t2.2 )
                      case insertauthPolicyekhnil_0_11111111111111111
                      by contradiction /* cyclic */
                    qed
                  next
                    case insertprivatePartkhksk_0_111111111111111111111111111111
                    by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                    ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                     ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                           ) ▶₀ #t2.2 )
                      case insertauthPolicyekhnil_0_11111111111111111
                      by contradiction /* cyclic */
                    qed
                  next
                    case insertprivatePartkhksk_0_111111111111111111111111111111
                    by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                    ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
                solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.25 )
                  case c_sign
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                     ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                           ) ▶₀ #t2.2 )
                      case insertauthPolicyekhnil_0_11111111111111111
                      by contradiction /* cyclic */
                    qed
                  next
                    case insertprivatePartkhksk_0_111111111111111111111111111111
                    by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                    ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                     ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                           ) ▶₀ #t2.2 )
                      case insertauthPolicyekhnil_0_11111111111111111
                      by contradiction /* cyclic */
                    qed
                  next
                    case insertprivatePartkhksk_0_111111111111111111111111111111
                    by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                    ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                              ) ▶₀ #t2.2 )
                  qed
                qed
              qed
            next
              case case_2
              solve( !KU( sign(<ak_spk, ~fqdn_router>, ~ssk_ra) ) @ #vk.7 )
                case c_sign
                solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.23 )
                  case c_sign
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.16 )
                      case c_makeCredential
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.74) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.74) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.74 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.25 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                by contradiction /* cyclic */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.78 < #t2.4)  ∥ (#vr.78 = #t2.4)  ∥ (#vr.21 < #vr.78) )
                            case case_1
                            solve( ((#vr.25 < #vr.79) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.79) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.79 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.78) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.78) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.78 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.86 < #vr.77)  ∥ (#t2.5 < #vr.86) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            by contradiction /* cyclic */
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.86) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.86) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.86 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* cyclic */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.79) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.79) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.79 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.83) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.83) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.83 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.25 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                solve( (#t2.2 < #t2.9)  ∥ (#t2.2 = #t2.9) )
                                                  case case_1
                                                  by contradiction /* from formulas */
                                                next
                                                  case case_2
                                                  solve( (#t2.3 < #t2.9)  ∥ (#t2.3 = #t2.9) )
                                                    case case_1
                                                    by contradiction /* from formulas */
                                                  next
                                                    case case_2
                                                    solve( (#t2.4 < #t2.9)  ∥ (#t2.4 = #t2.9) )
                                                      case case_1
                                                      by contradiction /* from formulas */
                                                    next
                                                      case case_2
                                                      solve( (#t2.5 < #t2.9)  ∥ (#t2.5 = #t2.9) )
                                                        case case_1
                                                        by contradiction /* from formulas */
                                                      next
                                                        case case_2
                                                        solve( TPM_SendCommand( <'TPM2_ActivateCredential', 
                                                                                 ~ek_h, ~s_h, ~ek_h, 
                                                                                 makeCredential(pk(~ek_sk),
                                                                                                ~challenge,
                                                                                                pk(~ek_sk))
                                                                                >
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h,
                                                                                                           ~ek_sk.1,
                                                                                                           ~fqdn_router.2,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~tid.1,
                                                                                                           ~ek_h,
                                                                                                           ~s_h,
                                                                                                           ak_spk.1,
                                                                                                           makeCredential(pk(~ek_sk),
                                                                                                                          ~challenge,
                                                                                                                          pk(~ek_sk)),
                                                                                                           fqdn_nms.2,
                                                                                                           signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                            by solve( !KU( ~ssk_ra ) @ #vk.32 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.87 < #t2.4)  ∥ (#vr.87 = #t2.4)  ∥ (#vr.21 < #vr.87) )
                            case case_1
                            solve( ((#vr.25 < #vr.88) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.88) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.88 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.87) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.87) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.87 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.95 < #vr.86)  ∥ (#t2.5 < #vr.95) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                              case case_1
                                                              by contradiction /* from formulas */
                                                            next
                                                              case case_2
                                                              solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.4 < #t2.11)  ∥ (#t2.4 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.7 < #t2.11)  ∥
                                                                         (#t2.7 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( TPM_SendCommand( <
                                                                                             'TPM2_ActivateCredential', 
                                                                                             ~k_h, ~s_h, 
                                                                                             ~ek_h, 
                                                                                             makeCredential(pk(~ek_sk),
                                                                                                            ~challenge,
                                                                                                            pk(~k_sk))
                                                                                            >
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                      solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~fqdn_router.2,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       ~tid.1,
                                                                                                                       ~k_h,
                                                                                                                       ~s_h,
                                                                                                                       ak_spk.1,
                                                                                                                       makeCredential(pk(~ek_sk),
                                                                                                                                      ~challenge,
                                                                                                                                      pk(~k_sk)),
                                                                                                                       fqdn_nms.2,
                                                                                                                       signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                        by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.95) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.95) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.95 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.4 < #t2.11)  ∥
                                                                         (#t2.4 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( (#t2.7 < #t2.11)  ∥
                                                                           (#t2.7 = #t2.11) )
                                                                      case case_1
                                                                      by contradiction /* from formulas */
                                                                    next
                                                                      case case_2
                                                                      solve( TPM_SendCommand( <
                                                                                               'TPM2_ActivateCredential', 
                                                                                               ~k_h, ~s_h, 
                                                                                               ~ek_h, 
                                                                                               makeCredential(pk(~ek_sk),
                                                                                                              ~challenge,
                                                                                                              pk(~k_sk))
                                                                                              >
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                        solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                         ~ServerID.1,
                                                                                                                         ~ek_h,
                                                                                                                         ~ek_sk.1,
                                                                                                                         ~fqdn_router.2,
                                                                                                                         ~ssk_nms.1,
                                                                                                                         ~ssk_ra.1,
                                                                                                                         ~tid.1,
                                                                                                                         ~k_h,
                                                                                                                         ~s_h,
                                                                                                                         ak_spk.1,
                                                                                                                         makeCredential(pk(~ek_sk),
                                                                                                                                        ~challenge,
                                                                                                                                        pk(~k_sk)),
                                                                                                                         fqdn_nms.2,
                                                                                                                         signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                          by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.88) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.88) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.88 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.16 )
                      case c_makeCredential
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.79) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.79) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.79 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.25 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                by contradiction /* cyclic */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.83 < #t2.4)  ∥ (#vr.83 = #t2.4)  ∥ (#vr.21 < #vr.83) )
                            case case_1
                            solve( ((#vr.25 < #vr.84) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.84) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.84 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.83) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.83) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.83 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.91 < #vr.82)  ∥ (#t2.5 < #vr.91) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            by contradiction /* cyclic */
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.91) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.91) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.91 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* cyclic */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.84) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.84) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.84 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.88) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.88) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.88 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.25 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                solve( (#t2.2 < #t2.9)  ∥ (#t2.2 = #t2.9) )
                                                  case case_1
                                                  by contradiction /* from formulas */
                                                next
                                                  case case_2
                                                  solve( (#t2.3 < #t2.9)  ∥ (#t2.3 = #t2.9) )
                                                    case case_1
                                                    by contradiction /* from formulas */
                                                  next
                                                    case case_2
                                                    solve( (#t2.4 < #t2.9)  ∥ (#t2.4 = #t2.9) )
                                                      case case_1
                                                      by contradiction /* from formulas */
                                                    next
                                                      case case_2
                                                      solve( (#t2.5 < #t2.9)  ∥ (#t2.5 = #t2.9) )
                                                        case case_1
                                                        by contradiction /* from formulas */
                                                      next
                                                        case case_2
                                                        solve( TPM_SendCommand( <'TPM2_ActivateCredential', 
                                                                                 ~ek_h, ~s_h, ~ek_h, 
                                                                                 makeCredential(pk(~ek_sk),
                                                                                                ~challenge,
                                                                                                pk(~ek_sk))
                                                                                >
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h,
                                                                                                           ~ek_sk.1,
                                                                                                           ~fqdn_router.2,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~tid.1,
                                                                                                           ~ek_h,
                                                                                                           ~s_h,
                                                                                                           ak_spk.1,
                                                                                                           makeCredential(pk(~ek_sk),
                                                                                                                          ~challenge,
                                                                                                                          pk(~ek_sk)),
                                                                                                           fqdn_nms.2,
                                                                                                           signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                            by solve( !KU( ~ssk_ra ) @ #vk.32 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.92 < #t2.4)  ∥ (#vr.92 = #t2.4)  ∥ (#vr.21 < #vr.92) )
                            case case_1
                            solve( ((#vr.25 < #vr.93) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.93) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.93 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.92) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.92) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.92 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.100 < #vr.91)  ∥ (#t2.5 < #vr.100) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                              case case_1
                                                              by contradiction /* from formulas */
                                                            next
                                                              case case_2
                                                              solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.4 < #t2.11)  ∥ (#t2.4 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.7 < #t2.11)  ∥
                                                                         (#t2.7 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( TPM_SendCommand( <
                                                                                             'TPM2_ActivateCredential', 
                                                                                             ~k_h, ~s_h, 
                                                                                             ~ek_h, 
                                                                                             makeCredential(pk(~ek_sk),
                                                                                                            ~challenge,
                                                                                                            pk(~k_sk))
                                                                                            >
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                      solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~fqdn_router.2,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       ~tid.1,
                                                                                                                       ~k_h,
                                                                                                                       ~s_h,
                                                                                                                       ak_spk.1,
                                                                                                                       makeCredential(pk(~ek_sk),
                                                                                                                                      ~challenge,
                                                                                                                                      pk(~k_sk)),
                                                                                                                       fqdn_nms.2,
                                                                                                                       signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                        by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.100) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.100) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.100 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.26 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.4 < #t2.11)  ∥
                                                                         (#t2.4 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( (#t2.7 < #t2.11)  ∥
                                                                           (#t2.7 = #t2.11) )
                                                                      case case_1
                                                                      by contradiction /* from formulas */
                                                                    next
                                                                      case case_2
                                                                      solve( TPM_SendCommand( <
                                                                                               'TPM2_ActivateCredential', 
                                                                                               ~k_h, ~s_h, 
                                                                                               ~ek_h, 
                                                                                               makeCredential(pk(~ek_sk),
                                                                                                              ~challenge,
                                                                                                              pk(~k_sk))
                                                                                              >
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                        solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                         ~ServerID.1,
                                                                                                                         ~ek_h,
                                                                                                                         ~ek_sk.1,
                                                                                                                         ~fqdn_router.2,
                                                                                                                         ~ssk_nms.1,
                                                                                                                         ~ssk_ra.1,
                                                                                                                         ~tid.1,
                                                                                                                         ~k_h,
                                                                                                                         ~s_h,
                                                                                                                         ak_spk.1,
                                                                                                                         makeCredential(pk(~ek_sk),
                                                                                                                                        ~challenge,
                                                                                                                                        pk(~k_sk)),
                                                                                                                         fqdn_nms.2,
                                                                                                                         signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                          by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.93) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.93) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.93 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
                solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.25 )
                  case c_sign
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.19 )
                      case c_makeCredential
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.89) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.89) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.89 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.29 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                by contradiction /* cyclic */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.93 < #t2.4)  ∥ (#vr.93 = #t2.4)  ∥ (#vr.21 < #vr.93) )
                            case case_1
                            solve( ((#vr.25 < #vr.94) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.94) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.94 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.93) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.93) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.93 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.101 < #vr.92)  ∥ (#t2.5 < #vr.101) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            by contradiction /* cyclic */
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.101) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.101) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.101 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* cyclic */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.94) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.94) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.94 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.98) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.98) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.98 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.29 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                solve( (#t2.2 < #t2.9)  ∥ (#t2.2 = #t2.9) )
                                                  case case_1
                                                  by contradiction /* from formulas */
                                                next
                                                  case case_2
                                                  solve( (#t2.3 < #t2.9)  ∥ (#t2.3 = #t2.9) )
                                                    case case_1
                                                    by contradiction /* from formulas */
                                                  next
                                                    case case_2
                                                    solve( (#t2.4 < #t2.9)  ∥ (#t2.4 = #t2.9) )
                                                      case case_1
                                                      by contradiction /* from formulas */
                                                    next
                                                      case case_2
                                                      solve( (#t2.5 < #t2.9)  ∥ (#t2.5 = #t2.9) )
                                                        case case_1
                                                        by contradiction /* from formulas */
                                                      next
                                                        case case_2
                                                        solve( TPM_SendCommand( <'TPM2_ActivateCredential', 
                                                                                 ~ek_h, ~s_h, ~ek_h, 
                                                                                 makeCredential(pk(~ek_sk),
                                                                                                ~challenge,
                                                                                                pk(~ek_sk))
                                                                                >
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h,
                                                                                                           ~ek_sk.1,
                                                                                                           ~fqdn_router.2,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~tid.1,
                                                                                                           ~ek_h,
                                                                                                           ~s_h,
                                                                                                           ak_spk.1,
                                                                                                           makeCredential(pk(~ek_sk),
                                                                                                                          ~challenge,
                                                                                                                          pk(~ek_sk)),
                                                                                                           fqdn_nms.2,
                                                                                                           signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.36 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* from formulas */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.102 < #t2.4)  ∥ (#vr.102 = #t2.4)  ∥ (#vr.21 < #vr.102) )
                            case case_1
                            solve( ((#vr.25 < #vr.103) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.103) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.103 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.102) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.102) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.102 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.110 < #vr.101)  ∥ (#t2.5 < #vr.110) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                              case case_1
                                                              by contradiction /* from formulas */
                                                            next
                                                              case case_2
                                                              solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.4 < #t2.11)  ∥ (#t2.4 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.7 < #t2.11)  ∥
                                                                         (#t2.7 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( TPM_SendCommand( <
                                                                                             'TPM2_ActivateCredential', 
                                                                                             ~k_h, ~s_h, 
                                                                                             ~ek_h, 
                                                                                             makeCredential(pk(~ek_sk),
                                                                                                            ~challenge,
                                                                                                            pk(~k_sk))
                                                                                            >
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                      solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~fqdn_router.2,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       ~tid.1,
                                                                                                                       ~k_h,
                                                                                                                       ~s_h,
                                                                                                                       ak_spk.1,
                                                                                                                       makeCredential(pk(~ek_sk),
                                                                                                                                      ~challenge,
                                                                                                                                      pk(~k_sk)),
                                                                                                                       fqdn_nms.2,
                                                                                                                       signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                        solve( !KU( ~challenge.1 ) @ #vk.38 )
                                                                          case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                          by contradiction /* from formulas */
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.110) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.110) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.110 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.4 < #t2.11)  ∥
                                                                         (#t2.4 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( (#t2.7 < #t2.11)  ∥
                                                                           (#t2.7 = #t2.11) )
                                                                      case case_1
                                                                      by contradiction /* from formulas */
                                                                    next
                                                                      case case_2
                                                                      solve( TPM_SendCommand( <
                                                                                               'TPM2_ActivateCredential', 
                                                                                               ~k_h, ~s_h, 
                                                                                               ~ek_h, 
                                                                                               makeCredential(pk(~ek_sk),
                                                                                                              ~challenge,
                                                                                                              pk(~k_sk))
                                                                                              >
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                        solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                         ~ServerID.1,
                                                                                                                         ~ek_h,
                                                                                                                         ~ek_sk.1,
                                                                                                                         ~fqdn_router.2,
                                                                                                                         ~ssk_nms.1,
                                                                                                                         ~ssk_ra.1,
                                                                                                                         ~tid.1,
                                                                                                                         ~k_h,
                                                                                                                         ~s_h,
                                                                                                                         ak_spk.1,
                                                                                                                         makeCredential(pk(~ek_sk),
                                                                                                                                        ~challenge,
                                                                                                                                        pk(~k_sk)),
                                                                                                                         fqdn_nms.2,
                                                                                                                         signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                          solve( !KU( ~challenge.1
                                                                                 ) @ #vk.38 )
                                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                            by contradiction
                                                                               /* from formulas */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.103) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.103) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.103 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                  solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.19 )
                      case c_makeCredential
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.94) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.94) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.94 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.29 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                by contradiction /* cyclic */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.98 < #t2.4)  ∥ (#vr.98 = #t2.4)  ∥ (#vr.21 < #vr.98) )
                            case case_1
                            solve( ((#vr.25 < #vr.99) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.99) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.99 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.98) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.98) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.98 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.106 < #vr.97)  ∥ (#t2.5 < #vr.106) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            by contradiction /* cyclic */
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.106) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.106) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.106 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* cyclic */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.99) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.99) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.99 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                      solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                        case insertpublicPartekhpkeksk_0_1111111111111111111
                        solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                          ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case insertprivatePartekheksk_0_111111111111111111
                          solve( (#vr.41 < #t2.4)  ∥ (#vr.41 = #t2.4) )
                            case case_1
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                              ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                     ) ▶₀ #t2.4 )
                                case __0_1111111111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                              by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                             ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                        ) ▶₀ #t2.4 )
                            qed
                          next
                            case case_2
                            solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                              case insertauthPolicyekhnil_0_11111111111111111
                              solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                case insertpolicyDigestshnil_0_1111111111111111111111121111
                                solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                           ~ssk_nms.1, ~ssk_ra.1, lock
                                       ) ▶₀ #t2.5 )
                                  case lockdevice_0_111111111111111111111112111
                                  solve( ((#vr.25 < #vr.103) ∧
                                          (∃ #t2.
                                            (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                           ∧
                                            (#vr.25 < #t2) ∧
                                            (#t2 < #vr.103) ∧
                                            (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                            (∀ pp lpp #t0.
                                              (Lock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                            (∀ pp lpp #t0.
                                              (Unlock( pp, lpp, 'device' ) @ #t0)
                                             ⇒
                                              ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                         (#vr.103 < #vr.25) )
                                    case case_1
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.2, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.2,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( Unlock_2( '2', ~n, 'device' ) @ #t2.7 )
                                          case unlockdevice_0_1111111111111111111111211111111111
                                          solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, k_sk, ~n
                                                 ) ▶₀ #t2.7 )
                                            case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case unlockdevice_0_11111111111111111111112111111112
                                          by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, a_ap,
                                                                                            a_h, a_pk, a_sh,
                                                                                            a_sh_pd,
                                                                                            credentialBlob,
                                                                                            k_h, k_sk, ~n
                                                    ) ▶₀ #t2.7 )
                                        next
                                          case unlockdevice_0_1111111111111111111111211111112
                                          by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           a_h, a_pk, a_sh,
                                                                                           a_sh_pd,
                                                                                           credentialBlob,
                                                                                           k_h, ~n
                                                    ) ▶₀ #t2.7 )
                                        qed
                                      qed
                                    qed
                                  next
                                    case case_2
                                    solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case outsh_0_11111111111111111111111211111
                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                        solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1,
                                                                                    ~fqdn_router.2,
                                                                                    ~ssk_nms.1, ~ssk_ra.1,
                                                                                    ~tid.1, ak_h, ak_spk.1,
                                                                                    credentialBlob,
                                                                                    fqdn_nms.2,
                                                                                    signature_cert_nms
                                               ) ▶₀ #t2.7 )
                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                          solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                            case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                            solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                        ~ServerID.1, ~ek_h.1,
                                                                                        ~ek_sk.1,
                                                                                        ~fqdn_router.2,
                                                                                        ~ssk_nms.1, ~ssk_ra.1,
                                                                                        ~tid.1, ak_h,
                                                                                        ak_spk.1,
                                                                                        credentialBlob,
                                                                                        fqdn_nms.2,
                                                                                        signature_cert_nms
                                                   ) ▶₀ #t2.8 )
                                              case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                              solve( !KU( ~challenge.1 ) @ #vk.29 )
                                                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                solve( (#t2.2 < #t2.9)  ∥ (#t2.2 = #t2.9) )
                                                  case case_1
                                                  by contradiction /* from formulas */
                                                next
                                                  case case_2
                                                  solve( (#t2.3 < #t2.9)  ∥ (#t2.3 = #t2.9) )
                                                    case case_1
                                                    by contradiction /* from formulas */
                                                  next
                                                    case case_2
                                                    solve( (#t2.4 < #t2.9)  ∥ (#t2.4 = #t2.9) )
                                                      case case_1
                                                      by contradiction /* from formulas */
                                                    next
                                                      case case_2
                                                      solve( (#t2.5 < #t2.9)  ∥ (#t2.5 = #t2.9) )
                                                        case case_1
                                                        by contradiction /* from formulas */
                                                      next
                                                        case case_2
                                                        solve( TPM_SendCommand( <'TPM2_ActivateCredential', 
                                                                                 ~ek_h, ~s_h, ~ek_h, 
                                                                                 makeCredential(pk(~ek_sk),
                                                                                                ~challenge,
                                                                                                pk(~ek_sk))
                                                                                >
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h,
                                                                                                           ~ek_sk.1,
                                                                                                           ~fqdn_router.2,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~tid.1,
                                                                                                           ~ek_h,
                                                                                                           ~s_h,
                                                                                                           ak_spk.1,
                                                                                                           makeCredential(pk(~ek_sk),
                                                                                                                          ~challenge,
                                                                                                                          pk(~ek_sk)),
                                                                                                           fqdn_nms.2,
                                                                                                           signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.36 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* from formulas */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                        solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                               ) ▶₀ #t2.3 )
                          case eventSecretKeyAKksk_0_1111111111111111111111111111111
                          solve( (#vr.107 < #t2.4)  ∥ (#vr.107 = #t2.4)  ∥ (#vr.21 < #vr.107) )
                            case case_1
                            solve( ((#vr.25 < #vr.108) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.108) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.108 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.5 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                          case insertauthPolicyekhnil_0_11111111111111111
                                          by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                             ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                    ) ▶₀ #t2.6 )
                                        next
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~k_h, ~k_sk.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      a_ap, lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_1111111111111111111111111111
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( ((#vr.25 < #vr.107) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.107) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.107 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.5 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                  case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                  solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                         ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                         ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                         signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                    solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                             ~ek_h.1, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                             signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                        solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                          case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                          solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                            case insertpolicyDigestshnil_0_1111111111111111111111121111
                                            solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       lock
                                                   ) ▶₀ #t2.7 )
                                              case lockdevice_0_111111111111111111111112111
                                              solve( (#vr.115 < #vr.106)  ∥ (#t2.5 < #vr.115) )
                                                case case_1
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.8 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.10 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.2,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.2,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.10 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                            solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                              case case_1
                                                              by contradiction /* from formulas */
                                                            next
                                                              case case_2
                                                              solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.4 < #t2.11)  ∥ (#t2.4 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.7 < #t2.11)  ∥
                                                                         (#t2.7 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( TPM_SendCommand( <
                                                                                             'TPM2_ActivateCredential', 
                                                                                             ~k_h, ~s_h, 
                                                                                             ~ek_h, 
                                                                                             makeCredential(pk(~ek_sk),
                                                                                                            ~challenge,
                                                                                                            pk(~k_sk))
                                                                                            >
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                      solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~fqdn_router.2,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       ~tid.1,
                                                                                                                       ~k_h,
                                                                                                                       ~s_h,
                                                                                                                       ak_spk.1,
                                                                                                                       makeCredential(pk(~ek_sk),
                                                                                                                                      ~challenge,
                                                                                                                                      pk(~k_sk)),
                                                                                                                       fqdn_nms.2,
                                                                                                                       signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                        solve( !KU( ~challenge.1 ) @ #vk.38 )
                                                                          case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                          by contradiction /* from formulas */
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( ((#vr.25 < #vr.115) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.25 < #t2) ∧
                                                          (#t2 < #vr.115) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.115 < #vr.25) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.9 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         k_sk.1,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.9 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h.1,
                                                                                                          k_sk.1,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h.1,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.9 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n.2
                                                         ) ▶₀ #t2.8 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.10 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.10 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.30 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              solve( (#t2.2 < #t2.11)  ∥ (#t2.2 = #t2.11) )
                                                                case case_1
                                                                by contradiction /* from formulas */
                                                              next
                                                                case case_2
                                                                solve( (#t2.3 < #t2.11)  ∥ (#t2.3 = #t2.11) )
                                                                  case case_1
                                                                  by contradiction /* from formulas */
                                                                next
                                                                  case case_2
                                                                  solve( (#t2.4 < #t2.11)  ∥
                                                                         (#t2.4 = #t2.11) )
                                                                    case case_1
                                                                    by contradiction /* from formulas */
                                                                  next
                                                                    case case_2
                                                                    solve( (#t2.7 < #t2.11)  ∥
                                                                           (#t2.7 = #t2.11) )
                                                                      case case_1
                                                                      by contradiction /* from formulas */
                                                                    next
                                                                      case case_2
                                                                      solve( TPM_SendCommand( <
                                                                                               'TPM2_ActivateCredential', 
                                                                                               ~k_h, ~s_h, 
                                                                                               ~ek_h, 
                                                                                               makeCredential(pk(~ek_sk),
                                                                                                              ~challenge,
                                                                                                              pk(~k_sk))
                                                                                              >
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                                                                        solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                                                                         ~ServerID.1,
                                                                                                                         ~ek_h,
                                                                                                                         ~ek_sk.1,
                                                                                                                         ~fqdn_router.2,
                                                                                                                         ~ssk_nms.1,
                                                                                                                         ~ssk_ra.1,
                                                                                                                         ~tid.1,
                                                                                                                         ~k_h,
                                                                                                                         ~s_h,
                                                                                                                         ak_spk.1,
                                                                                                                         makeCredential(pk(~ek_sk),
                                                                                                                                        ~challenge,
                                                                                                                                        pk(~k_sk)),
                                                                                                                         fqdn_nms.2,
                                                                                                                         signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                                                                          solve( !KU( ~challenge.1
                                                                                 ) @ #vk.38 )
                                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                            by contradiction
                                                                               /* from formulas */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case case_3
                            solve( ((#vr.25 < #vr.108) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                     ∧
                                      (#vr.25 < #t2) ∧
                                      (#t2 < #vr.108) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t0 = #vr.25) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.25) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.108 < #vr.25) )
                              case case_1
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.2, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.2,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     k_sk.1, ~n.1
                                           ) ▶₀ #t2.5 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh.1, a_sh_pd,
                                                                                      credentialBlob, k_h.1,
                                                                                      k_sk.1, ~n.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh.1, a_sh_pd,
                                                                                     credentialBlob, k_h.1,
                                                                                     ~n.1
                                              ) ▶₀ #t2.5 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                               ~ssk_ra.1, authPolicy.1, ~n
                                     ) ▶₀ #t2.4 )
                                case outkhpkksk_0_111111111111111111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case eventHasKeyAKServerIDakspk_0_11111111111111121111111111111
  solve( state_11111111111111121111111111111( ~RouterID, ~ServerID,
                                              ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, k1,
                                              fqdn_router
         ) ▶₀ #t1 )
    case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
    solve( HasKey( 'AK', id2, k2 ) @ #t2 )
      case eventHasKeyAKRouterIDakspk_0_111111111111111121111111111111111111111111111
      solve( state_111111111111111121111111111111111111111111111( ~RouterID.1,
                                                                  ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                  ~fqdn_router.1, ~ssk_nms.1, ~ssk_ra.1, ~tid,
                                                                  ak_h, ak_sh, k2, challenge.1,
                                                                  credentialBlob, fqdn_nms.1,
                                                                  signature_cert_ak, signature_cert_nms
             ) ▶₀ #t2 )
        case eventHasKeyRARouterIDpksskra_0_11111111111111112111111111111111111111111111
        solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                                 makeCredential(pk(k_sk), challenge.1, a_pk)>
               ) @ #t2.1 )
          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                           ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router.2,
                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1, a_h, a_sh, ak_spk,
                                                           makeCredential(pk(k_sk), challenge.1, a_pk),
                                                           fqdn_nms.2, signature_cert_nms
                 ) ▶₀ #t2.1 )
            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
            solve( (#vr.72 < #t2.2)  ∥ (#vr.72 = #t2.2) )
              case case_1
              solve( !KU( ~challenge ) @ #vk.2 )
                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                solve( (#vr.72 < #t2.7)  ∥ (#vr.72 = #t2.7) )
                  case case_1
                  solve( (#t2.2 < #t2.7)  ∥ (#t2.2 = #t2.7) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    solve( (#t2.5 < #t2.9)  ∥ (#t2.5 = #t2.9) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#t2.3 < #t2.7)  ∥ (#t2.3 = #t2.7) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( (#t2.4 < #t2.7)  ∥ (#t2.4 = #t2.7) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, ~ek_h, 
                                                   makeCredential(pk(k_sk), ~challenge, a_pk)>
                                 ) @ #t2.6 )
                            case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                            solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h, ~ek_sk.1,
                                                                             ~fqdn_router.2, ~ssk_nms.1,
                                                                             ~ssk_ra.1, ~tid.1, a_h, a_sh,
                                                                             ak_spk.1,
                                                                             makeCredential(pk(k_sk),
                                                                                            ~challenge, a_pk),
                                                                             fqdn_nms.2, signature_cert_nms
                                   ) ▶₀ #t2.2 )
                              case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                              solve( !KU( sign(<ak_spk, ~fqdn_router.1>, ~ssk_ra) ) @ #vk.17 )
                                case c_sign
                                solve( !KU( makeCredential(pk(k_sk), ~challenge, a_pk) ) @ #vk.24 )
                                  case c_makeCredential
                                  by contradiction /* cyclic */
                                next
                                  case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                                  solve( !KU( sign(<pk(~ssk_ra), fqdn_nms.1>, ~ssk_nms) ) @ #vk.33 )
                                    case c_sign
                                    solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                      case insertprivatePartekheksk_0_111111111111111111
                                      solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                       ~ek_sk, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.2 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by contradiction /* cyclic */
                                      qed
                                    next
                                      case insertprivatePartkhksk_0_111111111111111111111111111111
                                      by solve( state_111111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ek_h, ~ek_sk,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      authPolicy, lock
                                                ) ▶₀ #t2.2 )
                                    qed
                                  next
                                    case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                                    solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                      case insertprivatePartekheksk_0_111111111111111111
                                      solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                       ~ek_sk, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.2 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by contradiction /* cyclic */
                                      qed
                                    next
                                      case insertprivatePartkhksk_0_111111111111111111111111111111
                                      by solve( state_111111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ek_h, ~ek_sk,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      authPolicy, lock
                                                ) ▶₀ #t2.2 )
                                    qed
                                  qed
                                qed
                              next
                                case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
                                solve( !KU( makeCredential(pk(k_sk), ~challenge, a_pk) ) @ #vk.28 )
                                  case c_makeCredential
                                  by contradiction /* cyclic */
                                next
                                  case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                                  solve( !KU( sign(<pk(~ssk_ra), fqdn_nms.1>, ~ssk_nms) ) @ #vk.37 )
                                    case c_sign
                                    solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                      case insertprivatePartekheksk_0_111111111111111111
                                      solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                       ~ek_sk, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.2 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by contradiction /* cyclic */
                                      qed
                                    next
                                      case insertprivatePartkhksk_0_111111111111111111111111111111
                                      by solve( state_111111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ek_h, ~ek_sk,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      authPolicy, lock
                                                ) ▶₀ #t2.2 )
                                    qed
                                  next
                                    case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                                    solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                      case insertprivatePartekheksk_0_111111111111111111
                                      solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                       ~ek_sk, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.2 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by contradiction /* cyclic */
                                      qed
                                    next
                                      case insertprivatePartkhksk_0_111111111111111111111111111111
                                      by solve( state_111111111111111111111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ek_h, ~ek_sk,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      authPolicy, lock
                                                ) ▶₀ #t2.2 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2
              solve( !KU( ~challenge ) @ #vk.2 )
                case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                solve( (#t2.2 < #t2.7)  ∥ (#t2.2 = #t2.7) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  solve( (#t2.5 < #t2.9)  ∥ (#t2.5 = #t2.9) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    solve( (#t2.3 < #t2.7)  ∥ (#t2.3 = #t2.7) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#t2.4 < #t2.7)  ∥ (#t2.4 = #t2.7) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, ~ek_h, 
                                                 makeCredential(pk(k_sk), ~challenge, a_pk)>
                               ) @ #t2.6 )
                          case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
                          solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                                           ~ServerID.1, ~ek_h, ~ek_sk.1,
                                                                           ~fqdn_router.2, ~ssk_nms.1,
                                                                           ~ssk_ra.1, ~tid.1, a_h, a_sh,
                                                                           ak_spk.1,
                                                                           makeCredential(pk(k_sk),
                                                                                          ~challenge, a_pk),
                                                                           fqdn_nms.2, signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
                            solve( !KU( sign(<ak_spk, ~fqdn_router.1>, ~ssk_ra) ) @ #vk.17 )
                              case c_sign
                              solve( !KU( makeCredential(pk(k_sk), ~challenge, a_pk) ) @ #vk.24 )
                                case c_makeCredential
                                by contradiction /* cyclic */
                              next
                                case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                                solve( !KU( sign(<pk(~ssk_ra), fqdn_nms.1>, ~ssk_nms) ) @ #vk.33 )
                                  case c_sign
                                  solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                    case insertprivatePartekheksk_0_111111111111111111
                                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                                      case insertpublicPartekhpkeksk_0_1111111111111111111
                                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.3 )
                                        case insertprivatePartekheksk_0_111111111111111111
                                        solve( (#vr.72 < #t2.4)  ∥ (#vr.72 = #t2.4) )
                                          case case_1
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                   ) ▶₀ #t2.4 )
                                              case __0_1111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                            by solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ek_h, ~k_sk,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           lock
                                                      ) ▶₀ #t2.4 )
                                          qed
                                        next
                                          case case_2
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                                              solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, lock
                                                     ) ▶₀ #t2.5 )
                                                case lockdevice_0_111111111111111111111112111
                                                solve( ((#vr.56 < #vr.76) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.56 < #t2) ∧
                                                          (#t2 < #vr.76) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.76 < #vr.56) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         k_sk,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.7 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h,
                                                                                                          k_sk,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n
                                                         ) ▶₀ #t2.6 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.7 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.7 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            by solve( !KU( ~ssk_ra ) @ #vk.32 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                     ~k_sk, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, authPolicy,
                                                                                     lock
                                             ) ▶₀ #t2.3 )
                                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                                        solve( (#vr.80 < #t2.4)  ∥ (#vr.80 = #t2.4)  ∥ (#vr.52 < #vr.80) )
                                          case case_1
                                          solve( ((#vr.56 < #vr.81) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.81) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.81 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.5 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                                        case insertauthPolicyekhnil_0_11111111111111111
                                                        by solve( state_11111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1, ~k_h,
                                                                                           ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1
                                                                  ) ▶₀ #t2.6 )
                                                      next
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~k_h,
                                                                                                    ~k_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, lock
                                                               ) ▶₀ #t2.6 )
                                                          case lockdevice_0_1111111111111111111111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.56 < #vr.80) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.80) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.80 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.5 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.6 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.6 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.6 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.5 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.6 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.7 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                                          solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                                     ~ServerID.1,
                                                                                                     ~ek_h.1,
                                                                                                     ~ek_sk.1,
                                                                                                     ~s_h,
                                                                                                     ~ssk_nms.1,
                                                                                                     ~ssk_ra.1,
                                                                                                     lock
                                                                 ) ▶₀ #t2.7 )
                                                            case lockdevice_0_111111111111111111111112111
                                                            solve( (#vr.88 < #vr.79)  ∥ (#t2.5 < #vr.88) )
                                                              case case_1
                                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h.1,
                                                                                                           ~ek_sk.1,
                                                                                                           ~s_h.1,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~n.1
                                                                     ) ▶₀ #t2.8 )
                                                                case outsh_0_11111111111111111111111211111
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.9 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.9 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                  ~ServerID.1,
                                                                                                                  ~ek_h.1,
                                                                                                                  ~ek_sk.1,
                                                                                                                  ~fqdn_router.2,
                                                                                                                  ~ssk_nms.1,
                                                                                                                  ~ssk_ra.1,
                                                                                                                  ~tid.1,
                                                                                                                  ak_h,
                                                                                                                  ak_spk.1,
                                                                                                                  credentialBlob,
                                                                                                                  fqdn_nms.2,
                                                                                                                  signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                        by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            next
                                                              case case_2
                                                              solve( ((#vr.56 < #vr.88) ∧
                                                                      (∃ #t2.
                                                                        (Unlock_2( '2', ~n.2, 'device'
                                                                         ) @ #t2)
                                                                       ∧
                                                                        (#vr.56 < #t2) ∧
                                                                        (#t2 < #vr.88) ∧
                                                                        (∀ #t0 pp.
                                                                          (Unlock( pp, ~n.2, 'device' ) @ #t0)
                                                                         ⇒
                                                                          #t0 = #t2) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t0 = #vr.56) ∨
                                                                           (#t2 < #t0))) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t2 < #t0) ∨
                                                                           (#t2 = #t0)))))  ∥
                                                                     (#vr.88 < #vr.56) )
                                                                case case_1
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.8 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.8 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( Unlock_2( '2', ~n.2, 'device'
                                                                           ) @ #t2.9 )
                                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       k_sk.1,
                                                                                                                       ~n.2
                                                                             ) ▶₀ #t2.9 )
                                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                                        by contradiction /* cyclic */
                                                                      qed
                                                                    next
                                                                      case unlockdevice_0_11111111111111111111112111111112
                                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                                        ~ServerID.1,
                                                                                                                        ~ek_h.1,
                                                                                                                        ~ek_sk.1,
                                                                                                                        ~ssk_nms.1,
                                                                                                                        ~ssk_ra.1,
                                                                                                                        a_ap,
                                                                                                                        a_h,
                                                                                                                        a_pk,
                                                                                                                        a_sh,
                                                                                                                        a_sh_pd,
                                                                                                                        credentialBlob,
                                                                                                                        k_h.1,
                                                                                                                        k_sk.1,
                                                                                                                        ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    next
                                                                      case unlockdevice_0_1111111111111111111111211111112
                                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case case_2
                                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                             ~ServerID.1,
                                                                                                             ~ek_h.1,
                                                                                                             ~ek_sk.1,
                                                                                                             ~s_h.1,
                                                                                                             ~ssk_nms.1,
                                                                                                             ~ssk_ra.1,
                                                                                                             ~n.1
                                                                       ) ▶₀ #t2.8 )
                                                                  case outsh_0_11111111111111111111111211111
                                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                         ) @ #t2.9 )
                                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                ~ServerID.1,
                                                                                                                ~ek_h.1,
                                                                                                                ~ek_sk.1,
                                                                                                                ~fqdn_router.2,
                                                                                                                ~ssk_nms.1,
                                                                                                                ~ssk_ra.1,
                                                                                                                ~tid.1,
                                                                                                                ak_h,
                                                                                                                ak_spk.1,
                                                                                                                credentialBlob,
                                                                                                                fqdn_nms.2,
                                                                                                                signature_cert_nms
                                                                           ) ▶₀ #t2.9 )
                                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                    ~ServerID.1,
                                                                                                                    ~ek_h.1,
                                                                                                                    ~ek_sk.1,
                                                                                                                    ~fqdn_router.2,
                                                                                                                    ~ssk_nms.1,
                                                                                                                    ~ssk_ra.1,
                                                                                                                    ~tid.1,
                                                                                                                    ak_h,
                                                                                                                    ak_spk.1,
                                                                                                                    credentialBlob,
                                                                                                                    fqdn_nms.2,
                                                                                                                    signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                          by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_3
                                          solve( ((#vr.56 < #vr.81) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.81) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.81 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                                  solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                    case insertprivatePartekheksk_0_111111111111111111
                                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                                      case insertpublicPartekhpkeksk_0_1111111111111111111
                                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.3 )
                                        case insertprivatePartekheksk_0_111111111111111111
                                        solve( (#vr.72 < #t2.4)  ∥ (#vr.72 = #t2.4) )
                                          case case_1
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                   ) ▶₀ #t2.4 )
                                              case __0_1111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                            by solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ek_h, ~k_sk,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           lock
                                                      ) ▶₀ #t2.4 )
                                          qed
                                        next
                                          case case_2
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                                              solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, lock
                                                     ) ▶₀ #t2.5 )
                                                case lockdevice_0_111111111111111111111112111
                                                solve( ((#vr.56 < #vr.81) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.56 < #t2) ∧
                                                          (#t2 < #vr.81) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.81 < #vr.56) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         k_sk,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.7 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h,
                                                                                                          k_sk,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n
                                                         ) ▶₀ #t2.6 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.7 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.7 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            by solve( !KU( ~ssk_ra ) @ #vk.32 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                     ~k_sk, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, authPolicy,
                                                                                     lock
                                             ) ▶₀ #t2.3 )
                                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                                        solve( (#vr.85 < #t2.4)  ∥ (#vr.85 = #t2.4)  ∥ (#vr.52 < #vr.85) )
                                          case case_1
                                          solve( ((#vr.56 < #vr.86) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.86) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.86 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.5 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                                        case insertauthPolicyekhnil_0_11111111111111111
                                                        by solve( state_11111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1, ~k_h,
                                                                                           ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1
                                                                  ) ▶₀ #t2.6 )
                                                      next
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~k_h,
                                                                                                    ~k_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, lock
                                                               ) ▶₀ #t2.6 )
                                                          case lockdevice_0_1111111111111111111111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.56 < #vr.85) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.85) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.85 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.5 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.6 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.6 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.6 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.5 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.6 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.7 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                                          solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                                     ~ServerID.1,
                                                                                                     ~ek_h.1,
                                                                                                     ~ek_sk.1,
                                                                                                     ~s_h,
                                                                                                     ~ssk_nms.1,
                                                                                                     ~ssk_ra.1,
                                                                                                     lock
                                                                 ) ▶₀ #t2.7 )
                                                            case lockdevice_0_111111111111111111111112111
                                                            solve( (#vr.93 < #vr.84)  ∥ (#t2.5 < #vr.93) )
                                                              case case_1
                                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h.1,
                                                                                                           ~ek_sk.1,
                                                                                                           ~s_h.1,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~n.1
                                                                     ) ▶₀ #t2.8 )
                                                                case outsh_0_11111111111111111111111211111
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.9 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.9 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                  ~ServerID.1,
                                                                                                                  ~ek_h.1,
                                                                                                                  ~ek_sk.1,
                                                                                                                  ~fqdn_router.2,
                                                                                                                  ~ssk_nms.1,
                                                                                                                  ~ssk_ra.1,
                                                                                                                  ~tid.1,
                                                                                                                  ak_h,
                                                                                                                  ak_spk.1,
                                                                                                                  credentialBlob,
                                                                                                                  fqdn_nms.2,
                                                                                                                  signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                        by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            next
                                                              case case_2
                                                              solve( ((#vr.56 < #vr.93) ∧
                                                                      (∃ #t2.
                                                                        (Unlock_2( '2', ~n.2, 'device'
                                                                         ) @ #t2)
                                                                       ∧
                                                                        (#vr.56 < #t2) ∧
                                                                        (#t2 < #vr.93) ∧
                                                                        (∀ #t0 pp.
                                                                          (Unlock( pp, ~n.2, 'device' ) @ #t0)
                                                                         ⇒
                                                                          #t0 = #t2) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t0 = #vr.56) ∨
                                                                           (#t2 < #t0))) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t2 < #t0) ∨
                                                                           (#t2 = #t0)))))  ∥
                                                                     (#vr.93 < #vr.56) )
                                                                case case_1
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.8 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.8 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( Unlock_2( '2', ~n.2, 'device'
                                                                           ) @ #t2.9 )
                                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       k_sk.1,
                                                                                                                       ~n.2
                                                                             ) ▶₀ #t2.9 )
                                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                                        by contradiction /* cyclic */
                                                                      qed
                                                                    next
                                                                      case unlockdevice_0_11111111111111111111112111111112
                                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                                        ~ServerID.1,
                                                                                                                        ~ek_h.1,
                                                                                                                        ~ek_sk.1,
                                                                                                                        ~ssk_nms.1,
                                                                                                                        ~ssk_ra.1,
                                                                                                                        a_ap,
                                                                                                                        a_h,
                                                                                                                        a_pk,
                                                                                                                        a_sh,
                                                                                                                        a_sh_pd,
                                                                                                                        credentialBlob,
                                                                                                                        k_h.1,
                                                                                                                        k_sk.1,
                                                                                                                        ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    next
                                                                      case unlockdevice_0_1111111111111111111111211111112
                                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case case_2
                                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                             ~ServerID.1,
                                                                                                             ~ek_h.1,
                                                                                                             ~ek_sk.1,
                                                                                                             ~s_h.1,
                                                                                                             ~ssk_nms.1,
                                                                                                             ~ssk_ra.1,
                                                                                                             ~n.1
                                                                       ) ▶₀ #t2.8 )
                                                                  case outsh_0_11111111111111111111111211111
                                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                         ) @ #t2.9 )
                                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                ~ServerID.1,
                                                                                                                ~ek_h.1,
                                                                                                                ~ek_sk.1,
                                                                                                                ~fqdn_router.2,
                                                                                                                ~ssk_nms.1,
                                                                                                                ~ssk_ra.1,
                                                                                                                ~tid.1,
                                                                                                                ak_h,
                                                                                                                ak_spk.1,
                                                                                                                credentialBlob,
                                                                                                                fqdn_nms.2,
                                                                                                                signature_cert_nms
                                                                           ) ▶₀ #t2.9 )
                                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                    ~ServerID.1,
                                                                                                                    ~ek_h.1,
                                                                                                                    ~ek_sk.1,
                                                                                                                    ~fqdn_router.2,
                                                                                                                    ~ssk_nms.1,
                                                                                                                    ~ssk_ra.1,
                                                                                                                    ~tid.1,
                                                                                                                    ak_h,
                                                                                                                    ak_spk.1,
                                                                                                                    credentialBlob,
                                                                                                                    fqdn_nms.2,
                                                                                                                    signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                          by solve( !KU( ~ssk_ra ) @ #vk.34 )
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_3
                                          solve( ((#vr.56 < #vr.86) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.86) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.86 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
                              solve( !KU( makeCredential(pk(k_sk), ~challenge, a_pk) ) @ #vk.28 )
                                case c_makeCredential
                                by contradiction /* cyclic */
                              next
                                case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                                solve( !KU( sign(<pk(~ssk_ra), fqdn_nms.1>, ~ssk_nms) ) @ #vk.37 )
                                  case c_sign
                                  solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                    case insertprivatePartekheksk_0_111111111111111111
                                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                                      case insertpublicPartekhpkeksk_0_1111111111111111111
                                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.3 )
                                        case insertprivatePartekheksk_0_111111111111111111
                                        solve( (#vr.72 < #t2.4)  ∥ (#vr.72 = #t2.4) )
                                          case case_1
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                   ) ▶₀ #t2.4 )
                                              case __0_1111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                            by solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ek_h, ~k_sk,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           lock
                                                      ) ▶₀ #t2.4 )
                                          qed
                                        next
                                          case case_2
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                                              solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, lock
                                                     ) ▶₀ #t2.5 )
                                                case lockdevice_0_111111111111111111111112111
                                                solve( ((#vr.56 < #vr.91) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.56 < #t2) ∧
                                                          (#t2 < #vr.91) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.91 < #vr.56) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         k_sk,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.7 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h,
                                                                                                          k_sk,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n
                                                         ) ▶₀ #t2.6 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.7 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.7 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.36 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* from formulas */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                     ~k_sk, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, authPolicy,
                                                                                     lock
                                             ) ▶₀ #t2.3 )
                                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                                        solve( (#vr.95 < #t2.4)  ∥ (#vr.95 = #t2.4)  ∥ (#vr.52 < #vr.95) )
                                          case case_1
                                          solve( ((#vr.56 < #vr.96) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.96) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.96 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.5 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                                        case insertauthPolicyekhnil_0_11111111111111111
                                                        by solve( state_11111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1, ~k_h,
                                                                                           ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1
                                                                  ) ▶₀ #t2.6 )
                                                      next
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~k_h,
                                                                                                    ~k_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, lock
                                                               ) ▶₀ #t2.6 )
                                                          case lockdevice_0_1111111111111111111111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.56 < #vr.95) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.95) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.95 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.5 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.6 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.6 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.6 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.5 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.6 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.7 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                                          solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                                     ~ServerID.1,
                                                                                                     ~ek_h.1,
                                                                                                     ~ek_sk.1,
                                                                                                     ~s_h,
                                                                                                     ~ssk_nms.1,
                                                                                                     ~ssk_ra.1,
                                                                                                     lock
                                                                 ) ▶₀ #t2.7 )
                                                            case lockdevice_0_111111111111111111111112111
                                                            solve( (#vr.103 < #vr.94)  ∥ (#t2.5 < #vr.103) )
                                                              case case_1
                                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h.1,
                                                                                                           ~ek_sk.1,
                                                                                                           ~s_h.1,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~n.1
                                                                     ) ▶₀ #t2.8 )
                                                                case outsh_0_11111111111111111111111211111
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.9 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.9 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                  ~ServerID.1,
                                                                                                                  ~ek_h.1,
                                                                                                                  ~ek_sk.1,
                                                                                                                  ~fqdn_router.2,
                                                                                                                  ~ssk_nms.1,
                                                                                                                  ~ssk_ra.1,
                                                                                                                  ~tid.1,
                                                                                                                  ak_h,
                                                                                                                  ak_spk.1,
                                                                                                                  credentialBlob,
                                                                                                                  fqdn_nms.2,
                                                                                                                  signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                        solve( !KU( ~challenge.1 ) @ #vk.38 )
                                                                          case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                          by contradiction /* from formulas */
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            next
                                                              case case_2
                                                              solve( ((#vr.56 < #vr.103) ∧
                                                                      (∃ #t2.
                                                                        (Unlock_2( '2', ~n.2, 'device'
                                                                         ) @ #t2)
                                                                       ∧
                                                                        (#vr.56 < #t2) ∧
                                                                        (#t2 < #vr.103) ∧
                                                                        (∀ #t0 pp.
                                                                          (Unlock( pp, ~n.2, 'device' ) @ #t0)
                                                                         ⇒
                                                                          #t0 = #t2) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t0 = #vr.56) ∨
                                                                           (#t2 < #t0))) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t2 < #t0) ∨
                                                                           (#t2 = #t0)))))  ∥
                                                                     (#vr.103 < #vr.56) )
                                                                case case_1
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.8 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.8 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( Unlock_2( '2', ~n.2, 'device'
                                                                           ) @ #t2.9 )
                                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       k_sk.1,
                                                                                                                       ~n.2
                                                                             ) ▶₀ #t2.9 )
                                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                                        by contradiction /* cyclic */
                                                                      qed
                                                                    next
                                                                      case unlockdevice_0_11111111111111111111112111111112
                                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                                        ~ServerID.1,
                                                                                                                        ~ek_h.1,
                                                                                                                        ~ek_sk.1,
                                                                                                                        ~ssk_nms.1,
                                                                                                                        ~ssk_ra.1,
                                                                                                                        a_ap,
                                                                                                                        a_h,
                                                                                                                        a_pk,
                                                                                                                        a_sh,
                                                                                                                        a_sh_pd,
                                                                                                                        credentialBlob,
                                                                                                                        k_h.1,
                                                                                                                        k_sk.1,
                                                                                                                        ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    next
                                                                      case unlockdevice_0_1111111111111111111111211111112
                                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case case_2
                                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                             ~ServerID.1,
                                                                                                             ~ek_h.1,
                                                                                                             ~ek_sk.1,
                                                                                                             ~s_h.1,
                                                                                                             ~ssk_nms.1,
                                                                                                             ~ssk_ra.1,
                                                                                                             ~n.1
                                                                       ) ▶₀ #t2.8 )
                                                                  case outsh_0_11111111111111111111111211111
                                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                         ) @ #t2.9 )
                                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                ~ServerID.1,
                                                                                                                ~ek_h.1,
                                                                                                                ~ek_sk.1,
                                                                                                                ~fqdn_router.2,
                                                                                                                ~ssk_nms.1,
                                                                                                                ~ssk_ra.1,
                                                                                                                ~tid.1,
                                                                                                                ak_h,
                                                                                                                ak_spk.1,
                                                                                                                credentialBlob,
                                                                                                                fqdn_nms.2,
                                                                                                                signature_cert_nms
                                                                           ) ▶₀ #t2.9 )
                                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                    ~ServerID.1,
                                                                                                                    ~ek_h.1,
                                                                                                                    ~ek_sk.1,
                                                                                                                    ~fqdn_router.2,
                                                                                                                    ~ssk_nms.1,
                                                                                                                    ~ssk_ra.1,
                                                                                                                    ~tid.1,
                                                                                                                    ak_h,
                                                                                                                    ak_spk.1,
                                                                                                                    credentialBlob,
                                                                                                                    fqdn_nms.2,
                                                                                                                    signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                          solve( !KU( ~challenge.1
                                                                                 ) @ #vk.38 )
                                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                            by contradiction
                                                                               /* from formulas */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_3
                                          solve( ((#vr.56 < #vr.96) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.96) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.96 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                                  solve( Insert( <'privatePart', ~ek_h>, ~ek_sk ) @ #t2.2 )
                                    case insertprivatePartekheksk_0_111111111111111111
                                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.3 )
                                      case insertpublicPartekhpkeksk_0_1111111111111111111
                                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                             ) ▶₀ #t2.3 )
                                        case insertprivatePartekheksk_0_111111111111111111
                                        solve( (#vr.72 < #t2.4)  ∥ (#vr.72 = #t2.4) )
                                          case case_1
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                   ) ▶₀ #t2.4 )
                                              case __0_1111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          next
                                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                            by solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~ek_h, ~k_sk,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, a_ap,
                                                                                           lock
                                                      ) ▶₀ #t2.4 )
                                          qed
                                        next
                                          case case_2
                                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.4 )
                                            case insertauthPolicyekhnil_0_11111111111111111
                                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.5 )
                                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                                              solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, lock
                                                     ) ▶₀ #t2.5 )
                                                case lockdevice_0_111111111111111111111112111
                                                solve( ((#vr.56 < #vr.96) ∧
                                                        (∃ #t2.
                                                          (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                         ∧
                                                          (#vr.56 < #t2) ∧
                                                          (#t2 < #vr.96) ∧
                                                          (∀ #t0 pp.
                                                            (Unlock( pp, ~n.1, 'device' ) @ #t0)
                                                           ⇒
                                                            #t0 = #t2) ∧
                                                          (∀ pp lpp #t0.
                                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                          (∀ pp lpp #t0.
                                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                                           ⇒
                                                            ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                       (#vr.96 < #vr.56) )
                                                  case case_1
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.2,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.2,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                        case unlockdevice_0_1111111111111111111111211111111111
                                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         k_sk,
                                                                                                         ~n.1
                                                               ) ▶₀ #t2.7 )
                                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case unlockdevice_0_11111111111111111111112111111112
                                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                          ~ServerID.1,
                                                                                                          ~ek_h.1,
                                                                                                          ~ek_sk.1,
                                                                                                          ~ssk_nms.1,
                                                                                                          ~ssk_ra.1,
                                                                                                          a_ap,
                                                                                                          a_h,
                                                                                                          a_pk,
                                                                                                          a_sh,
                                                                                                          a_sh_pd,
                                                                                                          credentialBlob,
                                                                                                          k_h,
                                                                                                          k_sk,
                                                                                                          ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      next
                                                        case unlockdevice_0_1111111111111111111111211111112
                                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                         ~ServerID.1,
                                                                                                         ~ek_h.1,
                                                                                                         ~ek_sk.1,
                                                                                                         ~ssk_nms.1,
                                                                                                         ~ssk_ra.1,
                                                                                                         a_ap,
                                                                                                         a_h,
                                                                                                         a_pk,
                                                                                                         a_sh,
                                                                                                         a_sh_pd,
                                                                                                         credentialBlob,
                                                                                                         k_h,
                                                                                                         ~n.1
                                                                  ) ▶₀ #t2.7 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case case_2
                                                  solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                               ~ServerID.1,
                                                                                               ~ek_h.1,
                                                                                               ~ek_sk.1,
                                                                                               ~s_h.1,
                                                                                               ~ssk_nms.1,
                                                                                               ~ssk_ra.1, ~n
                                                         ) ▶₀ #t2.6 )
                                                    case outsh_0_11111111111111111111111211111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.7 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.2,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.2,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.7 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                               ) @ #t2.8 )
                                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                      ~ServerID.1,
                                                                                                      ~ek_h.1,
                                                                                                      ~ek_sk.1,
                                                                                                      ~fqdn_router.2,
                                                                                                      ~ssk_nms.1,
                                                                                                      ~ssk_ra.1,
                                                                                                      ~tid.1,
                                                                                                      ak_h,
                                                                                                      ak_spk.1,
                                                                                                      credentialBlob,
                                                                                                      fqdn_nms.2,
                                                                                                      signature_cert_nms
                                                                 ) ▶₀ #t2.8 )
                                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                            solve( !KU( ~challenge.1 ) @ #vk.36 )
                                                              case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                              by contradiction /* from formulas */
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                     ~k_sk, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, authPolicy,
                                                                                     lock
                                             ) ▶₀ #t2.3 )
                                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                                        solve( (#vr.100 < #t2.4)  ∥ (#vr.100 = #t2.4)  ∥ (#vr.52 < #vr.100) )
                                          case case_1
                                          solve( ((#vr.56 < #vr.101) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.101) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.101 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.5 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.6 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.6 )
                                                        case insertauthPolicyekhnil_0_11111111111111111
                                                        by solve( state_11111111111111111( ~RouterID.1,
                                                                                           ~ServerID.1, ~k_h,
                                                                                           ~ek_sk.1,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1
                                                                  ) ▶₀ #t2.6 )
                                                      next
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( state_11111111111111111111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~k_h,
                                                                                                    ~k_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, lock
                                                               ) ▶₀ #t2.6 )
                                                          case lockdevice_0_1111111111111111111111111111
                                                          by contradiction /* cyclic */
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.56 < #vr.100) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.100) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.100 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.5 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.6 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.6 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.6 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.5 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.7 )
                                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                solve( state_111111111111111121111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1,
                                                                                       ~fqdn_router.2,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~tid.1, fqdn_nms.2,
                                                                                       signature_cert_nms
                                                       ) ▶₀ #t2.6 )
                                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                                    solve( state_111111111111111121111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~fqdn_router.2,
                                                                                           ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~tid.1,
                                                                                           fqdn_nms.2,
                                                                                           signature_cert_nms
                                                           ) ▶₀ #t2.7 )
                                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.4 )
                                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.7 )
                                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                                          solve( state_1111111111111111111111121111( ~RouterID.1,
                                                                                                     ~ServerID.1,
                                                                                                     ~ek_h.1,
                                                                                                     ~ek_sk.1,
                                                                                                     ~s_h,
                                                                                                     ~ssk_nms.1,
                                                                                                     ~ssk_ra.1,
                                                                                                     lock
                                                                 ) ▶₀ #t2.7 )
                                                            case lockdevice_0_111111111111111111111112111
                                                            solve( (#vr.108 < #vr.99)  ∥ (#t2.5 < #vr.108) )
                                                              case case_1
                                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                           ~ServerID.1,
                                                                                                           ~ek_h.1,
                                                                                                           ~ek_sk.1,
                                                                                                           ~s_h.1,
                                                                                                           ~ssk_nms.1,
                                                                                                           ~ssk_ra.1,
                                                                                                           ~n.1
                                                                     ) ▶₀ #t2.8 )
                                                                case outsh_0_11111111111111111111111211111
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.9 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.9 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                           ) @ #t2.10 )
                                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                  ~ServerID.1,
                                                                                                                  ~ek_h.1,
                                                                                                                  ~ek_sk.1,
                                                                                                                  ~fqdn_router.2,
                                                                                                                  ~ssk_nms.1,
                                                                                                                  ~ssk_ra.1,
                                                                                                                  ~tid.1,
                                                                                                                  ak_h,
                                                                                                                  ak_spk.1,
                                                                                                                  credentialBlob,
                                                                                                                  fqdn_nms.2,
                                                                                                                  signature_cert_nms
                                                                             ) ▶₀ #t2.10 )
                                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                        solve( !KU( ~challenge.1 ) @ #vk.38 )
                                                                          case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                          by contradiction /* from formulas */
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            next
                                                              case case_2
                                                              solve( ((#vr.56 < #vr.108) ∧
                                                                      (∃ #t2.
                                                                        (Unlock_2( '2', ~n.2, 'device'
                                                                         ) @ #t2)
                                                                       ∧
                                                                        (#vr.56 < #t2) ∧
                                                                        (#t2 < #vr.108) ∧
                                                                        (∀ #t0 pp.
                                                                          (Unlock( pp, ~n.2, 'device' ) @ #t0)
                                                                         ⇒
                                                                          #t0 = #t2) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t0 = #vr.56) ∨
                                                                           (#t2 < #t0))) ∧
                                                                        (∀ pp lpp #t0.
                                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                                         ⇒
                                                                          ((#t0 < #vr.56) ∨
                                                                           (#t2 < #t0) ∨
                                                                           (#t2 = #t0)))))  ∥
                                                                     (#vr.108 < #vr.56) )
                                                                case case_1
                                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                       ) @ #t2.8 )
                                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                              ~ServerID.1,
                                                                                                              ~ek_h.1,
                                                                                                              ~ek_sk.1,
                                                                                                              ~fqdn_router.2,
                                                                                                              ~ssk_nms.1,
                                                                                                              ~ssk_ra.1,
                                                                                                              ~tid.1,
                                                                                                              ak_h,
                                                                                                              ak_spk.1,
                                                                                                              credentialBlob,
                                                                                                              fqdn_nms.2,
                                                                                                              signature_cert_nms
                                                                         ) ▶₀ #t2.8 )
                                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                    solve( Unlock_2( '2', ~n.2, 'device'
                                                                           ) @ #t2.9 )
                                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       k_sk.1,
                                                                                                                       ~n.2
                                                                             ) ▶₀ #t2.9 )
                                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                                        by contradiction /* cyclic */
                                                                      qed
                                                                    next
                                                                      case unlockdevice_0_11111111111111111111112111111112
                                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                                        ~ServerID.1,
                                                                                                                        ~ek_h.1,
                                                                                                                        ~ek_sk.1,
                                                                                                                        ~ssk_nms.1,
                                                                                                                        ~ssk_ra.1,
                                                                                                                        a_ap,
                                                                                                                        a_h,
                                                                                                                        a_pk,
                                                                                                                        a_sh,
                                                                                                                        a_sh_pd,
                                                                                                                        credentialBlob,
                                                                                                                        k_h.1,
                                                                                                                        k_sk.1,
                                                                                                                        ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    next
                                                                      case unlockdevice_0_1111111111111111111111211111112
                                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                                       ~ServerID.1,
                                                                                                                       ~ek_h.1,
                                                                                                                       ~ek_sk.1,
                                                                                                                       ~ssk_nms.1,
                                                                                                                       ~ssk_ra.1,
                                                                                                                       a_ap,
                                                                                                                       a_h,
                                                                                                                       a_pk,
                                                                                                                       a_sh,
                                                                                                                       a_sh_pd,
                                                                                                                       credentialBlob,
                                                                                                                       k_h.1,
                                                                                                                       ~n.2
                                                                                ) ▶₀ #t2.9 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case case_2
                                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                                             ~ServerID.1,
                                                                                                             ~ek_h.1,
                                                                                                             ~ek_sk.1,
                                                                                                             ~s_h.1,
                                                                                                             ~ssk_nms.1,
                                                                                                             ~ssk_ra.1,
                                                                                                             ~n.1
                                                                       ) ▶₀ #t2.8 )
                                                                  case outsh_0_11111111111111111111111211111
                                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                         ) @ #t2.9 )
                                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                ~ServerID.1,
                                                                                                                ~ek_h.1,
                                                                                                                ~ek_sk.1,
                                                                                                                ~fqdn_router.2,
                                                                                                                ~ssk_nms.1,
                                                                                                                ~ssk_ra.1,
                                                                                                                ~tid.1,
                                                                                                                ak_h,
                                                                                                                ak_spk.1,
                                                                                                                credentialBlob,
                                                                                                                fqdn_nms.2,
                                                                                                                signature_cert_nms
                                                                           ) ▶₀ #t2.9 )
                                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                                             ) @ #t2.10 )
                                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                                    ~ServerID.1,
                                                                                                                    ~ek_h.1,
                                                                                                                    ~ek_sk.1,
                                                                                                                    ~fqdn_router.2,
                                                                                                                    ~ssk_nms.1,
                                                                                                                    ~ssk_ra.1,
                                                                                                                    ~tid.1,
                                                                                                                    ak_h,
                                                                                                                    ak_spk.1,
                                                                                                                    credentialBlob,
                                                                                                                    fqdn_nms.2,
                                                                                                                    signature_cert_nms
                                                                               ) ▶₀ #t2.10 )
                                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                                          solve( !KU( ~challenge.1
                                                                                 ) @ #vk.38 )
                                                                            case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
                                                                            by contradiction
                                                                               /* from formulas */
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_3
                                          solve( ((#vr.56 < #vr.101) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.56 < #t2) ∧
                                                    (#t2 < #vr.101) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t0 = #vr.56) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.56) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.101 < #vr.56) )
                                            case case_1
                                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1,
                                                                                     ~fqdn_router.2,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     ~tid.1, fqdn_nms.2,
                                                                                     signature_cert_nms
                                                     ) ▶₀ #t2.4 )
                                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.7 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.5 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh.1,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.5 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk,
                                                                                                   a_sh.1,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.5 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~k_h.1,
                                                                                             ~k_sk.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1,
                                                                                             authPolicy.1, ~n
                                                   ) ▶₀ #t2.4 )
                                              case outkhpkksk_0_111111111111111111111111111111111
                                              by contradiction /* cyclic */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case eventHasKeyAKServerIDakspk_0_11111111111111121111111111111
      solve( state_11111111111111121111111111111( ~RouterID.1, ~ServerID.1,
                                                  ~challenge.1, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                  ~ssk_ra.1, k2, fqdn_router.1
             ) ▶₀ #t2 )
        case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
  solve( state_111111111111111121111111111111111( ~RouterID, ~ServerID,
                                                  ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                  ak_sh, ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
         ) ▶₀ #t1 )
    case eventGenerateAKtidakspk_0_11111111111111112111111111111111
    solve( HasKey( 'EK', id2, k2 ) @ #t2 )
      case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
      solve( state_111111111111111121111111111111111( ~RouterID.1, ~ServerID.1,
                                                      ~ek_h.1, ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                      ~ssk_ra.1, ~tid.1, ak_h.1, ak_sh.1, ak_spk.1,
                                                      credentialBlob.1, fqdn_nms.1, signature_cert_nms
             ) ▶₀ #t2 )
        case eventGenerateAKtidakspk_0_11111111111111112111111111111111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyEKServerIDpkeksk_0_11111111111111121111111111111111
      solve( state_11111111111111121111111111111111( ~RouterID.1, ~ServerID.1,
                                                     ~challenge, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                     ~ssk_ra.1, ak_spk.1, fqdn_router.1
             ) ▶₀ #t2 )
        case eventHasKeyRAServerIDpksskra_0_1111111111111112111111111111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyEKServerIDpkeksk_0_11111111111111121111111111111111
  solve( state_11111111111111121111111111111111( ~RouterID, ~ServerID,
                                                 ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra,
                                                 ak_spk, fqdn_router
         ) ▶₀ #t1 )
    case eventHasKeyRAServerIDpksskra_0_1111111111111112111111111111111
    solve( HasKey( 'EK', id2, k2 ) @ #t2 )
      case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
      solve( state_111111111111111121111111111111111( ~RouterID.1, ~ServerID.1,
                                                      ~ek_h.1, ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                      ~ssk_ra.1, ~tid, ak_h, ak_sh, ak_spk.1, credentialBlob,
                                                      fqdn_nms.1, signature_cert_nms
             ) ▶₀ #t2 )
        case eventGenerateAKtidakspk_0_11111111111111112111111111111111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyEKServerIDpkeksk_0_11111111111111121111111111111111
      solve( state_11111111111111121111111111111111( ~RouterID.1, ~ServerID.1,
                                                     ~challenge.1, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                     ~ssk_ra.1, ak_spk.1, fqdn_router.1
             ) ▶₀ #t2 )
        case eventHasKeyRAServerIDpksskra_0_1111111111111112111111111111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
  solve( state_11111111111111112111111( ~RouterID, ~ServerID, ~ek_h,
                                        ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms,
                                        signature_cert_nms
         ) ▶₀ #t1 )
    case ifverifysignaturecertnmspksskrafqdnnmspkssknmstrue_0_1111111111111111211111
    solve( HasKey( 'NMS', id2, k2 ) @ #t2 )
      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
      solve( state_11111111111111112111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                            ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                            fqdn_nms.1, signature_cert_nms
             ) ▶₀ #t2 )
        case ifverifysignaturecertnmspksskrafqdnnmspkssknmstrue_0_1111111111111111211111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyNMSServerIDpkssknms_0_111111111111111211111111111111
      solve( state_111111111111111211111111111111( ~RouterID.1, ~ServerID.1,
                                                   ~challenge, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                   ~ssk_ra.1, ak_spk, fqdn_router.1
             ) ▶₀ #t2 )
        case eventHasKeyAKServerIDakspk_0_11111111111111121111111111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyNMSServerIDpkssknms_0_111111111111111211111111111111
  solve( state_111111111111111211111111111111( ~RouterID, ~ServerID,
                                               ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra,
                                               ak_spk, fqdn_router
         ) ▶₀ #t1 )
    case eventHasKeyAKServerIDakspk_0_11111111111111121111111111111
    solve( HasKey( 'NMS', id2, k2 ) @ #t2 )
      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
      solve( state_11111111111111112111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                            ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1, ~ssk_ra.1, ~tid, fqdn_nms.1,
                                            signature_cert_nms
             ) ▶₀ #t2 )
        case ifverifysignaturecertnmspksskrafqdnnmspkssknmstrue_0_1111111111111111211111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyNMSServerIDpkssknms_0_111111111111111211111111111111
      solve( state_111111111111111211111111111111( ~RouterID.1, ~ServerID.1,
                                                   ~challenge.1, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                   ~ssk_ra.1, ak_spk.1, fqdn_router.1
             ) ▶₀ #t2 )
        case eventHasKeyAKServerIDakspk_0_11111111111111121111111111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyRARouterIDpksskra_0_11111111111111112111111111111111111111111111
  solve( state_11111111111111112111111111111111111111111111( ~RouterID,
                                                             ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                             ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                             credentialBlob, fqdn_nms, signature_cert_ak,
                                                             signature_cert_nms
         ) ▶₀ #t1 )
    case eventReceiveCertAKRouterIDakspkfqdnroutersignaturecertak_0_1111111111111111211111111111111111111111111
    solve( HasKey( 'RA', id2, k2 ) @ #t2.5 )
      case eventHasKeyRARouterIDpksskra_0_11111111111111112111111111111111111111111111
      solve( state_11111111111111112111111111111111111111111111( ~RouterID.1,
                                                                 ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                 ~fqdn_router.1, ~ssk_nms.1, ~ssk_ra.1,
                                                                 ~tid.1, ak_h.1, ak_sh.1, ak_spk.1,
                                                                 challenge.1, credentialBlob.1, fqdn_nms.1,
                                                                 signature_cert_ak, signature_cert_nms
             ) ▶₀ #t2 )
        case eventReceiveCertAKRouterIDakspkfqdnroutersignaturecertak_0_1111111111111111211111111111111111111111111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyRAServerIDpksskra_0_1111111111111112111111111111111
      solve( state_1111111111111112111111111111111( ~RouterID.1, ~ServerID.1,
                                                    ~challenge.1, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                    ~ssk_ra.1, ak_spk.1, fqdn_router.1
             ) ▶₀ #t2 )
        case eventHasKeyNMSServerIDpkssknms_0_111111111111111211111111111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyRAServerIDpksskra_0_1111111111111112111111111111111
  solve( state_1111111111111112111111111111111( ~RouterID, ~ServerID,
                                                ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra,
                                                ak_spk, fqdn_router
         ) ▶₀ #t1 )
    case eventHasKeyNMSServerIDpkssknms_0_111111111111111211111111111111
    solve( HasKey( 'RA', id2, k2 ) @ #t2 )
      case eventHasKeyRARouterIDpksskra_0_11111111111111112111111111111111111111111111
      solve( state_11111111111111112111111111111111111111111111( ~RouterID.1,
                                                                 ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                 ~fqdn_router.1, ~ssk_nms.1, ~ssk_ra.1, ~tid,
                                                                 ak_h, ak_sh, ak_spk.1, challenge.1,
                                                                 credentialBlob, fqdn_nms.1,
                                                                 signature_cert_ak, signature_cert_nms
             ) ▶₀ #t2 )
        case eventReceiveCertAKRouterIDakspkfqdnroutersignaturecertak_0_1111111111111111211111111111111111111111111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyRAServerIDpksskra_0_1111111111111112111111111111111
      solve( state_1111111111111112111111111111111( ~RouterID.1, ~ServerID.1,
                                                    ~challenge.1, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                    ~ssk_ra.1, ak_spk.1, fqdn_router.1
             ) ▶₀ #t2 )
        case eventHasKeyNMSServerIDpkssknms_0_111111111111111211111111111111
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma FreshnessAK:
  all-traces
  "∀ tid1 tid2 k #t1 #t2.
    ((GenerateAK( tid1, k ) @ #t1) ∧ (GenerateAK( tid2, k ) @ #t2)) ⇒
    (tid1 = tid2)"
/*
guarded formula characterizing all counter-examples:
"∃ tid1 tid2 k #t1 #t2.
  (GenerateAK( tid1, k ) @ #t1) ∧ (GenerateAK( tid2, k ) @ #t2)
 ∧
  ¬(tid1 = tid2)"
*/
simplify
solve( state_11111111111111112111111111111111( ~RouterID, ~ServerID,
                                               ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                               ak_sh, k, credentialBlob, fqdn_nms, signature_cert_nms
       ) ▶₀ #t1 )
  case inaksh_0_1111111111111111211111111111111
  solve( state_11111111111111112111111111111111( ~RouterID.1, ~ServerID.1,
                                                 ~ek_h.1, ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1, ~ssk_ra.1,
                                                 ~tid.1, ak_h.1, ak_sh.1, k, credentialBlob.1, fqdn_nms.1,
                                                 signature_cert_nms
         ) ▶₀ #t2 )
    case inaksh_0_1111111111111111211111111111111
    by contradiction /* from formulas */
  qed
qed

lemma SecretKey:
  all-traces
  "∀ label k #t1. (SecretKey( label, k ) @ #t1) ⇒ (¬(∃ #t2. K( k ) @ #t2))"
/*
guarded formula characterizing all counter-examples:
"∃ label k #t1. (SecretKey( label, k ) @ #t1) ∧ ∃ #t2. (K( k ) @ #t2)"
*/
simplify
solve( SecretKey( label, k ) @ #t1 )
  case eventSecretKeyAKksk_0_1111111111111111111111111111111
  solve( state_1111111111111111111111111111111( ~RouterID, ~ServerID,
                                                ~ek_h, ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy,
                                                lock
         ) ▶₀ #t1 )
    case insertprivatePartkhksk_0_111111111111111111111111111111
    solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.1 )
      case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
      solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                             ~ek_sk.1, ~fqdn_router, ~ssk_nms.1, ~ssk_ra.1, ~tid, fqdn_nms,
                                             signature_cert_nms
             ) ▶₀ #t2.1 )
        case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
        by solve( !KU( ~k_sk ) @ #vk )
      qed
    qed
  qed
next
  case eventSecretKeyEKeksk_0_11
  solve( state_11( ~ek_sk ) ▶₀ #t1 )
    case outpkeksk_0_1
    by solve( !KU( ~ek_sk ) @ #vk )
  qed
next
  case eventSecretKeyNMSssknms_0_11111111111111
  solve( state_11111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                               ~ssk_nms, ~ssk_ra
         ) ▶₀ #t1 )
    case outpkssknms_0_1111111111111
    by solve( !KU( ~ssk_nms ) @ #vk )
  qed
next
  case eventSecretKeyRAKsskra_0_11111111111
  solve( state_11111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_ra
         ) ▶₀ #t1 )
    case outpksskra_0_1111111111
    by solve( !KU( ~ssk_ra ) @ #vk )
  qed
qed

lemma CorrectTransfer:
  all-traces
  "∀ id1 m #t1.
    (ReceiveCertAK( id1, m ) @ #t1) ⇒
    (∃ id2 #t2. (GenerateCertAK( id2, m ) @ #t2) ∧ (#t2 < #t1))"
/*
guarded formula characterizing all counter-examples:
"∃ id1 m #t1.
  (ReceiveCertAK( id1, m ) @ #t1)
 ∧
  ∀ id2 #t2. (GenerateCertAK( id2, m ) @ #t2) ⇒ ¬(#t2 < #t1)"
*/
simplify
solve( state_1111111111111111211111111111111111111111111( ~RouterID,
                                                          ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                          ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                          credentialBlob, fqdn_nms, signature_cert_ak,
                                                          signature_cert_nms
       ) ▶₀ #t1 )
  case eventRouterUseAKRouterIDakspk_0_111111111111111121111111111111111111111111
  solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                           makeCredential(pk(k_sk), challenge, a_pk)>
         ) @ #t2 )
    case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
    solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                     ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                     ~ssk_nms.1, ~ssk_ra.1, ~tid.1, a_h, a_sh, ak_spk.1,
                                                     makeCredential(pk(k_sk), challenge, a_pk), fqdn_nms.1,
                                                     signature_cert_nms
           ) ▶₀ #t2 )
      case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
      solve( (#vr.39 < #t2.1)  ∥ (#vr.39 = #t2.1) )
        case case_1
        solve( !KU( sign(<ak_spk, ~fqdn_router>, ~ssk_ra) ) @ #vk.7 )
          case c_sign
          solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.23 )
            case c_sign
            solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
              case insertprivatePartekheksk_0_111111111111111111
              solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                               ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                     ) ▶₀ #t2.1 )
                case insertauthPolicyekhnil_0_11111111111111111
                by contradiction /* cyclic */
              qed
            next
              case insertprivatePartkhksk_0_111111111111111111111111111111
              by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk, ~ssk_nms.1,
                                                              ~ssk_ra.1, authPolicy, lock
                        ) ▶₀ #t2.1 )
            qed
          next
            case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
            solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
              case insertprivatePartekheksk_0_111111111111111111
              solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                               ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                     ) ▶₀ #t2.1 )
                case insertauthPolicyekhnil_0_11111111111111111
                by contradiction /* cyclic */
              qed
            next
              case insertprivatePartkhksk_0_111111111111111111111111111111
              by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk, ~ssk_nms.1,
                                                              ~ssk_ra.1, authPolicy, lock
                        ) ▶₀ #t2.1 )
            qed
          qed
        next
          case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
          by contradiction /* from formulas */
        qed
      next
        case case_2
        solve( !KU( sign(<ak_spk, ~fqdn_router>, ~ssk_ra) ) @ #vk.7 )
          case c_sign
          solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.23 )
            case c_sign
            solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
              case insertprivatePartekheksk_0_111111111111111111
              solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.16 )
                case c_makeCredential
                solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                  case insertpublicPartekhpkeksk_0_1111111111111111111
                  solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                    ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( (#vr.39 < #t2.3)  ∥ (#vr.39 = #t2.3) )
                      case case_1
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case __0_1111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                        by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                     ~ssk_ra.1, lock
                                 ) ▶₀ #t2.4 )
                            case lockdevice_0_111111111111111111111112111
                            solve( ((#vr.23 < #vr.58) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                     ∧
                                      (#vr.23 < #t2) ∧
                                      (#t2 < #vr.58) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.58 < #vr.23) )
                              case case_1
                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                            ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                                            ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                            ak_h, ak_spk.1, credentialBlob,
                                                                            fqdn_nms.1, signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                  solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h,
                                                                                     k_sk, ~n
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh, a_sh_pd,
                                                                                      credentialBlob, k_h,
                                                                                      k_sk, ~n
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h, ~n
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                     ) ▶₀ #t2.5 )
                                case outsh_0_11111111111111111111111211111
                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                  solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                              ~ek_h.1, ~ek_sk.1,
                                                                              ~fqdn_router.1, ~ssk_nms.1,
                                                                              ~ssk_ra.1, ~tid.1, ak_h,
                                                                              ak_spk.1, credentialBlob,
                                                                              fqdn_nms.1, signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                  solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk, ~ssk_nms.1,
                                                                 ~ssk_ra.1, authPolicy, lock
                         ) ▶₀ #t2.2 )
                    case eventSecretKeyAKksk_0_1111111111111111111111111111111
                    solve( (#vr.62 < #t2.3)  ∥ (#vr.62 = #t2.3)  ∥ (#vr.19 < #vr.62) )
                      case case_1
                      solve( ((#vr.23 < #vr.63) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.63) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.63 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.4 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                    case insertauthPolicyekhnil_0_11111111111111111
                                    by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                       ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                ~k_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, lock
                                           ) ▶₀ #t2.5 )
                                      case lockdevice_0_1111111111111111111111111111
                                      by contradiction /* cyclic */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( ((#vr.23 < #vr.62) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.62) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.62 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.4 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.5 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.5 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.5 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.4 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.5 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.6 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                      case insertpolicyDigestshnil_0_1111111111111111111111121111
                                      solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, lock
                                             ) ▶₀ #t2.6 )
                                        case lockdevice_0_111111111111111111111112111
                                        solve( (#vr.70 < #vr.61)  ∥ (#t2.4 < #vr.70) )
                                          case case_1
                                          solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h.1,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~n.2
                                                 ) ▶₀ #t2.7 )
                                            case outsh_0_11111111111111111111111211111
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.8 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.9 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.23 < #vr.70) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.23 < #t2) ∧
                                                    (#t2 < #vr.70) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.70 < #vr.23) )
                                            case case_1
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.7 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.8 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.8 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.8 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h.1,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, ~n.2
                                                   ) ▶₀ #t2.7 )
                                              case outsh_0_11111111111111111111111211111
                                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~fqdn_router.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, ~tid.1,
                                                                                            ak_h, ak_spk.1,
                                                                                            credentialBlob,
                                                                                            fqdn_nms.1,
                                                                                            signature_cert_nms
                                                       ) ▶₀ #t2.8 )
                                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( ((#vr.23 < #vr.63) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.63) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.63 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                  case insertpublicPartekhpkeksk_0_1111111111111111111
                  solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                    ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( (#vr.39 < #t2.3)  ∥ (#vr.39 = #t2.3) )
                      case case_1
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case __0_1111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                        by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                     ~ssk_ra.1, lock
                                 ) ▶₀ #t2.4 )
                            case lockdevice_0_111111111111111111111112111
                            solve( ((#vr.23 < #vr.68) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                     ∧
                                      (#vr.23 < #t2) ∧
                                      (#t2 < #vr.68) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.68 < #vr.23) )
                              case case_1
                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                            ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                                            ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                            ak_h, ak_spk.1, credentialBlob,
                                                                            fqdn_nms.1, signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                  solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h,
                                                                                     k_sk, ~n
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh, a_sh_pd,
                                                                                      credentialBlob, k_h,
                                                                                      k_sk, ~n
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h, ~n
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                     ) ▶₀ #t2.5 )
                                case outsh_0_11111111111111111111111211111
                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                  solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                              ~ek_h.1, ~ek_sk.1,
                                                                              ~fqdn_router.1, ~ssk_nms.1,
                                                                              ~ssk_ra.1, ~tid.1, ak_h,
                                                                              ak_spk.1, credentialBlob,
                                                                              fqdn_nms.1, signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                  solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk, ~ssk_nms.1,
                                                                 ~ssk_ra.1, authPolicy, lock
                         ) ▶₀ #t2.2 )
                    case eventSecretKeyAKksk_0_1111111111111111111111111111111
                    solve( (#vr.72 < #t2.3)  ∥ (#vr.72 = #t2.3)  ∥ (#vr.19 < #vr.72) )
                      case case_1
                      solve( ((#vr.23 < #vr.73) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.73) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.73 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.4 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                    case insertauthPolicyekhnil_0_11111111111111111
                                    by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                       ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                ~k_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, lock
                                           ) ▶₀ #t2.5 )
                                      case lockdevice_0_1111111111111111111111111111
                                      by contradiction /* cyclic */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( ((#vr.23 < #vr.72) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.72) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.72 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.4 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.5 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.5 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.5 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.4 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.5 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.6 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                      case insertpolicyDigestshnil_0_1111111111111111111111121111
                                      solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, lock
                                             ) ▶₀ #t2.6 )
                                        case lockdevice_0_111111111111111111111112111
                                        solve( (#vr.80 < #vr.71)  ∥ (#t2.4 < #vr.80) )
                                          case case_1
                                          solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h.1,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~n.2
                                                 ) ▶₀ #t2.7 )
                                            case outsh_0_11111111111111111111111211111
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.8 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.9 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.23 < #vr.80) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.23 < #t2) ∧
                                                    (#t2 < #vr.80) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.80 < #vr.23) )
                                            case case_1
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.7 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.8 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.8 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.8 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h.1,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, ~n.2
                                                   ) ▶₀ #t2.7 )
                                              case outsh_0_11111111111111111111111211111
                                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~fqdn_router.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, ~tid.1,
                                                                                            ak_h, ak_spk.1,
                                                                                            credentialBlob,
                                                                                            fqdn_nms.1,
                                                                                            signature_cert_nms
                                                       ) ▶₀ #t2.8 )
                                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( ((#vr.23 < #vr.73) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.73) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.73 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
            solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
              case insertprivatePartekheksk_0_111111111111111111
              solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.16 )
                case c_makeCredential
                solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                  case insertpublicPartekhpkeksk_0_1111111111111111111
                  solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                    ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( (#vr.39 < #t2.3)  ∥ (#vr.39 = #t2.3) )
                      case case_1
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case __0_1111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                        by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                     ~ssk_ra.1, lock
                                 ) ▶₀ #t2.4 )
                            case lockdevice_0_111111111111111111111112111
                            solve( ((#vr.23 < #vr.64) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                     ∧
                                      (#vr.23 < #t2) ∧
                                      (#t2 < #vr.64) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.64 < #vr.23) )
                              case case_1
                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                            ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                                            ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                            ak_h, ak_spk.1, credentialBlob,
                                                                            fqdn_nms.1, signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                  solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h,
                                                                                     k_sk, ~n
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh, a_sh_pd,
                                                                                      credentialBlob, k_h,
                                                                                      k_sk, ~n
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h, ~n
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                     ) ▶₀ #t2.5 )
                                case outsh_0_11111111111111111111111211111
                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                  solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                              ~ek_h.1, ~ek_sk.1,
                                                                              ~fqdn_router.1, ~ssk_nms.1,
                                                                              ~ssk_ra.1, ~tid.1, ak_h,
                                                                              ak_spk.1, credentialBlob,
                                                                              fqdn_nms.1, signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                  solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk, ~ssk_nms.1,
                                                                 ~ssk_ra.1, authPolicy, lock
                         ) ▶₀ #t2.2 )
                    case eventSecretKeyAKksk_0_1111111111111111111111111111111
                    solve( (#vr.68 < #t2.3)  ∥ (#vr.68 = #t2.3)  ∥ (#vr.19 < #vr.68) )
                      case case_1
                      solve( ((#vr.23 < #vr.69) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.69) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.69 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.4 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                    case insertauthPolicyekhnil_0_11111111111111111
                                    by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                       ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                ~k_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, lock
                                           ) ▶₀ #t2.5 )
                                      case lockdevice_0_1111111111111111111111111111
                                      by contradiction /* cyclic */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( ((#vr.23 < #vr.68) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.68) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.68 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.4 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.5 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.5 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.5 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.4 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.5 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.6 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                      case insertpolicyDigestshnil_0_1111111111111111111111121111
                                      solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, lock
                                             ) ▶₀ #t2.6 )
                                        case lockdevice_0_111111111111111111111112111
                                        solve( (#vr.76 < #vr.67)  ∥ (#t2.4 < #vr.76) )
                                          case case_1
                                          solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h.1,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~n.2
                                                 ) ▶₀ #t2.7 )
                                            case outsh_0_11111111111111111111111211111
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.8 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.9 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.23 < #vr.76) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.23 < #t2) ∧
                                                    (#t2 < #vr.76) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.76 < #vr.23) )
                                            case case_1
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.7 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.8 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.8 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.8 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h.1,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, ~n.2
                                                   ) ▶₀ #t2.7 )
                                              case outsh_0_11111111111111111111111211111
                                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~fqdn_router.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, ~tid.1,
                                                                                            ak_h, ak_spk.1,
                                                                                            credentialBlob,
                                                                                            fqdn_nms.1,
                                                                                            signature_cert_nms
                                                       ) ▶₀ #t2.8 )
                                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( ((#vr.23 < #vr.69) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.69) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.69 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                  case insertpublicPartekhpkeksk_0_1111111111111111111
                  solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                    ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.2 )
                    case insertprivatePartekheksk_0_111111111111111111
                    solve( (#vr.39 < #t2.3)  ∥ (#vr.39 = #t2.3) )
                      case case_1
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                               ) ▶₀ #t2.3 )
                          case __0_1111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                        by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                       ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                        case insertauthPolicyekhnil_0_11111111111111111
                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                     ~ssk_ra.1, lock
                                 ) ▶₀ #t2.4 )
                            case lockdevice_0_111111111111111111111112111
                            solve( ((#vr.23 < #vr.73) ∧
                                    (∃ #t2.
                                      (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                     ∧
                                      (#vr.23 < #t2) ∧
                                      (#t2 < #vr.73) ∧
                                      (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                      (∀ pp lpp #t0.
                                        (Lock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                      (∀ pp lpp #t0.
                                        (Unlock( pp, lpp, 'device' ) @ #t0)
                                       ⇒
                                        ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                   (#vr.73 < #vr.23) )
                              case case_1
                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                            ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                                            ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                            ak_h, ak_spk.1, credentialBlob,
                                                                            fqdn_nms.1, signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                  solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                    case unlockdevice_0_1111111111111111111111211111111111
                                    solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h,
                                                                                     k_sk, ~n
                                           ) ▶₀ #t2.6 )
                                      case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                      by contradiction /* cyclic */
                                    qed
                                  next
                                    case unlockdevice_0_11111111111111111111112111111112
                                    by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1, ~ssk_nms.1,
                                                                                      ~ssk_ra.1, a_ap, a_h,
                                                                                      a_pk, a_sh, a_sh_pd,
                                                                                      credentialBlob, k_h,
                                                                                      k_sk, ~n
                                              ) ▶₀ #t2.6 )
                                  next
                                    case unlockdevice_0_1111111111111111111111211111112
                                    by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                     ~ServerID.1, ~ek_h.1,
                                                                                     ~ek_sk.1, ~ssk_nms.1,
                                                                                     ~ssk_ra.1, a_ap, a_h,
                                                                                     a_pk, a_sh, a_sh_pd,
                                                                                     credentialBlob, k_h, ~n
                                              ) ▶₀ #t2.6 )
                                  qed
                                qed
                              qed
                            next
                              case case_2
                              solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                     ) ▶₀ #t2.5 )
                                case outsh_0_11111111111111111111111211111
                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                  solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                              ~ek_h.1, ~ek_sk.1,
                                                                              ~fqdn_router.1, ~ssk_nms.1,
                                                                              ~ssk_ra.1, ~tid.1, ak_h,
                                                                              ak_spk.1, credentialBlob,
                                                                              fqdn_nms.1, signature_cert_nms
                                         ) ▶₀ #t2.6 )
                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.7 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                  solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk, ~ssk_nms.1,
                                                                 ~ssk_ra.1, authPolicy, lock
                         ) ▶₀ #t2.2 )
                    case eventSecretKeyAKksk_0_1111111111111111111111111111111
                    solve( (#vr.77 < #t2.3)  ∥ (#vr.77 = #t2.3)  ∥ (#vr.19 < #vr.77) )
                      case case_1
                      solve( ((#vr.23 < #vr.78) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.78) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.78 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.4 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                    case insertauthPolicyekhnil_0_11111111111111111
                                    by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                       ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                              ) ▶₀ #t2.5 )
                                  next
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                ~k_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, lock
                                           ) ▶₀ #t2.5 )
                                      case lockdevice_0_1111111111111111111111111111
                                      by contradiction /* cyclic */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( ((#vr.23 < #vr.77) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.77) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.77 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.4 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.5 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.5 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.5 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.4 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                            case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                            solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                   ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                   ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                   signature_cert_nms
                                   ) ▶₀ #t2.5 )
                              case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                              solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.6 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                    case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                    solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                      case insertpolicyDigestshnil_0_1111111111111111111111121111
                                      solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                 ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                 ~ssk_nms.1, ~ssk_ra.1, lock
                                             ) ▶₀ #t2.6 )
                                        case lockdevice_0_111111111111111111111112111
                                        solve( (#vr.85 < #vr.76)  ∥ (#t2.4 < #vr.85) )
                                          case case_1
                                          solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                       ~ServerID.1, ~ek_h.1,
                                                                                       ~ek_sk.1, ~s_h.1,
                                                                                       ~ssk_nms.1, ~ssk_ra.1,
                                                                                       ~n.2
                                                 ) ▶₀ #t2.7 )
                                            case outsh_0_11111111111111111111111211111
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.8 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.9 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case case_2
                                          solve( ((#vr.23 < #vr.85) ∧
                                                  (∃ #t2.
                                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                   ∧
                                                    (#vr.23 < #t2) ∧
                                                    (#t2 < #vr.85) ∧
                                                    (∀ #t0 pp.
                                                      (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                    (∀ pp lpp #t0.
                                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                                    (∀ pp lpp #t0.
                                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                                     ⇒
                                                      ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                 (#vr.85 < #vr.23) )
                                            case case_1
                                            solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                              case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                              solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~fqdn_router.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, ~tid.1,
                                                                                          ak_h, ak_spk.1,
                                                                                          credentialBlob,
                                                                                          fqdn_nms.1,
                                                                                          signature_cert_nms
                                                     ) ▶₀ #t2.7 )
                                                case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                  case unlockdevice_0_1111111111111111111111211111111111
                                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1,
                                                                                                   k_sk.1,
                                                                                                   ~n.1
                                                         ) ▶₀ #t2.8 )
                                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                    by contradiction /* cyclic */
                                                  qed
                                                next
                                                  case unlockdevice_0_11111111111111111111112111111112
                                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    a_ap, a_h,
                                                                                                    a_pk,
                                                                                                    a_sh,
                                                                                                    a_sh_pd,
                                                                                                    credentialBlob,
                                                                                                    k_h.1,
                                                                                                    k_sk.1,
                                                                                                    ~n.1
                                                            ) ▶₀ #t2.8 )
                                                next
                                                  case unlockdevice_0_1111111111111111111111211111112
                                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                   ~ServerID.1,
                                                                                                   ~ek_h.1,
                                                                                                   ~ek_sk.1,
                                                                                                   ~ssk_nms.1,
                                                                                                   ~ssk_ra.1,
                                                                                                   a_ap, a_h,
                                                                                                   a_pk, a_sh,
                                                                                                   a_sh_pd,
                                                                                                   credentialBlob,
                                                                                                   k_h.1, ~n.1
                                                            ) ▶₀ #t2.8 )
                                                qed
                                              qed
                                            qed
                                          next
                                            case case_2
                                            solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~s_h.1,
                                                                                         ~ssk_nms.1,
                                                                                         ~ssk_ra.1, ~n.2
                                                   ) ▶₀ #t2.7 )
                                              case outsh_0_11111111111111111111111211111
                                              solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                            ~ServerID.1,
                                                                                            ~ek_h.1, ~ek_sk.1,
                                                                                            ~fqdn_router.1,
                                                                                            ~ssk_nms.1,
                                                                                            ~ssk_ra.1, ~tid.1,
                                                                                            ak_h, ak_spk.1,
                                                                                            credentialBlob,
                                                                                            fqdn_nms.1,
                                                                                            signature_cert_nms
                                                       ) ▶₀ #t2.8 )
                                                  case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.9 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.9 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( ((#vr.23 < #vr.78) ∧
                              (∃ #t2.
                                (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                               ∧
                                (#vr.23 < #t2) ∧
                                (#t2 < #vr.78) ∧
                                (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                (∀ pp lpp #t0.
                                  (Lock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t0 = #vr.23) ∨ (#t2 < #t0))) ∧
                                (∀ pp lpp #t0.
                                  (Unlock( pp, lpp, 'device' ) @ #t0)
                                 ⇒
                                  ((#t0 < #vr.23) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                             (#vr.78 < #vr.23) )
                        case case_1
                        solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                          case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                          solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                 ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                 ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                 signature_cert_nms
                                 ) ▶₀ #t2.3 )
                            case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                            solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                              case unlockdevice_0_1111111111111111111111211111111111
                              solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, k_sk.1,
                                                                               ~n.1
                                     ) ▶₀ #t2.4 )
                                case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                by contradiction /* cyclic */
                              qed
                            next
                              case unlockdevice_0_11111111111111111111112111111112
                              by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                ~ServerID.1, ~ek_h.1,
                                                                                ~ek_sk.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                a_sh.1, a_sh_pd,
                                                                                credentialBlob, k_h.1, k_sk.1,
                                                                                ~n.1
                                        ) ▶₀ #t2.4 )
                            next
                              case unlockdevice_0_1111111111111111111111211111112
                              by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                               ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, a_ap,
                                                                               a_h, a_pk, a_sh.1, a_sh_pd,
                                                                               credentialBlob, k_h.1, ~n.1
                                        ) ▶₀ #t2.4 )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                         ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                         ~ssk_ra.1, authPolicy.1, ~n
                               ) ▶₀ #t2.3 )
                          case outkhpkksk_0_111111111111111111111111111111111
                          by contradiction /* cyclic */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed

lemma Authentication:
  all-traces
  "(∀ X Y param #t1.
     (RouterCommit( X, Y, param ) @ #t1) ⇒
     ((∃ #t2. (ServerRunning( Y, X, param ) @ #t2) ∧ (#t2 < #t1)) ∧
      (¬(∃ X2 Y2 #t3.
          (RouterCommit( X2, Y2, param ) @ #t3) ∧ (¬(#t3 = #t1)))))) ∧
   (∀ X Y param #t1.
     (ServerCommit( X, Y, param ) @ #t1) ⇒
     ((∃ #t2. (RouterRunning( Y, X, param ) @ #t2) ∧ (#t2 < #t1)) ∧
      (¬(∃ X2 Y2 #t3.
          (ServerCommit( X2, Y2, param ) @ #t3) ∧ (¬(#t3 = #t1))))))"
/*
guarded formula characterizing all counter-examples:
"((∃ X Y param #t1.
    (RouterCommit( X, Y, param ) @ #t1)
   ∧
    ((∀ #t2. (ServerRunning( Y, X, param ) @ #t2) ⇒ ¬(#t2 < #t1)) ∨
     (∃ X2 Y2 #t3. (RouterCommit( X2, Y2, param ) @ #t3) ∧ ¬(#t3 = #t1)))) ∨
  (∃ X Y param #t1.
    (ServerCommit( X, Y, param ) @ #t1)
   ∧
    ((∀ #t2. (RouterRunning( Y, X, param ) @ #t2) ⇒ ¬(#t2 < #t1)) ∨
     (∃ X2 Y2 #t3. (ServerCommit( X2, Y2, param ) @ #t3) ∧ ¬(#t3 = #t1)))))"
*/
simplify
solve( (∃ X Y param #t1.
         (RouterCommit( X, Y, param ) @ #t1)
        ∧
         ((∀ #t2. (ServerRunning( Y, X, param ) @ #t2) ⇒ ¬(#t2 < #t1)) ∨
          (∃ X2 Y2 #t3. (RouterCommit( X2, Y2, param ) @ #t3) ∧ ¬(#t3 = #t1))))  ∥
       (∃ X Y param #t1.
         (ServerCommit( X, Y, param ) @ #t1)
        ∧
         ((∀ #t2. (RouterRunning( Y, X, param ) @ #t2) ⇒ ¬(#t2 < #t1)) ∨
          (∃ X2 Y2 #t3. (ServerCommit( X2, Y2, param ) @ #t3) ∧ ¬(#t3 = #t1)))) )
  case case_1
  solve( (∀ #t2.
           (ServerRunning( ~ServerID, ~RouterID,
                           <<ak_spk, ~fqdn_router>, signature_cert_ak>
            ) @ #t2)
          ⇒
           ¬(#t2 < #t1))  ∥
         (∃ X2 Y2 #t3.
           (RouterCommit( X2, Y2, <<ak_spk, ~fqdn_router>, signature_cert_ak>
            ) @ #t3)
          ∧
           ¬(#t3 = #t1)) )
    case case_1
    solve( state_11111111111111112111111111111111111111111( ~RouterID,
                                                            ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                            ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                            credentialBlob, fqdn_nms, signature_cert_ak,
                                                            signature_cert_nms
           ) ▶₀ #t1 )
      case ifverifysignaturecertakakspkfqdnrouterpksskratrue_0_1111111111111111211111111111111111111111
      solve( TPM_SendCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                               makeCredential(pk(k_sk), challenge, a_pk)>
             ) @ #t2 )
        case eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111
        solve( state_1111111111111111211111111111111111( ~RouterID.1,
                                                         ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router.1,
                                                         ~ssk_nms.1, ~ssk_ra.1, ~tid.1, a_h, a_sh, ak_spk.1,
                                                         makeCredential(pk(k_sk), challenge, a_pk),
                                                         fqdn_nms.1, signature_cert_nms
               ) ▶₀ #t2 )
          case eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111
          solve( (#vr.37 < #t2.1)  ∥ (#vr.37 = #t2.1) )
            case case_1
            solve( !KU( sign(<ak_spk, ~fqdn_router>, ~ssk_ra) ) @ #vk.7 )
              case c_sign
              solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.23 )
                case c_sign
                solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
                  case insertprivatePartekheksk_0_111111111111111111
                  solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                   ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.1 )
                    case insertauthPolicyekhnil_0_11111111111111111
                    by contradiction /* cyclic */
                  qed
                next
                  case insertprivatePartkhksk_0_111111111111111111111111111111
                  by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk, ~ssk_nms.1,
                                                                  ~ssk_ra.1, authPolicy, lock
                            ) ▶₀ #t2.1 )
                qed
              next
                case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
                  case insertprivatePartekheksk_0_111111111111111111
                  solve( state_111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                   ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                         ) ▶₀ #t2.1 )
                    case insertauthPolicyekhnil_0_11111111111111111
                    by contradiction /* cyclic */
                  qed
                next
                  case insertprivatePartkhksk_0_111111111111111111111111111111
                  by solve( state_111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk, ~ssk_nms.1,
                                                                  ~ssk_ra.1, authPolicy, lock
                            ) ▶₀ #t2.1 )
                qed
              qed
            next
              case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( !KU( sign(<ak_spk, ~fqdn_router>, ~ssk_ra) ) @ #vk.7 )
              case c_sign
              solve( !KU( sign(<pk(~ssk_ra), fqdn_nms>, ~ssk_nms) ) @ #vk.23 )
                case c_sign
                solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
                  case insertprivatePartekheksk_0_111111111111111111
                  solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.16 )
                    case c_makeCredential
                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                      case insertpublicPartekhpkeksk_0_1111111111111111111
                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                             ) ▶₀ #t2.2 )
                        case insertprivatePartekheksk_0_111111111111111111
                        solve( (#vr.37 < #t2.3)  ∥ (#vr.37 = #t2.3) )
                          case case_1
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                   ) ▶₀ #t2.3 )
                              case __0_1111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                            by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                           ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                      ) ▶₀ #t2.3 )
                          qed
                        next
                          case case_2
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                              solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                         ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                         ~ssk_ra.1, lock
                                     ) ▶₀ #t2.4 )
                                case lockdevice_0_111111111111111111111112111
                                solve( ((#vr.21 < #vr.56) ∧
                                        (∃ #t2.
                                          (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                         ∧
                                          (#vr.21 < #t2) ∧
                                          (#t2 < #vr.56) ∧
                                          (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                          (∀ pp lpp #t0.
                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                          (∀ pp lpp #t0.
                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                       (#vr.56 < #vr.21) )
                                  case case_1
                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                    solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1,
                                                                                ~fqdn_router.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, ~tid.1, ak_h,
                                                                                ak_spk.1, credentialBlob,
                                                                                fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                      solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                        case unlockdevice_0_1111111111111111111111211111111111
                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         k_sk, ~n
                                               ) ▶₀ #t2.6 )
                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                          by contradiction /* cyclic */
                                        qed
                                      next
                                        case unlockdevice_0_11111111111111111111112111111112
                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, a_ap,
                                                                                          a_h, a_pk, a_sh,
                                                                                          a_sh_pd,
                                                                                          credentialBlob, k_h,
                                                                                          k_sk, ~n
                                                  ) ▶₀ #t2.6 )
                                      next
                                        case unlockdevice_0_1111111111111111111111211111112
                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         ~n
                                                  ) ▶₀ #t2.6 )
                                      qed
                                    qed
                                  qed
                                next
                                  case case_2
                                  solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                               ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case outsh_0_11111111111111111111111211111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1,
                                                                                      ~fqdn_router.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      ~tid.1, ak_h, ak_spk.1,
                                                                                      credentialBlob,
                                                                                      fqdn_nms.1,
                                                                                      signature_cert_nms
                                                 ) ▶₀ #t2.7 )
                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                            by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                     ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                             ) ▶₀ #t2.2 )
                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                        solve( (#vr.60 < #t2.3)  ∥ (#vr.60 = #t2.3)  ∥ (#vr.17 < #vr.60) )
                          case case_1
                          solve( ((#vr.21 < #vr.61) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.61) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.61 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                           ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                  ) ▶₀ #t2.5 )
                                      next
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                    ~k_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, lock
                                               ) ▶₀ #t2.5 )
                                          case lockdevice_0_1111111111111111111111111111
                                          by contradiction /* cyclic */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( ((#vr.21 < #vr.60) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.60) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.60 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.4 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.4 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.6 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_111111111111111111111112111
                                            solve( (#vr.68 < #vr.59)  ∥ (#t2.4 < #vr.68) )
                                              case case_1
                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~s_h.1, ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~n.2
                                                     ) ▶₀ #t2.7 )
                                                case outsh_0_11111111111111111111111211111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.8 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.1,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.1,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case case_2
                                              solve( ((#vr.21 < #vr.68) ∧
                                                      (∃ #t2.
                                                        (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                       ∧
                                                        (#vr.21 < #t2) ∧
                                                        (#t2 < #vr.68) ∧
                                                        (∀ #t0 pp.
                                                          (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                        (∀ pp lpp #t0.
                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                                        (∀ pp lpp #t0.
                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                     (#vr.68 < #vr.21) )
                                                case case_1
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.7 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       k_sk.1,
                                                                                                       ~n.1
                                                             ) ▶₀ #t2.8 )
                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                        by contradiction /* cyclic */
                                                      qed
                                                    next
                                                      case unlockdevice_0_11111111111111111111112111111112
                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                        ~ServerID.1,
                                                                                                        ~ek_h.1,
                                                                                                        ~ek_sk.1,
                                                                                                        ~ssk_nms.1,
                                                                                                        ~ssk_ra.1,
                                                                                                        a_ap,
                                                                                                        a_h,
                                                                                                        a_pk,
                                                                                                        a_sh,
                                                                                                        a_sh_pd,
                                                                                                        credentialBlob,
                                                                                                        k_h.1,
                                                                                                        k_sk.1,
                                                                                                        ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    next
                                                      case unlockdevice_0_1111111111111111111111211111112
                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.7 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.9 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.1,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.9 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_3
                          solve( ((#vr.21 < #vr.61) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.61) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.61 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                      case insertpublicPartekhpkeksk_0_1111111111111111111
                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                             ) ▶₀ #t2.2 )
                        case insertprivatePartekheksk_0_111111111111111111
                        solve( (#vr.37 < #t2.3)  ∥ (#vr.37 = #t2.3) )
                          case case_1
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                   ) ▶₀ #t2.3 )
                              case __0_1111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                            by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                           ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                      ) ▶₀ #t2.3 )
                          qed
                        next
                          case case_2
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                              solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                         ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                         ~ssk_ra.1, lock
                                     ) ▶₀ #t2.4 )
                                case lockdevice_0_111111111111111111111112111
                                solve( ((#vr.21 < #vr.66) ∧
                                        (∃ #t2.
                                          (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                         ∧
                                          (#vr.21 < #t2) ∧
                                          (#t2 < #vr.66) ∧
                                          (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                          (∀ pp lpp #t0.
                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                          (∀ pp lpp #t0.
                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                       (#vr.66 < #vr.21) )
                                  case case_1
                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                    solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1,
                                                                                ~fqdn_router.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, ~tid.1, ak_h,
                                                                                ak_spk.1, credentialBlob,
                                                                                fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                      solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                        case unlockdevice_0_1111111111111111111111211111111111
                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         k_sk, ~n
                                               ) ▶₀ #t2.6 )
                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                          by contradiction /* cyclic */
                                        qed
                                      next
                                        case unlockdevice_0_11111111111111111111112111111112
                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, a_ap,
                                                                                          a_h, a_pk, a_sh,
                                                                                          a_sh_pd,
                                                                                          credentialBlob, k_h,
                                                                                          k_sk, ~n
                                                  ) ▶₀ #t2.6 )
                                      next
                                        case unlockdevice_0_1111111111111111111111211111112
                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         ~n
                                                  ) ▶₀ #t2.6 )
                                      qed
                                    qed
                                  qed
                                next
                                  case case_2
                                  solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                               ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case outsh_0_11111111111111111111111211111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1,
                                                                                      ~fqdn_router.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      ~tid.1, ak_h, ak_spk.1,
                                                                                      credentialBlob,
                                                                                      fqdn_nms.1,
                                                                                      signature_cert_nms
                                                 ) ▶₀ #t2.7 )
                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                            by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                     ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                             ) ▶₀ #t2.2 )
                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                        solve( (#vr.70 < #t2.3)  ∥ (#vr.70 = #t2.3)  ∥ (#vr.17 < #vr.70) )
                          case case_1
                          solve( ((#vr.21 < #vr.71) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.71) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.71 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                           ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                  ) ▶₀ #t2.5 )
                                      next
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                    ~k_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, lock
                                               ) ▶₀ #t2.5 )
                                          case lockdevice_0_1111111111111111111111111111
                                          by contradiction /* cyclic */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( ((#vr.21 < #vr.70) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.70) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.70 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.4 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.4 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.6 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_111111111111111111111112111
                                            solve( (#vr.78 < #vr.69)  ∥ (#t2.4 < #vr.78) )
                                              case case_1
                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~s_h.1, ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~n.2
                                                     ) ▶₀ #t2.7 )
                                                case outsh_0_11111111111111111111111211111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.8 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.1,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.1,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case case_2
                                              solve( ((#vr.21 < #vr.78) ∧
                                                      (∃ #t2.
                                                        (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                       ∧
                                                        (#vr.21 < #t2) ∧
                                                        (#t2 < #vr.78) ∧
                                                        (∀ #t0 pp.
                                                          (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                        (∀ pp lpp #t0.
                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                                        (∀ pp lpp #t0.
                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                     (#vr.78 < #vr.21) )
                                                case case_1
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.7 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       k_sk.1,
                                                                                                       ~n.1
                                                             ) ▶₀ #t2.8 )
                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                        by contradiction /* cyclic */
                                                      qed
                                                    next
                                                      case unlockdevice_0_11111111111111111111112111111112
                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                        ~ServerID.1,
                                                                                                        ~ek_h.1,
                                                                                                        ~ek_sk.1,
                                                                                                        ~ssk_nms.1,
                                                                                                        ~ssk_ra.1,
                                                                                                        a_ap,
                                                                                                        a_h,
                                                                                                        a_pk,
                                                                                                        a_sh,
                                                                                                        a_sh_pd,
                                                                                                        credentialBlob,
                                                                                                        k_h.1,
                                                                                                        k_sk.1,
                                                                                                        ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    next
                                                      case unlockdevice_0_1111111111111111111111211111112
                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.7 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.9 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.1,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.9 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_3
                          solve( ((#vr.21 < #vr.71) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.71) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.71 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111
                solve( Insert( <'privatePart', ~ek_h>, k_sk ) @ #t2.1 )
                  case insertprivatePartekheksk_0_111111111111111111
                  solve( !KU( makeCredential(pk(~ek_sk), challenge, a_pk) ) @ #vk.16 )
                    case c_makeCredential
                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                      case insertpublicPartekhpkeksk_0_1111111111111111111
                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                             ) ▶₀ #t2.2 )
                        case insertprivatePartekheksk_0_111111111111111111
                        solve( (#vr.37 < #t2.3)  ∥ (#vr.37 = #t2.3) )
                          case case_1
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                   ) ▶₀ #t2.3 )
                              case __0_1111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                            by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                           ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                      ) ▶₀ #t2.3 )
                          qed
                        next
                          case case_2
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                              solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                         ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                         ~ssk_ra.1, lock
                                     ) ▶₀ #t2.4 )
                                case lockdevice_0_111111111111111111111112111
                                solve( ((#vr.21 < #vr.62) ∧
                                        (∃ #t2.
                                          (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                         ∧
                                          (#vr.21 < #t2) ∧
                                          (#t2 < #vr.62) ∧
                                          (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                          (∀ pp lpp #t0.
                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                          (∀ pp lpp #t0.
                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                       (#vr.62 < #vr.21) )
                                  case case_1
                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                    solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1,
                                                                                ~fqdn_router.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, ~tid.1, ak_h,
                                                                                ak_spk.1, credentialBlob,
                                                                                fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                      solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                        case unlockdevice_0_1111111111111111111111211111111111
                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         k_sk, ~n
                                               ) ▶₀ #t2.6 )
                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                          by contradiction /* cyclic */
                                        qed
                                      next
                                        case unlockdevice_0_11111111111111111111112111111112
                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, a_ap,
                                                                                          a_h, a_pk, a_sh,
                                                                                          a_sh_pd,
                                                                                          credentialBlob, k_h,
                                                                                          k_sk, ~n
                                                  ) ▶₀ #t2.6 )
                                      next
                                        case unlockdevice_0_1111111111111111111111211111112
                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         ~n
                                                  ) ▶₀ #t2.6 )
                                      qed
                                    qed
                                  qed
                                next
                                  case case_2
                                  solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                               ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case outsh_0_11111111111111111111111211111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1,
                                                                                      ~fqdn_router.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      ~tid.1, ak_h, ak_spk.1,
                                                                                      credentialBlob,
                                                                                      fqdn_nms.1,
                                                                                      signature_cert_nms
                                                 ) ▶₀ #t2.7 )
                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                            by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                     ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                             ) ▶₀ #t2.2 )
                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                        solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3)  ∥ (#vr.17 < #vr.66) )
                          case case_1
                          solve( ((#vr.21 < #vr.67) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.67) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.67 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                           ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                  ) ▶₀ #t2.5 )
                                      next
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                    ~k_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, lock
                                               ) ▶₀ #t2.5 )
                                          case lockdevice_0_1111111111111111111111111111
                                          by contradiction /* cyclic */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( ((#vr.21 < #vr.66) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.66) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.66 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.4 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.4 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.6 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_111111111111111111111112111
                                            solve( (#vr.74 < #vr.65)  ∥ (#t2.4 < #vr.74) )
                                              case case_1
                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~s_h.1, ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~n.2
                                                     ) ▶₀ #t2.7 )
                                                case outsh_0_11111111111111111111111211111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.8 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.1,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.1,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case case_2
                                              solve( ((#vr.21 < #vr.74) ∧
                                                      (∃ #t2.
                                                        (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                       ∧
                                                        (#vr.21 < #t2) ∧
                                                        (#t2 < #vr.74) ∧
                                                        (∀ #t0 pp.
                                                          (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                        (∀ pp lpp #t0.
                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                                        (∀ pp lpp #t0.
                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                     (#vr.74 < #vr.21) )
                                                case case_1
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.7 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       k_sk.1,
                                                                                                       ~n.1
                                                             ) ▶₀ #t2.8 )
                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                        by contradiction /* cyclic */
                                                      qed
                                                    next
                                                      case unlockdevice_0_11111111111111111111112111111112
                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                        ~ServerID.1,
                                                                                                        ~ek_h.1,
                                                                                                        ~ek_sk.1,
                                                                                                        ~ssk_nms.1,
                                                                                                        ~ssk_ra.1,
                                                                                                        a_ap,
                                                                                                        a_h,
                                                                                                        a_pk,
                                                                                                        a_sh,
                                                                                                        a_sh_pd,
                                                                                                        credentialBlob,
                                                                                                        k_h.1,
                                                                                                        k_sk.1,
                                                                                                        ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    next
                                                      case unlockdevice_0_1111111111111111111111211111112
                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.7 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.9 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.1,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.9 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_3
                          solve( ((#vr.21 < #vr.67) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.67) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.67 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111
                    solve( Insert( <'publicPart', a_h>, a_pk ) @ #t2.2 )
                      case insertpublicPartekhpkeksk_0_1111111111111111111
                      solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                        ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                             ) ▶₀ #t2.2 )
                        case insertprivatePartekheksk_0_111111111111111111
                        solve( (#vr.37 < #t2.3)  ∥ (#vr.37 = #t2.3) )
                          case case_1
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~ek_h,
                                                            ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                   ) ▶₀ #t2.3 )
                              case __0_1111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                            by solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                           ~ek_h.1, ~ek_sk.1, ~ek_h, ~k_sk,
                                                                           ~ssk_nms.1, ~ssk_ra.1, a_ap, lock
                                      ) ▶₀ #t2.3 )
                          qed
                        next
                          case case_2
                          solve( Insert( <'authPolicy', ~ek_h>, a_ap ) @ #t2.3 )
                            case insertauthPolicyekhnil_0_11111111111111111
                            solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.4 )
                              case insertpolicyDigestshnil_0_1111111111111111111111121111
                              solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                         ~ek_h.1, ~ek_sk.1, ~s_h, ~ssk_nms.1,
                                                                         ~ssk_ra.1, lock
                                     ) ▶₀ #t2.4 )
                                case lockdevice_0_111111111111111111111112111
                                solve( ((#vr.21 < #vr.71) ∧
                                        (∃ #t2.
                                          (Unlock_2( '2', ~n, 'device' ) @ #t2)
                                         ∧
                                          (#vr.21 < #t2) ∧
                                          (#t2 < #vr.71) ∧
                                          (∀ #t0 pp. (Unlock( pp, ~n, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                          (∀ pp lpp #t0.
                                            (Lock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                          (∀ pp lpp #t0.
                                            (Unlock( pp, lpp, 'device' ) @ #t0)
                                           ⇒
                                            ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                       (#vr.71 < #vr.21) )
                                  case case_1
                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.5 )
                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                    solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                ~ek_h.1, ~ek_sk.1,
                                                                                ~fqdn_router.1, ~ssk_nms.1,
                                                                                ~ssk_ra.1, ~tid.1, ak_h,
                                                                                ak_spk.1, credentialBlob,
                                                                                fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                      solve( Unlock_2( '2', ~n, 'device' ) @ #t2.6 )
                                        case unlockdevice_0_1111111111111111111111211111111111
                                        solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         k_sk, ~n
                                               ) ▶₀ #t2.6 )
                                          case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                          by contradiction /* cyclic */
                                        qed
                                      next
                                        case unlockdevice_0_11111111111111111111112111111112
                                        by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                          ~ServerID.1,
                                                                                          ~ek_h.1, ~ek_sk.1,
                                                                                          ~ssk_nms.1,
                                                                                          ~ssk_ra.1, a_ap,
                                                                                          a_h, a_pk, a_sh,
                                                                                          a_sh_pd,
                                                                                          credentialBlob, k_h,
                                                                                          k_sk, ~n
                                                  ) ▶₀ #t2.6 )
                                      next
                                        case unlockdevice_0_1111111111111111111111211111112
                                        by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                         ~ServerID.1, ~ek_h.1,
                                                                                         ~ek_sk.1, ~ssk_nms.1,
                                                                                         ~ssk_ra.1, a_ap, a_h,
                                                                                         a_pk, a_sh, a_sh_pd,
                                                                                         credentialBlob, k_h,
                                                                                         ~n
                                                  ) ▶₀ #t2.6 )
                                      qed
                                    qed
                                  qed
                                next
                                  case case_2
                                  solve( state_111111111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                                               ~ek_h.1, ~ek_sk.1, ~s_h.1,
                                                                               ~ssk_nms.1, ~ssk_ra.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case outsh_0_11111111111111111111111211111
                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.6 )
                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                      solve( state_11111111111111112111111111111( ~RouterID.1, ~ServerID.1,
                                                                                  ~ek_h.1, ~ek_sk.1,
                                                                                  ~fqdn_router.1, ~ssk_nms.1,
                                                                                  ~ssk_ra.1, ~tid.1, ak_h,
                                                                                  ak_spk.1, credentialBlob,
                                                                                  fqdn_nms.1,
                                                                                  signature_cert_nms
                                             ) ▶₀ #t2.6 )
                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                        solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                          case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                          solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                      ~ServerID.1, ~ek_h.1,
                                                                                      ~ek_sk.1,
                                                                                      ~fqdn_router.1,
                                                                                      ~ssk_nms.1, ~ssk_ra.1,
                                                                                      ~tid.1, ak_h, ak_spk.1,
                                                                                      credentialBlob,
                                                                                      fqdn_nms.1,
                                                                                      signature_cert_nms
                                                 ) ▶₀ #t2.7 )
                                            case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                            by solve( !KU( ~ssk_ra ) @ #vk.23 )
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case insertpublicPartkhpkksk_0_11111111111111111111111111111111
                      solve( state_11111111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ek_h.1, ~ek_sk.1, ~k_h, ~k_sk,
                                                                     ~ssk_nms.1, ~ssk_ra.1, authPolicy, lock
                             ) ▶₀ #t2.2 )
                        case eventSecretKeyAKksk_0_1111111111111111111111111111111
                        solve( (#vr.75 < #t2.3)  ∥ (#vr.75 = #t2.3)  ∥ (#vr.17 < #vr.75) )
                          case case_1
                          solve( ((#vr.21 < #vr.76) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.76) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.76 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.4 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.5 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.5 )
                                        case insertauthPolicyekhnil_0_11111111111111111
                                        by solve( state_11111111111111111( ~RouterID.1, ~ServerID.1, ~k_h,
                                                                           ~ek_sk.1, ~ssk_nms.1, ~ssk_ra.1
                                                  ) ▶₀ #t2.5 )
                                      next
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( state_11111111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                                    ~ek_h.1, ~ek_sk.1, ~k_h,
                                                                                    ~k_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, lock
                                               ) ▶₀ #t2.5 )
                                          case lockdevice_0_1111111111111111111111111111
                                          by contradiction /* cyclic */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_2
                          solve( ((#vr.21 < #vr.75) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.75) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.75 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.4 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.5 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.5 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.4 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.6 )
                                case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                       ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                       ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                       signature_cert_nms
                                       ) ▶₀ #t2.5 )
                                  case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                  solve( TPM_SendCommand( <'TPM2_Create', nil> ) @ #t2.7 )
                                    case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                                    solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                           ~ek_sk.1, ~fqdn_router.1,
                                                                           ~ssk_nms.1, ~ssk_ra.1, ~tid.1,
                                                                           fqdn_nms.1, signature_cert_nms
                                           ) ▶₀ #t2.6 )
                                      case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                      solve( Insert( <'authPolicy', ~k_h>, a_ap ) @ #t2.3 )
                                        case insertauthPolicykhauthPolicy_0_11111111111111111111111111111
                                        solve( Insert( <'policyDigest', a_sh>, nil ) @ #t2.6 )
                                          case insertpolicyDigestshnil_0_1111111111111111111111121111
                                          solve( state_1111111111111111111111121111( ~RouterID.1, ~ServerID.1,
                                                                                     ~ek_h.1, ~ek_sk.1, ~s_h,
                                                                                     ~ssk_nms.1, ~ssk_ra.1,
                                                                                     lock
                                                 ) ▶₀ #t2.6 )
                                            case lockdevice_0_111111111111111111111112111
                                            solve( (#vr.83 < #vr.74)  ∥ (#t2.4 < #vr.83) )
                                              case case_1
                                              solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                           ~ServerID.1,
                                                                                           ~ek_h.1, ~ek_sk.1,
                                                                                           ~s_h.1, ~ssk_nms.1,
                                                                                           ~ssk_ra.1, ~n.2
                                                     ) ▶₀ #t2.7 )
                                                case outsh_0_11111111111111111111111211111
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.8 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                           ) @ #t2.9 )
                                                      case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                      solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                  ~ServerID.1,
                                                                                                  ~ek_h.1,
                                                                                                  ~ek_sk.1,
                                                                                                  ~fqdn_router.1,
                                                                                                  ~ssk_nms.1,
                                                                                                  ~ssk_ra.1,
                                                                                                  ~tid.1,
                                                                                                  ak_h,
                                                                                                  ak_spk.1,
                                                                                                  credentialBlob,
                                                                                                  fqdn_nms.1,
                                                                                                  signature_cert_nms
                                                             ) ▶₀ #t2.9 )
                                                        case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                        by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case case_2
                                              solve( ((#vr.21 < #vr.83) ∧
                                                      (∃ #t2.
                                                        (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                                       ∧
                                                        (#vr.21 < #t2) ∧
                                                        (#t2 < #vr.83) ∧
                                                        (∀ #t0 pp.
                                                          (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                                        (∀ pp lpp #t0.
                                                          (Lock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                                        (∀ pp lpp #t0.
                                                          (Unlock( pp, lpp, 'device' ) @ #t0)
                                                         ⇒
                                                          ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                                     (#vr.83 < #vr.21) )
                                                case case_1
                                                solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.7 )
                                                  case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                  solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                              ~ServerID.1,
                                                                                              ~ek_h.1,
                                                                                              ~ek_sk.1,
                                                                                              ~fqdn_router.1,
                                                                                              ~ssk_nms.1,
                                                                                              ~ssk_ra.1,
                                                                                              ~tid.1, ak_h,
                                                                                              ak_spk.1,
                                                                                              credentialBlob,
                                                                                              fqdn_nms.1,
                                                                                              signature_cert_nms
                                                         ) ▶₀ #t2.7 )
                                                    case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                    solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.8 )
                                                      case unlockdevice_0_1111111111111111111111211111111111
                                                      solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       k_sk.1,
                                                                                                       ~n.1
                                                             ) ▶₀ #t2.8 )
                                                        case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                                        by contradiction /* cyclic */
                                                      qed
                                                    next
                                                      case unlockdevice_0_11111111111111111111112111111112
                                                      by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                                        ~ServerID.1,
                                                                                                        ~ek_h.1,
                                                                                                        ~ek_sk.1,
                                                                                                        ~ssk_nms.1,
                                                                                                        ~ssk_ra.1,
                                                                                                        a_ap,
                                                                                                        a_h,
                                                                                                        a_pk,
                                                                                                        a_sh,
                                                                                                        a_sh_pd,
                                                                                                        credentialBlob,
                                                                                                        k_h.1,
                                                                                                        k_sk.1,
                                                                                                        ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    next
                                                      case unlockdevice_0_1111111111111111111111211111112
                                                      by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                                       ~ServerID.1,
                                                                                                       ~ek_h.1,
                                                                                                       ~ek_sk.1,
                                                                                                       ~ssk_nms.1,
                                                                                                       ~ssk_ra.1,
                                                                                                       a_ap,
                                                                                                       a_h,
                                                                                                       a_pk,
                                                                                                       a_sh,
                                                                                                       a_sh_pd,
                                                                                                       credentialBlob,
                                                                                                       k_h.1,
                                                                                                       ~n.1
                                                                ) ▶₀ #t2.8 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case case_2
                                                solve( state_111111111111111111111112111111( ~RouterID.1,
                                                                                             ~ServerID.1,
                                                                                             ~ek_h.1,
                                                                                             ~ek_sk.1, ~s_h.1,
                                                                                             ~ssk_nms.1,
                                                                                             ~ssk_ra.1, ~n.2
                                                       ) ▶₀ #t2.7 )
                                                  case outsh_0_11111111111111111111111211111
                                                  solve( TPM_SendCommand( 'TPM2_StartAuthSession' ) @ #t2.8 )
                                                    case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                    solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                ~ServerID.1,
                                                                                                ~ek_h.1,
                                                                                                ~ek_sk.1,
                                                                                                ~fqdn_router.1,
                                                                                                ~ssk_nms.1,
                                                                                                ~ssk_ra.1,
                                                                                                ~tid.1, ak_h,
                                                                                                ak_spk.1,
                                                                                                credentialBlob,
                                                                                                fqdn_nms.1,
                                                                                                signature_cert_nms
                                                           ) ▶₀ #t2.8 )
                                                      case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                      solve( TPM_SendCommand( 'TPM2_StartAuthSession'
                                                             ) @ #t2.9 )
                                                        case eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111
                                                        solve( state_11111111111111112111111111111( ~RouterID.1,
                                                                                                    ~ServerID.1,
                                                                                                    ~ek_h.1,
                                                                                                    ~ek_sk.1,
                                                                                                    ~fqdn_router.1,
                                                                                                    ~ssk_nms.1,
                                                                                                    ~ssk_ra.1,
                                                                                                    ~tid.1,
                                                                                                    ak_h,
                                                                                                    ak_spk.1,
                                                                                                    credentialBlob,
                                                                                                    fqdn_nms.1,
                                                                                                    signature_cert_nms
                                                               ) ▶₀ #t2.9 )
                                                          case inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111
                                                          by solve( !KU( ~ssk_ra ) @ #vk.24 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case case_3
                          solve( ((#vr.21 < #vr.76) ∧
                                  (∃ #t2.
                                    (Unlock_2( '2', ~n.1, 'device' ) @ #t2)
                                   ∧
                                    (#vr.21 < #t2) ∧
                                    (#t2 < #vr.76) ∧
                                    (∀ #t0 pp. (Unlock( pp, ~n.1, 'device' ) @ #t0) ⇒ #t0 = #t2) ∧
                                    (∀ pp lpp #t0.
                                      (Lock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t0 = #vr.21) ∨ (#t2 < #t0))) ∧
                                    (∀ pp lpp #t0.
                                      (Unlock( pp, lpp, 'device' ) @ #t0)
                                     ⇒
                                      ((#t0 < #vr.21) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                                 (#vr.76 < #vr.21) )
                            case case_1
                            solve( TPM_SendCommand( <'TPM2_Create', authPolicy> ) @ #t2.5 )
                              case eventTPMSendCommandTPMCreatenil_0_111111111111111121111111
                              solve( state_111111111111111121111111( ~RouterID.1, ~ServerID.1, ~ek_h.1,
                                                                     ~ek_sk.1, ~fqdn_router.1, ~ssk_nms.1,
                                                                     ~ssk_ra.1, ~tid.1, fqdn_nms.1,
                                                                     signature_cert_nms
                                     ) ▶₀ #t2.3 )
                                case eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111
                                solve( Unlock_2( '2', ~n.1, 'device' ) @ #t2.6 )
                                  case unlockdevice_0_1111111111111111111111211111111111
                                  solve( state_1111111111111111111111211111111111( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1,
                                                                                   k_sk.1, ~n.1
                                         ) ▶₀ #t2.4 )
                                    case TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111
                                    by contradiction /* cyclic */
                                  qed
                                next
                                  case unlockdevice_0_11111111111111111111112111111112
                                  by solve( state_11111111111111111111112111111112( ~RouterID.1,
                                                                                    ~ServerID.1, ~ek_h.1,
                                                                                    ~ek_sk.1, ~ssk_nms.1,
                                                                                    ~ssk_ra.1, a_ap, a_h,
                                                                                    a_pk, a_sh.1, a_sh_pd,
                                                                                    credentialBlob, k_h.1,
                                                                                    k_sk.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                next
                                  case unlockdevice_0_1111111111111111111111211111112
                                  by solve( state_1111111111111111111111211111112( ~RouterID.1,
                                                                                   ~ServerID.1, ~ek_h.1,
                                                                                   ~ek_sk.1, ~ssk_nms.1,
                                                                                   ~ssk_ra.1, a_ap, a_h, a_pk,
                                                                                   a_sh.1, a_sh_pd,
                                                                                   credentialBlob, k_h.1, ~n.1
                                            ) ▶₀ #t2.4 )
                                qed
                              qed
                            qed
                          next
                            case case_2
                            solve( state_1111111111111111111111111111111111( ~RouterID.1,
                                                                             ~ServerID.1, ~ek_h.1, ~ek_sk.1,
                                                                             ~k_h.1, ~k_sk.1, ~ssk_nms.1,
                                                                             ~ssk_ra.1, authPolicy.1, ~n
                                   ) ▶₀ #t2.3 )
                              case outkhpkksk_0_111111111111111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111
              by contradiction /* from formulas */
            qed
          qed
        qed
      qed
    qed
  next
    case case_2
    solve( (#t3 < #t1)  ∥ (#t1 < #t3) )
      case case_1
      solve( state_11111111111111112111111111111111111111111( ~RouterID,
                                                              ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router,
                                                              ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk,
                                                              challenge, credentialBlob, fqdn_nms,
                                                              signature_cert_ak, signature_cert_nms
             ) ▶₀ #t1 )
        case ifverifysignaturecertakakspkfqdnrouterpksskratrue_0_1111111111111111211111111111111111111111
        solve( state_11111111111111112111111111111111111111111( ~RouterID.1,
                                                                ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router,
                                                                ~ssk_nms.1, ~ssk_ra.1, ~tid.1, ak_h.1,
                                                                ak_sh.1, ak_spk, challenge.1,
                                                                credentialBlob.1, fqdn_nms.1,
                                                                sign(<ak_spk, ~fqdn_router>, ~ssk_ra),
                                                                signature_cert_nms
               ) ▶₀ #t3 )
          case ifverifysignaturecertakakspkfqdnrouterpksskratrue_0_1111111111111111211111111111111111111111
          by contradiction /* cyclic */
        qed
      qed
    next
      case case_2
      solve( state_11111111111111112111111111111111111111111( ~RouterID,
                                                              ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router,
                                                              ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk,
                                                              challenge, credentialBlob, fqdn_nms,
                                                              signature_cert_ak, signature_cert_nms
             ) ▶₀ #t1 )
        case ifverifysignaturecertakakspkfqdnrouterpksskratrue_0_1111111111111111211111111111111111111111
        solve( state_11111111111111112111111111111111111111111( ~RouterID.1,
                                                                ~ServerID.1, ~ek_h.1, ~ek_sk.1, ~fqdn_router,
                                                                ~ssk_nms.1, ~ssk_ra.1, ~tid.1, ak_h.1,
                                                                ak_sh.1, ak_spk, challenge.1,
                                                                credentialBlob.1, fqdn_nms.1,
                                                                sign(<ak_spk, ~fqdn_router>, ~ssk_ra),
                                                                signature_cert_nms
               ) ▶₀ #t3 )
          case ifverifysignaturecertakakspkfqdnrouterpksskratrue_0_1111111111111111211111111111111111111111
          by contradiction /* cyclic */
        qed
      qed
    qed
  qed
next
  case case_2
  solve( (∀ #t2.
           (RouterRunning( ~RouterID, ~ServerID, ~challenge ) @ #t2)
          ⇒
           ¬(#t2 < #t1))  ∥
         (∃ X2 Y2 #t3.
           (ServerCommit( X2, Y2, ~challenge ) @ #t3) ∧ ¬(#t3 = #t1)) )
    case case_1
    solve( state_111111111111111211111111111( ~RouterID, ~ServerID,
                                              ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk,
                                              fqdn_router
           ) ▶₀ #t1 )
      case eventServerRunningServerIDRouterIDakspkfqdnroutersignakspkfqdnroutersskra_0_11111111111111121111111111
      solve( !KU( ~challenge ) @ #vk.2 )
        case outRAenrollcertchallenge_0_11111111111111112111111111111111111111
        by contradiction /* from formulas */
      qed
    qed
  next
    case case_2
    solve( (#t3 < #t1)  ∥ (#t1 < #t3) )
      case case_1
      solve( state_111111111111111211111111111( ~RouterID, ~ServerID,
                                                ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra,
                                                ak_spk, fqdn_router
             ) ▶₀ #t1 )
        case eventServerRunningServerIDRouterIDakspkfqdnroutersignakspkfqdnroutersskra_0_11111111111111121111111111
        solve( state_111111111111111211111111111( ~RouterID.1, ~ServerID.1,
                                                  ~challenge, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                  ~ssk_ra.1, ak_spk.1, fqdn_router.1
               ) ▶₀ #t3 )
          case eventServerRunningServerIDRouterIDakspkfqdnroutersignakspkfqdnroutersskra_0_11111111111111121111111111
          by contradiction /* cyclic */
        qed
      qed
    next
      case case_2
      solve( state_111111111111111211111111111( ~RouterID, ~ServerID,
                                                ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra,
                                                ak_spk, fqdn_router
             ) ▶₀ #t1 )
        case eventServerRunningServerIDRouterIDakspkfqdnroutersignakspkfqdnroutersskra_0_11111111111111121111111111
        solve( state_111111111111111211111111111( ~RouterID.1, ~ServerID.1,
                                                  ~challenge, ~ek_h.1, ~ek_sk.1, ~fqdn_nms.1, ~ssk_nms.1,
                                                  ~ssk_ra.1, ak_spk.1, fqdn_router.1
               ) ▶₀ #t3 )
          case eventServerRunningServerIDRouterIDakspkfqdnroutersignakspkfqdnroutersskra_0_11111111111111121111111111
          by contradiction /* cyclic */
        qed
      qed
    qed
  qed
qed

rule (modulo E) Init[color=#ffffff process=new ~ek_sk;]:
   [ ] --[ Init( ) ]-> [ state_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) neweksk_0_[color=#ffffff process=new ~ek_sk;]:
   [ state_( ), Fr( ~ek_sk ) ] --> [ state_1( ~ek_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outpkeksk_0_1[color=#ffffff process=out(pk(~ek_sk));]:
   [ state_1( ~ek_sk ) ] --> [ state_11( ~ek_sk ), Out( pk(~ek_sk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSecretKeyEKeksk_0_11[color=#ffffff process=event SecretKey( 'EK', ~ek_sk );]:
   [ state_11( ~ek_sk ) ]
  --[ SecretKey( 'EK', ~ek_sk ) ]->
   [ state_111( ~ek_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newekh_0_111[color=#ffffff process=new ~ek_h;]:
   [ state_111( ~ek_sk ), Fr( ~ek_h ) ] --> [ state_1111( ~ek_h, ~ek_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outekh_0_1111[color=#ffffff process=out(~ek_h);]:
   [ state_1111( ~ek_h, ~ek_sk ) ]
  -->
   [ state_11111( ~ek_h, ~ek_sk ), Out( ~ek_h ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newRouterID_0_11111[color=#ffffff process=new ~RouterID;]:
   [ state_11111( ~ek_h, ~ek_sk ), Fr( ~RouterID ) ]
  -->
   [ state_111111( ~RouterID, ~ek_h, ~ek_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outRouterID_0_111111[color=#ffffff process=out(~RouterID);]:
   [ state_111111( ~RouterID, ~ek_h, ~ek_sk ) ]
  -->
   [ state_1111111( ~RouterID, ~ek_h, ~ek_sk ), Out( ~RouterID ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newServerID_0_1111111[color=#ffffff process=new ~ServerID;]:
   [ state_1111111( ~RouterID, ~ek_h, ~ek_sk ), Fr( ~ServerID ) ]
  -->
   [ state_11111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outServerID_0_11111111[color=#ffffff process=out(~ServerID);]:
   [ state_11111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk ) ]
  -->
   [
   state_111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk ), Out( ~ServerID )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newsskra_0_111111111[color=#ffffff process=new ~ssk_ra;]:
   [ state_111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk ), Fr( ~ssk_ra ) ]
  -->
   [ state_1111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_ra ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outpksskra_0_1111111111[color=#ffffff process=out(pk(~ssk_ra));]:
   [ state_1111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_ra ) ]
  -->
   [
   state_11111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_ra ),
   Out( pk(~ssk_ra) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSecretKeyRAKsskra_0_11111111111[color=#ffffff process=event SecretKey( 'RAK', ~ssk_ra );]:
   [ state_11111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_ra ) ]
  --[ SecretKey( 'RAK', ~ssk_ra ) ]->
   [ state_111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_ra ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newssknms_0_111111111111[color=#ffffff process=new ~ssk_nms;]:
   [
   state_111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_ra ),
   Fr( ~ssk_nms )
   ]
  -->
   [
   state_1111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                        ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outpkssknms_0_1111111111111[color=#ffffff process=out(pk(~ssk_nms));]:
   [
   state_1111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                        ~ssk_ra
   )
   ]
  -->
   [
   state_11111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                         ~ssk_ra
   ),
   Out( pk(~ssk_nms) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSecretKeyNMSssknms_0_11111111111111[color=#ffffff process=event SecretKey( 'NMS', ~ssk_nms );]:
   [
   state_11111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                         ~ssk_ra
   )
   ]
  --[ SecretKey( 'NMS', ~ssk_nms ) ]->
   [
   state_111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                          ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111[color=#807f40 process=|]:
   [
   state_111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                          ~ssk_ra
   )
   ]
  -->
   [
   state_1111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                           ~ssk_ra
   ),
   state_1111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                           ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_1111111111111111[color=#807f40 process=|]:
   [
   state_1111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                           ~ssk_ra
   )
   ]
  -->
   [
   state_11111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                            ~ssk_ra
   ),
   state_11111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                            ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertauthPolicyekhnil_0_11111111111111111[color=#7b4080 process=insert <'authPolicy', ~ek_h>,nil;]:
   [
   state_11111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                            ~ssk_ra
   )
   ]
  --[ Insert( <'authPolicy', ~ek_h>, nil ) ]->
   [
   state_111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                             ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertprivatePartekheksk_0_111111111111111111[color=#7b4080 process=insert <'privatePart', ~ek_h>,~ek_sk;]:
   [
   state_111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                             ~ssk_ra
   )
   ]
  --[ Insert( <'privatePart', ~ek_h>, ~ek_sk ) ]->
   [
   state_1111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                              ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertpublicPartekhpkeksk_0_1111111111111111111[color=#7b4080 process=insert <'publicPart', ~ek_h>,pk(~ek_sk);]:
   [
   state_1111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                              ~ssk_ra
   )
   ]
  --[ Insert( <'publicPart', ~ek_h>, pk(~ek_sk) ) ]->
   [
   state_11111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                               ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertPCRnil_0_11111111111111111111[color=#7b4080 process=insert 'PCR',nil;]:
   [
   state_11111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                               ~ssk_nms, ~ssk_ra
   )
   ]
  --[ Insert( 'PCR', nil ) ]->
   [
   state_111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111111[color=#7b4080 process=!]:
   [
   state_111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   !semistate_1111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __1_111111111111111111111[color=#7b4080 process=!]:
   [
   !semistate_1111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   state_1111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                 ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_1111111111111111111111[color=#7b4080 process=|]:
   [
   state_1111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                 ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   state_11111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~ssk_nms, ~ssk_ra
   ),
   state_11111111111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111111111[color=#7b4080 process=|]:
   [
   state_11111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   state_111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~ssk_nms, ~ssk_ra
   ),
   state_111111111111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inTPMCreateauthPolicy_0_111111111111111111111111[color=#7b4080 process=in(<'TPM2_Create', authPolicy>);]:
   [
   state_111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~ssk_nms, ~ssk_ra
   ),
   In( <'TPM2_Create', authPolicy> )
   ]
  -->
   [
   state_1111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~ssk_nms, ~ssk_ra, authPolicy
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTPMReceiveCommandTPMCreateauthPolicy_0_1111111111111111111111111[color=#7b4080 process=event TPM_ReceiveCommand( <'TPM2_Create', authPolicy> );]:
   [
   state_1111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~ssk_nms, ~ssk_ra, authPolicy
   )
   ]
  --[ TPM_ReceiveCommand( <'TPM2_Create', authPolicy> ) ]->
   [
   state_11111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~ssk_nms, ~ssk_ra, authPolicy
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newkh_0_11111111111111111111111111[color=#7b4080 process=new ~k_h;]:
   [
   state_11111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~ssk_nms, ~ssk_ra, authPolicy
   ),
   Fr( ~k_h )
   ]
  -->
   [
   state_111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~k_h, ~ssk_nms, ~ssk_ra, authPolicy
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newksk_0_111111111111111111111111111[color=#7b4080 process=new ~k_sk;]:
   [
   state_111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~k_h, ~ssk_nms, ~ssk_ra, authPolicy
   ),
   Fr( ~k_sk )
   ]
  -->
   [
   state_1111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lockdevice_0_1111111111111111111111111111[color=#7b4080 process=lock 'device';]:
   [
   state_1111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy
   ),
   Fr( lock )
   ]
  --[ Lock_0( '0', lock, 'device' ), Lock( '0', lock, 'device' ) ]->
   [
   state_11111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertauthPolicykhauthPolicy_0_11111111111111111111111111111[color=#7b4080 process=insert <'authPolicy', ~k_h>,authPolicy;]:
   [
   state_11111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]
  --[ Insert( <'authPolicy', ~k_h>, authPolicy ) ]->
   [
   state_111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertprivatePartkhksk_0_111111111111111111111111111111[color=#7b4080 process=insert <'privatePart', ~k_h>,~k_sk;]:
   [
   state_111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]
  --[ Insert( <'privatePart', ~k_h>, ~k_sk ) ]->
   [
   state_1111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSecretKeyAKksk_0_1111111111111111111111111111111[color=#7b4080 process=event SecretKey( 'AK', ~k_sk );]:
   [
   state_1111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]
  --[ SecretKey( 'AK', ~k_sk ) ]->
   [
   state_11111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertpublicPartkhpkksk_0_11111111111111111111111111111111[color=#7b4080 process=insert <'publicPart', ~k_h>,pk(~k_sk);]:
   [
   state_11111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]
  --[ Insert( <'publicPart', ~k_h>, pk(~k_sk) ) ]->
   [
   state_111111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outkhpkksk_0_111111111111111111111111111111111[color=#7b4080 process=out(<~k_h, pk(~k_sk)>);]:
   [
   state_111111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]
  -->
   [
   state_1111111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   ),
   Out( <~k_h, pk(~k_sk)> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) unlockdevice_0_1111111111111111111111111111111111[color=#7b4080 process=unlock 'device';]:
   [
   state_1111111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]
  --[ Unlock_0( '0', lock, 'device' ), Unlock( '0', lock, 'device' ) ]->
   [
   state_11111111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111111111111111111111[color=#7b4080 process=0]:
   [
   state_11111111111111111111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~k_h, ~k_sk, ~ssk_nms, ~ssk_ra, authPolicy, lock
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) inTPMStartAuthSession_0_111111111111111111111112[color=#7b4080 process=in('TPM2_StartAuthSession');]:
   [
   state_111111111111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~ssk_nms, ~ssk_ra
   ),
   In( 'TPM2_StartAuthSession' )
   ]
  -->
   [
   state_1111111111111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTPMReceiveCommandTPMStartAuthSession_0_1111111111111111111111121[color=#7b4080 process=event TPM_ReceiveCommand( 'TPM2_StartAuthSession' );]:
   [
   state_1111111111111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~ssk_nms, ~ssk_ra
   )
   ]
  --[ TPM_ReceiveCommand( 'TPM2_StartAuthSession' ) ]->
   [
   state_11111111111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newsh_0_11111111111111111111111211[color=#7b4080 process=new ~s_h;]:
   [
   state_11111111111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~ssk_nms, ~ssk_ra
   ),
   Fr( ~s_h )
   ]
  -->
   [
   state_111111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~s_h, ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lockdevice_0_111111111111111111111112111[color=#7b4080 process=lock 'device';]:
   [
   state_111111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~s_h, ~ssk_nms, ~ssk_ra
   ),
   Fr( lock.1 )
   ]
  --[ Lock_1( '1', lock.1, 'device' ), Lock( '1', lock.1, 'device' ) ]->
   [
   state_1111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   )
   ]

  /*
  rule (modulo AC) lockdevice_0_111111111111111111111112111[color=#7b4080 process=lock 'device';]:
     [
     state_111111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~s_h, ~ssk_nms, ~ssk_ra
     ),
     Fr( lock )
     ]
    --[ Lock_1( '1', lock, 'device' ), Lock( '1', lock, 'device' ) ]->
     [
     state_1111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                         ~s_h, ~ssk_nms, ~ssk_ra, lock
     )
     ]
  */

rule (modulo E) insertpolicyDigestshnil_0_1111111111111111111111121111[color=#7b4080 process=insert <'policyDigest', ~s_h>,nil;]:
   [
   state_1111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   )
   ]
  --[ Insert( <'policyDigest', ~s_h>, nil ) ]->
   [
   state_11111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   )
   ]

  /*
  rule (modulo AC) insertpolicyDigestshnil_0_1111111111111111111111121111[color=#7b4080 process=insert <'policyDigest', ~s_h>,nil;]:
     [
     state_1111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                         ~s_h, ~ssk_nms, ~ssk_ra, lock
     )
     ]
    --[ Insert( <'policyDigest', ~s_h>, nil ) ]->
     [
     state_11111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                          ~s_h, ~ssk_nms, ~ssk_ra, lock
     )
     ]
  */

rule (modulo E) outsh_0_11111111111111111111111211111[color=#7b4080 process=out(~s_h);]:
   [
   state_11111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   )
   ]
  -->
   [
   state_111111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   ),
   Out( ~s_h )
   ]

  /*
  rule (modulo AC) outsh_0_11111111111111111111111211111[color=#7b4080 process=out(~s_h);]:
     [
     state_11111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                          ~s_h, ~ssk_nms, ~ssk_ra, lock
     )
     ]
    -->
     [
     state_111111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock
     ),
     Out( ~s_h )
     ]
  */

rule (modulo E) unlockdevice_0_111111111111111111111112111111[color=#7b4080 process=unlock 'device';]:
   [
   state_111111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   )
   ]
  --[ Unlock_1( '1', lock.1, 'device' ), Unlock( '1', lock.1, 'device' )
  ]->
   [
   state_1111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   )
   ]

  /*
  rule (modulo AC) unlockdevice_0_111111111111111111111112111111[color=#7b4080 process=unlock 'device';]:
     [
     state_111111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock
     )
     ]
    --[ Unlock_1( '1', lock, 'device' ), Unlock( '1', lock, 'device' ) ]->
     [
     state_1111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock
     )
     ]
  */

rule (modulo E) __0_1111111111111111111111121111111[color=#7b4080 process=0]:
   [
   state_1111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock.1
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_1111111111111111111111121111111[color=#7b4080 process=0]:
     [
     state_1111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~s_h, ~ssk_nms, ~ssk_ra, lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) inTPMActivateCredentialahashkhcredentialBlob_0_11111111111111111111112[color=#7b4080 process=in(<'TPM2_ActivateCredential', a_h, a_sh, k_h, credentialBlob>);]:
   [
   state_11111111111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~ssk_nms, ~ssk_ra
   ),
   In( <'TPM2_ActivateCredential', a_h, a_sh, k_h, credentialBlob> )
   ]
  -->
   [
   state_111111111111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTPMReceiveCommandTPMActivateCredentialahashkhcredentialBlob_0_111111111111111111111121[color=#7b4080 process=event TPM_ReceiveCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                     credentialBlob>
);]:
   [
   state_111111111111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h
   )
   ]
  --[
  TPM_ReceiveCommand( <'TPM2_ActivateCredential', a_h, a_sh, k_h, 
                       credentialBlob>
  )
  ]->
   [
   state_1111111111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lockdevice_0_1111111111111111111111211[color=#7b4080 process=lock 'device';]:
   [
   state_1111111111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h
   ),
   Fr( lock.2 )
   ]
  --[ Lock_2( '2', lock.2, 'device' ), Lock( '2', lock.2, 'device' ) ]->
   [
   state_11111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) lockdevice_0_1111111111111111111111211[color=#7b4080 process=lock 'device';]:
     [
     state_1111111111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h
     ),
     Fr( lock )
     ]
    --[ Lock_2( '2', lock, 'device' ), Lock( '2', lock, 'device' ) ]->
     [
     state_11111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) lookuppolicyDigestashasashpd_0_11111111111111111111112111[color=#7b4080 process=lookup <'policyDigest', a_sh> as a_sh_pd]:
   [
   state_11111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock.2
   )
   ]
  --[ IsIn( <'policyDigest', a_sh>, a_sh_pd ) ]->
   [
   state_111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) lookuppolicyDigestashasashpd_0_11111111111111111111112111[color=#7b4080 process=lookup <'policyDigest', a_sh> as a_sh_pd]:
     [
     state_11111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock
     )
     ]
    --[ IsIn( <'policyDigest', a_sh>, a_sh_pd ) ]->
     [
     state_111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) lookuppolicyDigestashasashpd_1_11111111111111111111112111[color=#7b4080 process=lookup <'policyDigest', a_sh> as a_sh_pd]:
   [
   state_11111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock.2
   )
   ]
  --[ IsNotSet( <'policyDigest', a_sh> ) ]->
   [
   state_111111111111111111111121112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) lookuppolicyDigestashasashpd_1_11111111111111111111112111[color=#7b4080 process=lookup <'policyDigest', a_sh> as a_sh_pd]:
     [
     state_11111111111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock
     )
     ]
    --[ IsNotSet( <'policyDigest', a_sh> ) ]->
     [
     state_111111111111111111111121112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) lookupauthPolicyahasaap_0_111111111111111111111121111[color=#7b4080 process=lookup <'authPolicy', a_h> as a_ap]:
   [
   state_111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock.2
   )
   ]
  --[ IsIn( <'authPolicy', a_h>, a_ap ) ]->
   [
   state_1111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                       lock.2
   )
   ]

  /*
  rule (modulo AC) lookupauthPolicyahasaap_0_111111111111111111111121111[color=#7b4080 process=lookup <'authPolicy', a_h> as a_ap]:
     [
     state_111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock
     )
     ]
    --[ IsIn( <'authPolicy', a_h>, a_ap ) ]->
     [
     state_1111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                         ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                         lock
     )
     ]
  */

rule (modulo E) lookupauthPolicyahasaap_1_111111111111111111111121111[color=#7b4080 process=lookup <'authPolicy', a_h> as a_ap]:
   [
   state_111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock.2
   )
   ]
  --[ IsNotSet( <'authPolicy', a_h> ) ]->
   [
   state_1111111111111111111111211112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) lookupauthPolicyahasaap_1_111111111111111111111121111[color=#7b4080 process=lookup <'authPolicy', a_h> as a_ap]:
     [
     state_111111111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock
     )
     ]
    --[ IsNotSet( <'authPolicy', a_h> ) ]->
     [
     state_1111111111111111111111211112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                         ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) ifaapashpd_0_1111111111111111111111211111[color=#7b4080 process=if a_ap=a_sh_pd]:
   [
   state_1111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                       lock.2
   )
   ]
  --[ Pred_Eq( a_ap, a_sh_pd ) ]->
   [
   state_11111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                        lock.2
   )
   ]

  /*
  rule (modulo AC) ifaapashpd_0_1111111111111111111111211111[color=#7b4080 process=if a_ap=a_sh_pd]:
     [
     state_1111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                         ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                         lock
     )
     ]
    --[ Pred_Eq( a_ap, a_sh_pd ) ]->
     [
     state_11111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                          ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                          lock
     )
     ]
  */

rule (modulo E) ifaapashpd_1_1111111111111111111111211111[color=#7b4080 process=if a_ap=a_sh_pd]:
   [
   state_1111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                       lock.2
   )
   ]
  --[ Pred_Not_Eq( a_ap, a_sh_pd ) ]->
   [
   state_11111111111111111111112111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                        lock.2
   )
   ]

  /*
  rule (modulo AC) ifaapashpd_1_1111111111111111111111211111[color=#7b4080 process=if a_ap=a_sh_pd]:
     [
     state_1111111111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                         ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                         lock
     )
     ]
    --[ Pred_Not_Eq( a_ap, a_sh_pd ) ]->
     [
     state_11111111111111111111112111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                          ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                          lock
     )
     ]
  */

rule (modulo E) lookuppublicPartahasapk_0_11111111111111111111112111111[color=#7b4080 process=lookup <'publicPart', a_h> as a_pk]:
   [
   state_11111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                        lock.2
   )
   ]
  --[ IsIn( <'publicPart', a_h>, a_pk ) ]->
   [
   state_111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                         credentialBlob, k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) lookuppublicPartahasapk_0_11111111111111111111112111111[color=#7b4080 process=lookup <'publicPart', a_h> as a_pk]:
     [
     state_11111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                          ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                          lock
     )
     ]
    --[ IsIn( <'publicPart', a_h>, a_pk ) ]->
     [
     state_111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) lookuppublicPartahasapk_1_11111111111111111111112111111[color=#7b4080 process=lookup <'publicPart', a_h> as a_pk]:
   [
   state_11111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                        lock.2
   )
   ]
  --[ IsNotSet( <'publicPart', a_h> ) ]->
   [
   state_111111111111111111111121111112( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob,
                                         k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) lookuppublicPartahasapk_1_11111111111111111111112111111[color=#7b4080 process=lookup <'publicPart', a_h> as a_pk]:
     [
     state_11111111111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                          ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                          lock
     )
     ]
    --[ IsNotSet( <'publicPart', a_h> ) ]->
     [
     state_111111111111111111111121111112( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd,
                                           credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) lookupprivatePartkhasksk_0_111111111111111111111121111111[color=#7b4080 process=lookup <'privatePart', k_h> as k_sk]:
   [
   state_111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                         credentialBlob, k_h, lock.2
   )
   ]
  --[ IsIn( <'privatePart', k_h>, k_sk ) ]->
   [
   state_1111111111111111111111211111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                          credentialBlob, k_h, k_sk, lock.2
   )
   ]

  /*
  rule (modulo AC) lookupprivatePartkhasksk_0_111111111111111111111121111111[color=#7b4080 process=lookup <'privatePart', k_h> as k_sk]:
     [
     state_111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, lock
     )
     ]
    --[ IsIn( <'privatePart', k_h>, k_sk ) ]->
     [
     state_1111111111111111111111211111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, k_sk, lock
     )
     ]
  */

rule (modulo E) lookupprivatePartkhasksk_1_111111111111111111111121111111[color=#7b4080 process=lookup <'privatePart', k_h> as k_sk]:
   [
   state_111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                         credentialBlob, k_h, lock.2
   )
   ]
  --[ IsNotSet( <'privatePart', k_h> ) ]->
   [
   state_1111111111111111111111211111112( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                          credentialBlob, k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) lookupprivatePartkhasksk_1_111111111111111111111121111111[color=#7b4080 process=lookup <'privatePart', k_h> as k_sk]:
     [
     state_111111111111111111111121111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, lock
     )
     ]
    --[ IsNotSet( <'privatePart', k_h> ) ]->
     [
     state_1111111111111111111111211111112( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) ifverifyCredentialapkkskcredentialBlobtrue_0_1111111111111111111111211111111[color=#7b4080 process=if verifyCredential(a_pk, k_sk, credentialBlob)=true]:
   [
   state_1111111111111111111111211111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                          credentialBlob, k_h, k_sk, lock.2
   )
   ]
  --[ Pred_Eq( verifyCredential(a_pk, k_sk, credentialBlob), true ) ]->
   [
   state_11111111111111111111112111111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, k_sk, lock.2
   )
   ]

  /*
  rule (modulo AC) ifverifyCredentialapkkskcredentialBlobtrue_0_1111111111111111111111211111111[color=#7b4080 process=if verifyCredential(a_pk, k_sk, credentialBlob)=true]:
     [
     state_1111111111111111111111211111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, k_sk, lock
     )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     state_11111111111111111111112111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, k_sk, lock
     )
     ]
    variants (modulo AC)
    1. a_pk  = a_pk.19
       credentialBlob
             = credentialBlob.19
       k_sk  = k_sk.19
       z     = verifyCredential(a_pk.19, k_sk.19, credentialBlob.19)
    
    2. a_pk  = x.19
       credentialBlob
             = makeCredential(pk(x.22), x.23, x.19)
       k_sk  = x.22
       z     = true
  */

rule (modulo E) ifverifyCredentialapkkskcredentialBlobtrue_1_1111111111111111111111211111111[color=#7b4080 process=if verifyCredential(a_pk, k_sk, credentialBlob)=true]:
   [
   state_1111111111111111111111211111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                          credentialBlob, k_h, k_sk, lock.2
   )
   ]
  --[ Pred_Not_Eq( verifyCredential(a_pk, k_sk, credentialBlob), true ) ]->
   [
   state_11111111111111111111112111111112( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, k_sk, lock.2
   )
   ]

  /*
  rule (modulo AC) ifverifyCredentialapkkskcredentialBlobtrue_1_1111111111111111111111211111111[color=#7b4080 process=if verifyCredential(a_pk, k_sk, credentialBlob)=true]:
     [
     state_1111111111111111111111211111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, k_sk, lock
     )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [
     state_11111111111111111111112111111112( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, k_sk, lock
     )
     ]
    variants (modulo AC)
    1. a_pk  = a_pk.19
       credentialBlob
             = credentialBlob.19
       k_sk  = k_sk.19
       z     = verifyCredential(a_pk.19, k_sk.19, credentialBlob.19)
    
    2. a_pk  = x.19
       credentialBlob
             = makeCredential(pk(x.22), x.23, x.19)
       k_sk  = x.22
       z     = true
  */

rule (modulo E) eventReceiveactivateCredentialapkkskcredentialBlob_0_11111111111111111111112111111111[color=#7b4080 process=event Receive( activateCredential(a_pk, k_sk, credentialBlob) );]:
   [
   state_11111111111111111111112111111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, k_sk, lock.2
   )
   ]
  --[ Receive( activateCredential(a_pk, k_sk, credentialBlob) ) ]->
   [
   state_111111111111111111111121111111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, k_sk, lock.2
   )
   ]

  /*
  rule (modulo AC) eventReceiveactivateCredentialapkkskcredentialBlob_0_11111111111111111111112111111111[color=#7b4080 process=event Receive( activateCredential(a_pk, k_sk, credentialBlob) );]:
     [
     state_11111111111111111111112111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, k_sk, lock
     )
     ]
    --[ Receive( z ) ]->
     [
     state_111111111111111111111121111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                              credentialBlob, k_h, k_sk, lock
     )
     ]
    variants (modulo AC)
    1. a_pk  = a_pk.19
       credentialBlob
             = credentialBlob.19
       k_sk  = k_sk.19
       z     = activateCredential(a_pk.19, k_sk.19, credentialBlob.19)
    
    2. a_pk  = x.19
       credentialBlob
             = makeCredential(pk(x.22), x.23, x.19)
       k_sk  = x.22
       z     = x.23
  */

rule (modulo E) TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111[color=#7b4080 process= [ ]
-->
 [ Tpm2ActivateOut( activateCredential(a_pk, k_sk, credentialBlob) )
 ];]:
   [
   state_111111111111111111111121111111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, k_sk, lock.2
   )
   ]
  -->
   [
   state_1111111111111111111111211111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, k_sk, lock.2
   ),
   Tpm2ActivateOut( activateCredential(a_pk, k_sk, credentialBlob) )
   ]

  /*
  rule (modulo AC) TpmActivateOutactivateCredentialapkkskcredentialBlob_0_111111111111111111111121111111111[color=#7b4080 process= [ ]
-->
 [ Tpm2ActivateOut( activateCredential(a_pk, k_sk, credentialBlob) )
 ];]:
     [
     state_111111111111111111111121111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                              credentialBlob, k_h, k_sk, lock
     )
     ]
    -->
     [
     state_1111111111111111111111211111111111( ~RouterID, ~ServerID, ~ek_h,
                                               ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                               credentialBlob, k_h, k_sk, lock
     ),
     Tpm2ActivateOut( z )
     ]
    variants (modulo AC)
    1. a_pk  = a_pk.19
       credentialBlob
             = credentialBlob.19
       k_sk  = k_sk.19
       z     = activateCredential(a_pk.19, k_sk.19, credentialBlob.19)
    
    2. a_pk  = x.19
       credentialBlob
             = makeCredential(pk(x.22), x.23, x.19)
       k_sk  = x.22
       z     = x.23
  */

rule (modulo E) unlockdevice_0_1111111111111111111111211111111111[color=#7b4080 process=unlock 'device';]:
   [
   state_1111111111111111111111211111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, k_sk, lock.2
   )
   ]
  --[ Unlock_2( '2', lock.2, 'device' ), Unlock( '2', lock.2, 'device' )
  ]->
   [
   state_11111111111111111111112111111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                              credentialBlob, k_h, k_sk, lock.2
   )
   ]

  /*
  rule (modulo AC) unlockdevice_0_1111111111111111111111211111111111[color=#7b4080 process=unlock 'device';]:
     [
     state_1111111111111111111111211111111111( ~RouterID, ~ServerID, ~ek_h,
                                               ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                               credentialBlob, k_h, k_sk, lock
     )
     ]
    --[ Unlock_2( '2', lock, 'device' ), Unlock( '2', lock, 'device' ) ]->
     [
     state_11111111111111111111112111111111111( ~RouterID, ~ServerID, ~ek_h,
                                                ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                                credentialBlob, k_h, k_sk, lock
     )
     ]
  */

rule (modulo E) __0_11111111111111111111112111111111111[color=#7b4080 process=0]:
   [
   state_11111111111111111111112111111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                              credentialBlob, k_h, k_sk, lock.2
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_11111111111111111111112111111111111[color=#7b4080 process=0]:
     [
     state_11111111111111111111112111111111111( ~RouterID, ~ServerID, ~ek_h,
                                                ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                                credentialBlob, k_h, k_sk, lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) unlockdevice_0_11111111111111111111112111111112[color=#7b4080 process=unlock 'device';]:
   [
   state_11111111111111111111112111111112( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, k_sk, lock.2
   )
   ]
  --[ Unlock_2( '2', lock.2, 'device' ), Unlock( '2', lock.2, 'device' )
  ]->
   [
   state_111111111111111111111121111111121( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, k_sk, lock.2
   )
   ]

  /*
  rule (modulo AC) unlockdevice_0_11111111111111111111112111111112[color=#7b4080 process=unlock 'device';]:
     [
     state_11111111111111111111112111111112( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, k_sk, lock
     )
     ]
    --[ Unlock_2( '2', lock, 'device' ), Unlock( '2', lock, 'device' ) ]->
     [
     state_111111111111111111111121111111121( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                              credentialBlob, k_h, k_sk, lock
     )
     ]
  */

rule (modulo E) __0_111111111111111111111121111111121[color=#7b4080 process=0]:
   [
   state_111111111111111111111121111111121( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, k_sk, lock.2
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_111111111111111111111121111111121[color=#7b4080 process=0]:
     [
     state_111111111111111111111121111111121( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                              credentialBlob, k_h, k_sk, lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) unlockdevice_0_1111111111111111111111211111112[color=#7b4080 process=unlock 'device';]:
   [
   state_1111111111111111111111211111112( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                          credentialBlob, k_h, lock.2
   )
   ]
  --[ Unlock_2( '2', lock.2, 'device' ), Unlock( '2', lock.2, 'device' )
  ]->
   [
   state_11111111111111111111112111111121( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, lock.2
   )
   ]

  /*
  rule (modulo AC) unlockdevice_0_1111111111111111111111211111112[color=#7b4080 process=unlock 'device';]:
     [
     state_1111111111111111111111211111112( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                            credentialBlob, k_h, lock
     )
     ]
    --[ Unlock_2( '2', lock, 'device' ), Unlock( '2', lock, 'device' ) ]->
     [
     state_11111111111111111111112111111121( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, lock
     )
     ]
  */

rule (modulo E) __0_11111111111111111111112111111121[color=#7b4080 process=0]:
   [
   state_11111111111111111111112111111121( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                           credentialBlob, k_h, lock.2
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_11111111111111111111112111111121[color=#7b4080 process=0]:
     [
     state_11111111111111111111112111111121( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_pk, a_sh, a_sh_pd,
                                             credentialBlob, k_h, lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) __0_111111111111111111111121111112[color=#7b4080 process=0]:
   [
   state_111111111111111111111121111112( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob,
                                         k_h, lock.2
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_111111111111111111111121111112[color=#7b4080 process=0]:
     [
     state_111111111111111111111121111112( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd,
                                           credentialBlob, k_h, lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) __0_11111111111111111111112111112[color=#7b4080 process=0]:
   [
   state_11111111111111111111112111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                        lock.2
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_11111111111111111111112111112[color=#7b4080 process=0]:
     [
     state_11111111111111111111112111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                          ~ssk_nms, ~ssk_ra, a_ap, a_h, a_sh, a_sh_pd, credentialBlob, k_h,
                                          lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) __0_1111111111111111111111211112[color=#7b4080 process=0]:
   [
   state_1111111111111111111111211112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock.2
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_1111111111111111111111211112[color=#7b4080 process=0]:
     [
     state_1111111111111111111111211112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                         ~ssk_nms, ~ssk_ra, a_h, a_sh, a_sh_pd, credentialBlob, k_h, lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) __0_111111111111111111111121112[color=#7b4080 process=0]:
   [
   state_111111111111111111111121112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock.2
   )
   ]
  -->
   [ ]

  /*
  rule (modulo AC) __0_111111111111111111111121112[color=#7b4080 process=0]:
     [
     state_111111111111111111111121112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~ssk_nms, ~ssk_ra, a_h, a_sh, credentialBlob, k_h, lock
     )
     ]
    -->
     [ ]
  */

rule (modulo E) newfqdnrouter_0_11111111111111112[color=#454080 process=new ~fqdn_router;]:
   [
   state_11111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                            ~ssk_ra
   ),
   Fr( ~fqdn_router )
   ]
  -->
   [
   state_111111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                             ~fqdn_router, ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outfqdnrouter_0_111111111111111121[color=#454080 process=out(~fqdn_router);]:
   [
   state_111111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                             ~fqdn_router, ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   state_1111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                              ~fqdn_router, ~ssk_nms, ~ssk_ra
   ),
   Out( ~fqdn_router )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newtid_0_1111111111111111211[color=#454080 process=new ~tid;]:
   [
   state_1111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                              ~fqdn_router, ~ssk_nms, ~ssk_ra
   ),
   Fr( ~tid )
   ]
  -->
   [
   state_11111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                               ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outtid_0_11111111111111112111[color=#454080 process=out(~tid);]:
   [
   state_11111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                               ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid
   )
   ]
  -->
   [
   state_111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid
   ),
   Out( ~tid )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inpksskrafqdnnmssignaturecertnms_0_111111111111111121111[color=#454080 process=in(<<pk(~ssk_ra), fqdn_nms>, signature_cert_nms>);]:
   [
   state_111111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid
   ),
   In( <<pk(~ssk_ra), fqdn_nms>, signature_cert_nms> )
   ]
  -->
   [
   state_1111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                 ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) ifverifysignaturecertnmspksskrafqdnnmspkssknmstrue_0_1111111111111111211111[color=#454080 process=if verify(signature_cert_nms, <pk(~ssk_ra), fqdn_nms>, pk(~ssk_nms))=true]:
   [
   state_1111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                 ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]
  --[
  Pred_Eq( verify(signature_cert_nms, <pk(~ssk_ra), fqdn_nms>,
                  pk(~ssk_nms)),
           true
  )
  ]->
   [
   state_11111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]

  /*
  rule (modulo AC) ifverifysignaturecertnmspksskrafqdnnmspkssknmstrue_0_1111111111111111211111[color=#454080 process=if verify(signature_cert_nms, <pk(~ssk_ra), fqdn_nms>, pk(~ssk_nms))=true]:
     [
     state_1111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
     )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     state_11111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
     )
     ]
    variants (modulo AC)
    1. ~ssk_nms
             = ~ssk_nms.12
       ~ssk_ra
             = ~ssk_ra.12
       fqdn_nms
             = fqdn_nms.12
       signature_cert_nms
             = signature_cert_nms.12
       z     = verify(signature_cert_nms.12, <pk(~ssk_ra.12), fqdn_nms.12>,
                      pk(~ssk_nms.12))
    
    2. ~ssk_nms
             = ~x.12
       ~ssk_ra
             = ~x.13
       fqdn_nms
             = x.15
       signature_cert_nms
             = sign(<pk(~x.13), x.15>, ~x.12)
       z     = true
  */

rule (modulo E) ifverifysignaturecertnmspksskrafqdnnmspkssknmstrue_1_1111111111111111211111[color=#454080 process=if verify(signature_cert_nms, <pk(~ssk_ra), fqdn_nms>, pk(~ssk_nms))=true]:
   [
   state_1111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                 ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]
  --[
  Pred_Not_Eq( verify(signature_cert_nms, <pk(~ssk_ra), fqdn_nms>,
                      pk(~ssk_nms)),
               true
  )
  ]->
   [
   state_11111111111111112111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]

  /*
  rule (modulo AC) ifverifysignaturecertnmspksskrafqdnnmspkssknmstrue_1_1111111111111111211111[color=#454080 process=if verify(signature_cert_nms, <pk(~ssk_ra), fqdn_nms>, pk(~ssk_nms))=true]:
     [
     state_1111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
     )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [
     state_11111111111111112111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
     )
     ]
    variants (modulo AC)
    1. ~ssk_nms
             = ~ssk_nms.12
       ~ssk_ra
             = ~ssk_ra.12
       fqdn_nms
             = fqdn_nms.12
       signature_cert_nms
             = signature_cert_nms.12
       z     = verify(signature_cert_nms.12, <pk(~ssk_ra.12), fqdn_nms.12>,
                      pk(~ssk_nms.12))
    
    2. ~ssk_nms
             = ~x.12
       ~ssk_ra
             = ~x.13
       fqdn_nms
             = x.15
       signature_cert_nms
             = sign(<pk(~x.13), x.15>, ~x.12)
       z     = true
  */

rule (modulo E) eventHasKeyNMSRouterIDpkssknms_0_11111111111111112111111[color=#454080 process=event HasKey( 'NMS', ~RouterID, pk(~ssk_nms) );]:
   [
   state_11111111111111112111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]
  --[ HasKey( 'NMS', ~RouterID, pk(~ssk_nms) ) ]->
   [
   state_111111111111111121111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTPMSendCommandTPMCreatenil_0_111111111111111121111111[color=#454080 process=event TPM_SendCommand( <'TPM2_Create', nil> );]:
   [
   state_111111111111111121111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                   ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]
  --[ TPM_SendCommand( <'TPM2_Create', nil> ) ]->
   [
   state_1111111111111111211111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outTPMCreatenil_0_1111111111111111211111111[color=#454080 process=out(<'TPM2_Create', nil>);]:
   [
   state_1111111111111111211111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                    ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]
  -->
   [
   state_11111111111111112111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   ),
   Out( <'TPM2_Create', nil> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inakhakspk_0_11111111111111112111111111[color=#454080 process=in(<ak_h, ak_spk>);]:
   [
   state_11111111111111112111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                     ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   ),
   In( <ak_h, ak_spk> )
   ]
  -->
   [
   state_111111111111111121111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk, fqdn_nms,
                                      signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outRAenrollrequestfqdnrouterpkekskakspk_0_111111111111111121111111111[color=#454080 process=out(<'RA_enrollrequest', ~fqdn_router, pk(~ek_sk), ak_spk>);]:
   [
   state_111111111111111121111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                      ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk, fqdn_nms,
                                      signature_cert_nms
   )
   ]
  -->
   [
   state_1111111111111111211111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk, fqdn_nms,
                                       signature_cert_nms
   ),
   Out( <'RA_enrollrequest', ~fqdn_router, pk(~ek_sk), ak_spk> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inRAenrollrequestrespcredentialBlob_0_1111111111111111211111111111[color=#454080 process=in(<'RA_enrollrequest_resp', credentialBlob>);]:
   [
   state_1111111111111111211111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                       ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk, fqdn_nms,
                                       signature_cert_nms
   ),
   In( <'RA_enrollrequest_resp', credentialBlob> )
   ]
  -->
   [
   state_11111111111111112111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk, credentialBlob,
                                        fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTPMSendCommandTPMStartAuthSession_0_11111111111111112111111111111[color=#454080 process=event TPM_SendCommand( 'TPM2_StartAuthSession' );]:
   [
   state_11111111111111112111111111111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                        ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk, credentialBlob,
                                        fqdn_nms, signature_cert_nms
   )
   ]
  --[ TPM_SendCommand( 'TPM2_StartAuthSession' ) ]->
   [
   state_111111111111111121111111111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk,
                                         credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outTPMStartAuthSession_0_111111111111111121111111111111[color=#454080 process=out('TPM2_StartAuthSession');]:
   [
   state_111111111111111121111111111111( ~RouterID, ~ServerID, ~ek_h,
                                         ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk,
                                         credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]
  -->
   [
   state_1111111111111111211111111111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk,
                                          credentialBlob, fqdn_nms, signature_cert_nms
   ),
   Out( 'TPM2_StartAuthSession' )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inaksh_0_1111111111111111211111111111111[color=#454080 process=in(ak_sh);]:
   [
   state_1111111111111111211111111111111( ~RouterID, ~ServerID, ~ek_h,
                                          ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_spk,
                                          credentialBlob, fqdn_nms, signature_cert_nms
   ),
   In( ak_sh )
   ]
  -->
   [
   state_11111111111111112111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk,
                                           credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventGenerateAKtidakspk_0_11111111111111112111111111111111[color=#454080 process=event GenerateAK( ~tid, ak_spk );]:
   [
   state_11111111111111112111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                           ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk,
                                           credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]
  --[ GenerateAK( ~tid, ak_spk ) ]->
   [
   state_111111111111111121111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                            ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyEKRouterIDpkeksk_0_111111111111111121111111111111111[color=#454080 process=event HasKey( 'EK', ~RouterID, pk(~ek_sk) );]:
   [
   state_111111111111111121111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                            ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                            ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]
  --[ HasKey( 'EK', ~RouterID, pk(~ek_sk) ) ]->
   [
   state_1111111111111111211111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                             ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTPMSendCommandTPMActivateCredentialakhakshekhcredentialBlob_0_1111111111111111211111111111111111[color=#454080 process=event TPM_SendCommand( <'TPM2_ActivateCredential', ak_h, ak_sh, ~ek_h, 
                  credentialBlob>
);]:
   [
   state_1111111111111111211111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                             ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                             ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]
  --[
  TPM_SendCommand( <'TPM2_ActivateCredential', ak_h, ak_sh, ~ek_h, 
                    credentialBlob>
  )
  ]->
   [
   state_11111111111111112111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                              ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outTPMActivateCredentialakhakshekhcredentialBlob_0_11111111111111112111111111111111111[color=#454080 process=out(<'TPM2_ActivateCredential', ak_h, ak_sh, ~ek_h, credentialBlob>);]:
   [
   state_11111111111111112111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                              ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                              ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   )
   ]
  -->
   [
   state_111111111111111121111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                               ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                               ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   ),
   Out( <'TPM2_ActivateCredential', ak_h, ak_sh, ~ek_h, credentialBlob> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) TpmActivateOutchallenge_0_111111111111111121111111111111111111[color=#454080 process= [ Tpm2ActivateOut( challenge ) ] --> [ ];]:
   [
   state_111111111111111121111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                               ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                               ak_spk, credentialBlob, fqdn_nms, signature_cert_nms
   ),
   Tpm2ActivateOut( challenge )
   ]
  -->
   [
   state_1111111111111111211111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                                ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                                ak_spk, challenge, credentialBlob, fqdn_nms,
                                                signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventRouterRunningRouterIDServerIDchallenge_0_1111111111111111211111111111111111111[color=#454080 process=event RouterRunning( ~RouterID, ~ServerID, challenge );]:
   [
   state_1111111111111111211111111111111111111( ~RouterID, ~ServerID, ~ek_h,
                                                ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h, ak_sh,
                                                ak_spk, challenge, credentialBlob, fqdn_nms,
                                                signature_cert_nms
   )
   ]
  --[ RouterRunning( ~RouterID, ~ServerID, challenge ) ]->
   [
   state_11111111111111112111111111111111111111( ~RouterID, ~ServerID,
                                                 ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                 ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                 signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outRAenrollcertchallenge_0_11111111111111112111111111111111111111[color=#454080 process=out(<'RA_enrollcert', challenge>);]:
   [
   state_11111111111111112111111111111111111111( ~RouterID, ~ServerID,
                                                 ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                 ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                 signature_cert_nms
   )
   ]
  -->
   [
   state_111111111111111121111111111111111111111( ~RouterID, ~ServerID,
                                                  ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                  ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                  signature_cert_nms
   ),
   Out( <'RA_enrollcert', challenge> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inRAenrollcertrespakspkfqdnroutersignaturecertak_0_111111111111111121111111111111111111111[color=#454080 process=in(<'RA_enrollcert_resp', <ak_spk, ~fqdn_router>, signature_cert_ak>);]:
   [
   state_111111111111111121111111111111111111111( ~RouterID, ~ServerID,
                                                  ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                  ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                  signature_cert_nms
   ),
   In( <'RA_enrollcert_resp', <ak_spk, ~fqdn_router>, signature_cert_ak> )
   ]
  -->
   [
   state_1111111111111111211111111111111111111111( ~RouterID, ~ServerID,
                                                   ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                   ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                   signature_cert_ak, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) ifverifysignaturecertakakspkfqdnrouterpksskratrue_0_1111111111111111211111111111111111111111[color=#454080 process=if verify(signature_cert_ak, <ak_spk, ~fqdn_router>, pk(~ssk_ra))=true]:
   [
   state_1111111111111111211111111111111111111111( ~RouterID, ~ServerID,
                                                   ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                   ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                   signature_cert_ak, signature_cert_nms
   )
   ]
  --[
  Pred_Eq( verify(signature_cert_ak, <ak_spk, ~fqdn_router>, pk(~ssk_ra)),
           true
  )
  ]->
   [
   state_11111111111111112111111111111111111111111( ~RouterID, ~ServerID,
                                                    ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                    ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                    signature_cert_ak, signature_cert_nms
   )
   ]

  /*
  rule (modulo AC) ifverifysignaturecertakakspkfqdnrouterpksskratrue_0_1111111111111111211111111111111111111111[color=#454080 process=if verify(signature_cert_ak, <ak_spk, ~fqdn_router>, pk(~ssk_ra))=true]:
     [
     state_1111111111111111211111111111111111111111( ~RouterID, ~ServerID,
                                                     ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                     ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                     signature_cert_ak, signature_cert_nms
     )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     state_11111111111111112111111111111111111111111( ~RouterID, ~ServerID,
                                                      ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                      ak_h, ak_sh, ak_spk, challenge, credentialBlob,
                                                      fqdn_nms, signature_cert_ak, signature_cert_nms
     )
     ]
    variants (modulo AC)
    1. ~fqdn_router
             = ~fqdn_router.18
       ~ssk_ra
             = ~ssk_ra.18
       ak_spk
             = ak_spk.18
       signature_cert_ak
             = signature_cert_ak.18
       z     = verify(signature_cert_ak.18, <ak_spk.18, ~fqdn_router.18>,
                      pk(~ssk_ra.18))
    
    2. ~fqdn_router
             = ~x.18
       ~ssk_ra
             = ~x.20
       ak_spk
             = x.24
       signature_cert_ak
             = sign(<x.24, ~x.18>, ~x.20)
       z     = true
  */

rule (modulo E) ifverifysignaturecertakakspkfqdnrouterpksskratrue_1_1111111111111111211111111111111111111111[color=#454080 process=if verify(signature_cert_ak, <ak_spk, ~fqdn_router>, pk(~ssk_ra))=true]:
   [
   state_1111111111111111211111111111111111111111( ~RouterID, ~ServerID,
                                                   ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, ak_h,
                                                   ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                   signature_cert_ak, signature_cert_nms
   )
   ]
  --[
  Pred_Not_Eq( verify(signature_cert_ak, <ak_spk, ~fqdn_router>,
                      pk(~ssk_ra)),
               true
  )
  ]->
   [
   state_11111111111111112111111111111111111111112( ~RouterID, ~ServerID,
                                                    ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                    ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                    signature_cert_ak, signature_cert_nms
   )
   ]

  /*
  rule (modulo AC) ifverifysignaturecertakakspkfqdnrouterpksskratrue_1_1111111111111111211111111111111111111111[color=#454080 process=if verify(signature_cert_ak, <ak_spk, ~fqdn_router>, pk(~ssk_ra))=true]:
     [
     state_1111111111111111211111111111111111111111( ~RouterID, ~ServerID,
                                                     ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                     ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                     signature_cert_ak, signature_cert_nms
     )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [
     state_11111111111111112111111111111111111111112( ~RouterID, ~ServerID,
                                                      ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                      ak_h, ak_sh, ak_spk, challenge, credentialBlob,
                                                      fqdn_nms, signature_cert_ak, signature_cert_nms
     )
     ]
    variants (modulo AC)
    1. ~fqdn_router
             = ~fqdn_router.18
       ~ssk_ra
             = ~ssk_ra.18
       ak_spk
             = ak_spk.18
       signature_cert_ak
             = signature_cert_ak.18
       z     = verify(signature_cert_ak.18, <ak_spk.18, ~fqdn_router.18>,
                      pk(~ssk_ra.18))
    
    2. ~fqdn_router
             = ~x.18
       ~ssk_ra
             = ~x.20
       ak_spk
             = x.24
       signature_cert_ak
             = sign(<x.24, ~x.18>, ~x.20)
       z     = true
  */

rule (modulo E) eventRouterCommitRouterIDServerIDakspkfqdnroutersignaturecertak_0_11111111111111112111111111111111111111111[color=#454080 process=event RouterCommit( ~RouterID, ~ServerID,
              <<ak_spk, ~fqdn_router>, signature_cert_ak>
);]:
   [
   state_11111111111111112111111111111111111111111( ~RouterID, ~ServerID,
                                                    ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                    ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                    signature_cert_ak, signature_cert_nms
   )
   ]
  --[
  RouterCommit( ~RouterID, ~ServerID,
                <<ak_spk, ~fqdn_router>, signature_cert_ak>
  )
  ]->
   [
   state_111111111111111121111111111111111111111111( ~RouterID, ~ServerID,
                                                     ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                     ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                     signature_cert_ak, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventRouterUseAKRouterIDakspk_0_111111111111111121111111111111111111111111[color=#454080 process=event RouterUseAK( ~RouterID, ak_spk );]:
   [
   state_111111111111111121111111111111111111111111( ~RouterID, ~ServerID,
                                                     ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                     ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                     signature_cert_ak, signature_cert_nms
   )
   ]
  --[ RouterUseAK( ~RouterID, ak_spk ) ]->
   [
   state_1111111111111111211111111111111111111111111( ~RouterID, ~ServerID,
                                                      ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                      ak_h, ak_sh, ak_spk, challenge, credentialBlob,
                                                      fqdn_nms, signature_cert_ak, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventReceiveCertAKRouterIDakspkfqdnroutersignaturecertak_0_1111111111111111211111111111111111111111111[color=#454080 process=event ReceiveCertAK( ~RouterID,
               <<ak_spk, ~fqdn_router>, signature_cert_ak>
);]:
   [
   state_1111111111111111211111111111111111111111111( ~RouterID, ~ServerID,
                                                      ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                      ak_h, ak_sh, ak_spk, challenge, credentialBlob,
                                                      fqdn_nms, signature_cert_ak, signature_cert_nms
   )
   ]
  --[
  ReceiveCertAK( ~RouterID, <<ak_spk, ~fqdn_router>, signature_cert_ak> )
  ]->
   [
   state_11111111111111112111111111111111111111111111( ~RouterID, ~ServerID,
                                                       ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                       ak_h, ak_sh, ak_spk, challenge, credentialBlob,
                                                       fqdn_nms, signature_cert_ak, signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyRARouterIDpksskra_0_11111111111111112111111111111111111111111111[color=#454080 process=event HasKey( 'RA', ~RouterID, pk(~ssk_ra) );]:
   [
   state_11111111111111112111111111111111111111111111( ~RouterID, ~ServerID,
                                                       ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                       ak_h, ak_sh, ak_spk, challenge, credentialBlob,
                                                       fqdn_nms, signature_cert_ak, signature_cert_nms
   )
   ]
  --[ HasKey( 'RA', ~RouterID, pk(~ssk_ra) ) ]->
   [
   state_111111111111111121111111111111111111111111111( ~RouterID,
                                                        ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                        ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                        credentialBlob, fqdn_nms, signature_cert_ak,
                                                        signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyAKRouterIDakspk_0_111111111111111121111111111111111111111111111[color=#454080 process=event HasKey( 'AK', ~RouterID, ak_spk );]:
   [
   state_111111111111111121111111111111111111111111111( ~RouterID,
                                                        ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                        ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                        credentialBlob, fqdn_nms, signature_cert_ak,
                                                        signature_cert_nms
   )
   ]
  --[ HasKey( 'AK', ~RouterID, ak_spk ) ]->
   [
   state_1111111111111111211111111111111111111111111111( ~RouterID,
                                                         ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                         ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                         credentialBlob, fqdn_nms, signature_cert_ak,
                                                         signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventRouterFinish_0_1111111111111111211111111111111111111111111111[color=#454080 process=event RouterFinish( );]:
   [
   state_1111111111111111211111111111111111111111111111( ~RouterID,
                                                         ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                         ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                         credentialBlob, fqdn_nms, signature_cert_ak,
                                                         signature_cert_nms
   )
   ]
  --[ RouterFinish( ) ]->
   [
   state_11111111111111112111111111111111111111111111111( ~RouterID,
                                                          ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                          ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                          credentialBlob, fqdn_nms, signature_cert_ak,
                                                          signature_cert_nms
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111112111111111111111111111111111111[color=#454080 process=0]:
   [
   state_11111111111111112111111111111111111111111111111( ~RouterID,
                                                          ~ServerID, ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms,
                                                          ~ssk_ra, ~tid, ak_h, ak_sh, ak_spk, challenge,
                                                          credentialBlob, fqdn_nms, signature_cert_ak,
                                                          signature_cert_nms
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111112111111111111111111111112[color=#454080 process=0]:
   [
   state_11111111111111112111111111111111111111112( ~RouterID, ~ServerID,
                                                    ~ek_h, ~ek_sk, ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid,
                                                    ak_h, ak_sh, ak_spk, challenge, credentialBlob, fqdn_nms,
                                                    signature_cert_ak, signature_cert_nms
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111112111112[color=#454080 process=0]:
   [
   state_11111111111111112111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                  ~fqdn_router, ~ssk_nms, ~ssk_ra, ~tid, fqdn_nms, signature_cert_nms
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_1111111111111112[color=#464080 process=!]:
   [
   state_1111111111111112( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                           ~ssk_ra
   )
   ]
  -->
   [
   !semistate_11111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                 ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __1_1111111111111112[color=#464080 process=!]:
   [
   !semistate_11111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                 ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   state_11111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                            ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newfqdnnms_0_11111111111111121[color=#464080 process=new ~fqdn_nms;]:
   [
   state_11111111111111121( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~ssk_nms,
                            ~ssk_ra
   ),
   Fr( ~fqdn_nms )
   ]
  -->
   [
   state_111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~fqdn_nms,
                             ~ssk_nms, ~ssk_ra
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outfqdnnms_0_111111111111111211[color=#464080 process=out(~fqdn_nms);]:
   [
   state_111111111111111211( ~RouterID, ~ServerID, ~ek_h, ~ek_sk, ~fqdn_nms,
                             ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   state_1111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                              ~fqdn_nms, ~ssk_nms, ~ssk_ra
   ),
   Out( ~fqdn_nms )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outpksskrafqdnnmssignpksskrafqdnnmsssknms_0_1111111111111112111[color=#464080 process=out(<<pk(~ssk_ra), ~fqdn_nms>, sign(<pk(~ssk_ra), ~fqdn_nms>, ~ssk_nms)
>);]:
   [
   state_1111111111111112111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                              ~fqdn_nms, ~ssk_nms, ~ssk_ra
   )
   ]
  -->
   [
   state_11111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                               ~fqdn_nms, ~ssk_nms, ~ssk_ra
   ),
   Out( <<pk(~ssk_ra), ~fqdn_nms>, sign(<pk(~ssk_ra), ~fqdn_nms>, ~ssk_nms)>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inRAenrollrequestfqdnrouterpkekskakspk_0_11111111111111121111[color=#464080 process=in(<'RA_enrollrequest', fqdn_router, pk(~ek_sk), ak_spk>);]:
   [
   state_11111111111111121111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                               ~fqdn_nms, ~ssk_nms, ~ssk_ra
   ),
   In( <'RA_enrollrequest', fqdn_router, pk(~ek_sk), ak_spk> )
   ]
  -->
   [
   state_111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newchallenge_0_111111111111111211111[color=#464080 process=new ~challenge;]:
   [
   state_111111111111111211111( ~RouterID, ~ServerID, ~ek_h, ~ek_sk,
                                ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   ),
   Fr( ~challenge )
   ]
  -->
   [
   state_1111111111111112111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                 ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSourcechallenge_0_1111111111111112111111[color=#464080 process=event Source( ~challenge );]:
   [
   state_1111111111111112111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                 ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[ Source( ~challenge ) ]->
   [
   state_11111111111111121111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                  ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outRAenrollrequestrespmakeCredentialpkekskchallengeakspk_0_11111111111111121111111[color=#464080 process=out(<'RA_enrollrequest_resp', 
 makeCredential(pk(~ek_sk), ~challenge, ak_spk)>);]:
   [
   state_11111111111111121111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                  ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  -->
   [
   state_111111111111111211111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                   ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   ),
   Out( <'RA_enrollrequest_resp', 
         makeCredential(pk(~ek_sk), ~challenge, ak_spk)>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inRAenrollcertchallenge_0_111111111111111211111111[color=#464080 process=in(<'RA_enrollcert', ~challenge>);]:
   [
   state_111111111111111211111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                   ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   ),
   In( <'RA_enrollcert', ~challenge> )
   ]
  -->
   [
   state_1111111111111112111111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                    ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventGenerateCertAKServerIDakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111[color=#464080 process=event GenerateCertAK( ~ServerID,
                <<ak_spk, fqdn_router>, sign(<ak_spk, fqdn_router>, ~ssk_ra)>
);]:
   [
   state_1111111111111112111111111( ~RouterID, ~ServerID, ~challenge, ~ek_h,
                                    ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[
  GenerateCertAK( ~ServerID,
                  <<ak_spk, fqdn_router>, sign(<ak_spk, fqdn_router>, ~ssk_ra)>
  )
  ]->
   [
   state_11111111111111121111111111( ~RouterID, ~ServerID, ~challenge,
                                     ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventServerRunningServerIDRouterIDakspkfqdnroutersignakspkfqdnroutersskra_0_11111111111111121111111111[color=#464080 process=event ServerRunning( ~ServerID, ~RouterID,
               <<ak_spk, fqdn_router>, sign(<ak_spk, fqdn_router>, ~ssk_ra)>
);]:
   [
   state_11111111111111121111111111( ~RouterID, ~ServerID, ~challenge,
                                     ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[
  ServerRunning( ~ServerID, ~RouterID,
                 <<ak_spk, fqdn_router>, sign(<ak_spk, fqdn_router>, ~ssk_ra)>
  )
  ]->
   [
   state_111111111111111211111111111( ~RouterID, ~ServerID, ~challenge,
                                      ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventServerCommitServerIDRouterIDchallenge_0_111111111111111211111111111[color=#464080 process=event ServerCommit( ~ServerID, ~RouterID, ~challenge );]:
   [
   state_111111111111111211111111111( ~RouterID, ~ServerID, ~challenge,
                                      ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[ ServerCommit( ~ServerID, ~RouterID, ~challenge ) ]->
   [
   state_1111111111111112111111111111( ~RouterID, ~ServerID, ~challenge,
                                       ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outRAenrollcertrespakspkfqdnroutersignakspkfqdnroutersskra_0_1111111111111112111111111111[color=#464080 process=out(<'RA_enrollcert_resp', <ak_spk, fqdn_router>, 
 sign(<ak_spk, fqdn_router>, ~ssk_ra)>);]:
   [
   state_1111111111111112111111111111( ~RouterID, ~ServerID, ~challenge,
                                       ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  -->
   [
   state_11111111111111121111111111111( ~RouterID, ~ServerID, ~challenge,
                                        ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   ),
   Out( <'RA_enrollcert_resp', <ak_spk, fqdn_router>, 
         sign(<ak_spk, fqdn_router>, ~ssk_ra)>
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyAKServerIDakspk_0_11111111111111121111111111111[color=#464080 process=event HasKey( 'AK', ~ServerID, ak_spk );]:
   [
   state_11111111111111121111111111111( ~RouterID, ~ServerID, ~challenge,
                                        ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[ HasKey( 'AK', ~ServerID, ak_spk ) ]->
   [
   state_111111111111111211111111111111( ~RouterID, ~ServerID, ~challenge,
                                         ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyNMSServerIDpkssknms_0_111111111111111211111111111111[color=#464080 process=event HasKey( 'NMS', ~ServerID, pk(~ssk_nms) );]:
   [
   state_111111111111111211111111111111( ~RouterID, ~ServerID, ~challenge,
                                         ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[ HasKey( 'NMS', ~ServerID, pk(~ssk_nms) ) ]->
   [
   state_1111111111111112111111111111111( ~RouterID, ~ServerID, ~challenge,
                                          ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyRAServerIDpksskra_0_1111111111111112111111111111111[color=#464080 process=event HasKey( 'RA', ~ServerID, pk(~ssk_ra) );]:
   [
   state_1111111111111112111111111111111( ~RouterID, ~ServerID, ~challenge,
                                          ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[ HasKey( 'RA', ~ServerID, pk(~ssk_ra) ) ]->
   [
   state_11111111111111121111111111111111( ~RouterID, ~ServerID, ~challenge,
                                           ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyEKServerIDpkeksk_0_11111111111111121111111111111111[color=#464080 process=event HasKey( 'EK', ~ServerID, pk(~ek_sk) );]:
   [
   state_11111111111111121111111111111111( ~RouterID, ~ServerID, ~challenge,
                                           ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk, fqdn_router
   )
   ]
  --[ HasKey( 'EK', ~ServerID, pk(~ek_sk) ) ]->
   [
   state_111111111111111211111111111111111( ~RouterID, ~ServerID,
                                            ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk,
                                            fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventServerFinish_0_111111111111111211111111111111111[color=#464080 process=event ServerFinish( );]:
   [
   state_111111111111111211111111111111111( ~RouterID, ~ServerID,
                                            ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk,
                                            fqdn_router
   )
   ]
  --[ ServerFinish( ) ]->
   [
   state_1111111111111112111111111111111111( ~RouterID, ~ServerID,
                                             ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk,
                                             fqdn_router
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_1111111111111112111111111111111111[color=#464080 process=0]:
   [
   state_1111111111111112111111111111111111( ~RouterID, ~ServerID,
                                             ~challenge, ~ek_h, ~ek_sk, ~fqdn_nms, ~ssk_nms, ~ssk_ra, ak_spk,
                                             fqdn_router
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

restriction set_in:
  "∀ x y #t3.
    (IsIn( x, y ) @ #t3) ⇒
    (∃ #t2.
      ((Insert( x, y ) @ #t2) ∧ (#t2 < #t3)) ∧
      (∀ #t1 yp.
        (Insert( x, yp ) @ #t1) ⇒ (((#t1 < #t2) ∨ (#t1 = #t2)) ∨ (#t3 < #t1))))"

restriction set_notin:
  "∀ x #t3.
    (IsNotSet( x ) @ #t3) ⇒ (∀ #t1 y. (Insert( x, y ) @ #t1) ⇒ (#t3 < #t1))"
  // safety formula

restriction predicate_eq:
  "∀ #i a b. (Pred_Eq( a, b ) @ #i) ⇒ (a = b)"
  // safety formula

restriction predicate_not_eq:
  "∀ #i a b. (Pred_Not_Eq( a, b ) @ #i) ⇒ (¬(a = b))"
  // safety formula

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction locking_0:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_0( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_0( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_1:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_1( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_1( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_2:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_2( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_2( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

/* All well-formedness checks were successful. */

end