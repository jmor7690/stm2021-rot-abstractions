theory DeviceManagement_Quote_model begin

// Function signature and definition of the equational theory E

functions: activateCredential/3, adec/2, aenc/2, fst/1, makeCredential/3,
           nil/0, pair/2, pk/1, sdec/2, senc/2, sign/2, snd/1, swstate/0, true/0,
           verify/3, verifyCredential/3
equations:
    activateCredential(n, k, makeCredential(pk(k), m, n)) = m,
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true,
    verifyCredential(n, k, makeCredential(pk(k), m, n)) = true

heuristic: p

restriction RestrictionTpmCommand:
  "∀ c #t1.
    (TPM_ReceiveCommand( c ) @ #t1) ⇒
    ((∃ #t2. (TPM_SendCommand( c ) @ #t2) ∧ (#t2 < #t1)) ∧
     (¬(∃ #t3. (TPM_ReceiveCommand( c ) @ #t3) ∧ (¬(#t3 = #t1)))))"

lemma RouterFinishes1:
  exists-trace "∃ #t1. RouterFinish1( ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ #t1. (RouterFinish1( ) @ #t1)"
*/
simplify
solve( state_11111111111111111121111111111111111( ~RouterID, ~ServerID,
                                                  ~ak_h, ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                                  encrypted_qData, quote, session_key
       ) ▶₀ #t1 )
  case outsencquotesessionkey_0_1111111111111111112111111111111111
  solve( (#vr.26 < #t2.5)  ∥ (#vr.26 = #t2.5) )
    case case_2
    solve( (#vr.32 < #t2.3)  ∥ (#vr.32 = #t2.3) )
      case case_2
      solve( (#vr.35 < #t2.3)  ∥ (#vr.35 = #t2.3) )
        case case_2
        solve( (#vr.36 < #t2.5)  ∥ (#vr.36 = #t2.5) )
          case case_2
          solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, z> ) @ #t2.4 )
            case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
            solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                        ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                                        ~tls_sk.1, encrypted_qData.1, session_key.1
                   ) ▶₀ #t2.4 )
              case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
              solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.12 < #t2.6) )
                case case_2
                solve( splitEqs(1) )
                  case split_case_1
                  solve( splitEqs(8) )
                    case split_case_1
                    solve( Insert( <'privatePart', ~ak_h>, k_privatePart ) @ #t2.2 )
                      case insertprivatePartakhaksk_0_11111111111111111111
                      solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                        case insertpolicyDigestakshnil_0_1111111111111111111111
                        solve( Insert( 'session_key', session_key ) @ #t2.5 )
                          case insertsessionkeysessionkey_0_11111111111111111211111111
                          solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData,
                                                                   ~session_key, ~tid.2, ~tls_h.1, ~tls_sh.1,
                                                                   ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.3 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', pcr ) @ #t2 )
                                case insertPCRxswstatenil_0_11111111111111111121
                                SOLVED // trace found
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma RouterFinishes2:
  exists-trace "∃ #t1. RouterFinish2( ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ #t1. (RouterFinish2( ) @ #t1)"
*/
simplify
solve( state_11111111111111111122111111111111111( ~RouterID, ~ServerID,
                                                  ~ak_h, ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                                  encrypted_qData, quote, session_key
       ) ▶₀ #t1 )
  case outsencquotesessionkey_0_1111111111111111112211111111111111
  solve( (#vr.26 < #t2.5)  ∥ (#vr.26 = #t2.5) )
    case case_2
    solve( (#vr.32 < #t2.3)  ∥ (#vr.32 = #t2.3) )
      case case_2
      solve( (#vr.35 < #t2.3)  ∥ (#vr.35 = #t2.3) )
        case case_2
        solve( (#vr.36 < #t2.5)  ∥ (#vr.36 = #t2.5) )
          case case_2
          solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, z> ) @ #t2.4 )
            case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
            solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                        ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                                        ~tls_sk.1, encrypted_qData.1, session_key.1
                   ) ▶₀ #t2.4 )
              case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
              solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.12 < #t2.6) )
                case case_2
                solve( splitEqs(1) )
                  case split_case_1
                  solve( splitEqs(8) )
                    case split_case_1
                    solve( Insert( <'privatePart', ~ak_h>, k_privatePart ) @ #t2.2 )
                      case insertprivatePartakhaksk_0_11111111111111111111
                      solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                        case insertpolicyDigestakshnil_0_1111111111111111111111
                        solve( Insert( 'session_key', session_key ) @ #t2.5 )
                          case insertsessionkeysessionkey_0_11111111111111111211111111
                          solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData,
                                                                   ~session_key, ~tid.2, ~tls_h.1, ~tls_sh.1,
                                                                   ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.3 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', pcr ) @ #t2 )
                                case insertPCRswstatenil_0_11111111111111111122
                                SOLVED // trace found
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma ServerFinishes:
  exists-trace "∃ #t1. ServerFinish( ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ #t1. (ServerFinish( ) @ #t1)"
*/
simplify
solve( state_1111111111111111121111111111111111( ~RouterID, ~ServerID,
                                                 ~ak_h, ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h,
                                                 ~tls_sh, ~tls_sk, encrypted_quote
       ) ▶₀ #t1 )
  case eventServerCommitServerIDRouterIDqDatasessionkey_0_111111111111111112111111111111111
  solve( !KU( senc(sign(<~qData, swstate, nil>, ~ak_sk), ~session_key)
         ) @ #vk )
    case outsencquotesessionkey_0_1111111111111111112211111111111111
    solve( (#vr.7 < #t2.3)  ∥ (#vr.7 = #t2.3)  ∥ (#vr.48 < #vr.7) )
      case case_2
      solve( (#vr.61 < #t2.5)  ∥ (#vr.61 = #t2.5) )
        case case_2
        solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
          case case_2
          solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
            case case_2
            solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
              case case_2
              solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                            ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                            ~tls_sh.1, ~tls_sk.1, senc(~qData, session_key.1),
                                                            session_key.1
                       ) ▶₀ #t2.5 )
                  case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                  solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                    case case_2
                    solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                      case insertprivatePartakhaksk_0_11111111111111111111
                      solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                        case insertpolicyDigestakshnil_0_1111111111111111111111
                        solve( Insert( 'session_key', ~session_key ) @ #t2 )
                          case insertsessionkeysessionkey_0_11111111111111111211111111
                          solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            solve( Insert( 'PCR', <swstate, nil> ) @ #t2.1 )
                              case insertPCRswstatenil_0_11111111111111111122
                              solve( !KU( senc(~qData, session_key.1) ) @ #vk.2 )
                                case outsencqDatasessionkey_0_11111111111111111211111111111
                                SOLVED // trace found
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma AvailabilityKey:
  all-traces
  "∀ label id1 id2 k1 k2 #t1 #t2.
    (((¬(id1 = id2)) ∧ (HasKey( label, id1, k1 ) @ #t1)) ∧
     (HasKey( label, id2, k2 ) @ #t2)) ⇒
    (k1 = k2)"
/*
guarded formula characterizing all counter-examples:
"∃ label id1 id2 k1 k2 #t1 #t2.
  (HasKey( label, id1, k1 ) @ #t1) ∧ (HasKey( label, id2, k2 ) @ #t2)
 ∧
  (¬(id1 = id2)) ∧ (¬(k1 = k2))"
*/
simplify
solve( HasKey( label, id1, k1 ) @ #t1 )
  case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112111111
  solve( state_1111111111111111112111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
         ) ▶₀ #t1 )
    case newtid_0_111111111111111111211111
    solve( HasKey( 'AK', id2, k2 ) @ #t2 )
      case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112111111
      solve( state_1111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                              ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                              ~tls_sk.1
             ) ▶₀ #t2 )
        case newtid_0_111111111111111111211111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112211111
      by solve( state_1111111111111111112211111( ~RouterID.1, ~ServerID.1,
                                                 ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                                 ~tls_sk.1
                ) ▶₀ #t2 )
    next
      case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
      solve( state_111111111111111112111111111( ~RouterID.1, ~ServerID.1,
                                                ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData, ~session_key, ~tid.1,
                                                ~tls_h.1, ~tls_sh.1, ~tls_sk.1
             ) ▶₀ #t2 )
        case insertsessionkeysessionkey_0_11111111111111111211111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112211111
  solve( state_1111111111111111112211111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
         ) ▶₀ #t1 )
    case newtid_0_111111111111111111221111
    solve( HasKey( 'AK', id2, k2 ) @ #t2 )
      case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112111111
      by solve( state_1111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                                 ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                                 ~tls_sk.1
                ) ▶₀ #t2 )
    next
      case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112211111
      solve( state_1111111111111111112211111( ~RouterID.1, ~ServerID.1,
                                              ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                              ~tls_sk.1
             ) ▶₀ #t2 )
        case newtid_0_111111111111111111221111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
      solve( state_111111111111111112111111111( ~RouterID.1, ~ServerID.1,
                                                ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData, ~session_key, ~tid.1,
                                                ~tls_h.1, ~tls_sh.1, ~tls_sk.1
             ) ▶₀ #t2 )
        case insertsessionkeysessionkey_0_11111111111111111211111111
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
  solve( state_111111111111111112111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                            ~tls_sk
         ) ▶₀ #t1 )
    case insertsessionkeysessionkey_0_11111111111111111211111111
    solve( HasKey( 'AK', id2, k2 ) @ #t2 )
      case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112111111
      solve( state_1111111111111111112111111( ~RouterID.1, ~ServerID.1,
                                              ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                              ~tls_sk.1
             ) ▶₀ #t2 )
        case newtid_0_111111111111111111211111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyAKRouterIDpkaksk_0_1111111111111111112211111
      solve( state_1111111111111111112211111( ~RouterID.1, ~ServerID.1,
                                              ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~tid.1, ~tls_h.1, ~tls_sh.1,
                                              ~tls_sk.1
             ) ▶₀ #t2 )
        case newtid_0_111111111111111111221111
        by contradiction /* from formulas */
      qed
    next
      case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
      solve( state_111111111111111112111111111( ~RouterID.1, ~ServerID.1,
                                                ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1, ~session_key.1, ~tid.1,
                                                ~tls_h.1, ~tls_sh.1, ~tls_sk.1
             ) ▶₀ #t2 )
        case insertsessionkeysessionkey_0_11111111111111111211111111
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma FreshnessQData:
  all-traces
  "∀ tid1 tid2 k #t1 #t2.
    ((GenerateQData( tid1, k ) @ #t1) ∧ (GenerateQData( tid2, k ) @ #t2)) ⇒
    (tid1 = tid2)"
/*
guarded formula characterizing all counter-examples:
"∃ tid1 tid2 k #t1 #t2.
  (GenerateQData( tid1, k ) @ #t1) ∧ (GenerateQData( tid2, k ) @ #t2)
 ∧
  ¬(tid1 = tid2)"
*/
simplify
solve( state_11111111111111111211111( ~RouterID, ~ServerID, ~ak_h,
                                      ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
       ) ▶₀ #t1 )
  case eventGenerateKeytidsessionkey_0_1111111111111111121111
  solve( state_11111111111111111211111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                        ~ak_sh.1, ~ak_sk.1, ~qData, ~session_key.1, ~tid.1, ~tls_h.1,
                                        ~tls_sh.1, ~tls_sk.1
         ) ▶₀ #t2 )
    case eventGenerateKeytidsessionkey_0_1111111111111111121111
    by contradiction /* from formulas */
  qed
qed

lemma FreshnessKey:
  all-traces
  "∀ tid1 tid2 k #t1 #t2.
    ((GenerateKey( tid1, k ) @ #t1) ∧ (GenerateKey( tid2, k ) @ #t2)) ⇒
    (tid1 = tid2)"
/*
guarded formula characterizing all counter-examples:
"∃ tid1 tid2 k #t1 #t2.
  (GenerateKey( tid1, k ) @ #t1) ∧ (GenerateKey( tid2, k ) @ #t2)
 ∧
  ¬(tid1 = tid2)"
*/
simplify
solve( state_1111111111111111121111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
       ) ▶₀ #t1 )
  case newqData_0_111111111111111112111
  solve( state_1111111111111111121111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                       ~ak_sh.1, ~ak_sk.1, ~qData.1, ~session_key, ~tid.1, ~tls_h.1,
                                       ~tls_sh.1, ~tls_sk.1
         ) ▶₀ #t2 )
    case newqData_0_111111111111111112111
    by contradiction /* from formulas */
  qed
qed

lemma SecretKey:
  all-traces
  "∀ label k #t1. (SecretKey( label, k ) @ #t1) ⇒ (¬(∃ #t2. K( k ) @ #t2))"
/*
guarded formula characterizing all counter-examples:
"∃ label k #t1. (SecretKey( label, k ) @ #t1) ∧ ∃ #t2. (K( k ) @ #t2)"
*/
simplify
solve( SecretKey( label, k ) @ #t1 )
  case eventSecretKeyAKaksk_0_11
  solve( state_11( ~ak_sk ) ▶₀ #t1 )
    case outpkaksk_0_1
    by solve( !KU( ~ak_sk ) @ #vk )
  qed
next
  case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
  solve( state_1111111111111111121111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
         ) ▶₀ #t1 )
    case eventSourceqData_0_111111111111111112111111
    by solve( !KU( ~session_key ) @ #vk )
  qed
qed

lemma CorrectTransfer:
  all-traces
  "∀ label id1 m #t1.
    (ReceiveValue( label, id1, m ) @ #t1) ⇒
    (∃ id2 #t2. (GenerateValue( label, id2, m ) @ #t2) ∧ (#t2 < #t1))"
/*
guarded formula characterizing all counter-examples:
"∃ label id1 m #t1.
  (ReceiveValue( label, id1, m ) @ #t1)
 ∧
  ∀ id2 #t2. (GenerateValue( label, id2, m ) @ #t2) ⇒ ¬(#t2 < #t1)"
*/
simplify
solve( state_11111111111111111211111111111111( ~RouterID, ~ServerID,
                                               ~ak_h, ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h,
                                               ~tls_sh, ~tls_sk, encrypted_quote
       ) ▶₀ #t1 )
  case ifverifysdecencryptedquotesessionkeyqDataswstatenilpkaksktrue_0_1111111111111111121111111111111
  solve( !KU( senc(sign(<~qData, swstate, nil>, ~ak_sk), ~session_key)
         ) @ #vk )
    case c_senc
    solve( !KU( sign(<~qData, swstate, nil>, ~ak_sk) ) @ #vk.1 )
      case c_sign
      by solve( !KU( ~session_key ) @ #vk.2 )
    next
      case outsencquotesessionkey_0_1111111111111111112111111111111111
      by contradiction /* from formulas */
    next
      case outsencquotesessionkey_0_1111111111111111112211111111111111
      by contradiction /* from formulas */
    qed
  next
    case outsencquotesessionkey_0_1111111111111111112111111111111111
    by contradiction /* from formulas */
  next
    case outsencquotesessionkey_0_1111111111111111112211111111111111
    by contradiction /* from formulas */
  qed
qed

lemma Authentication:
  all-traces
  "∀ X Y param #t1.
    (ServerCommit( X, Y, param ) @ #t1) ⇒
    ((∃ #t2. (RouterRunning( Y, X, param ) @ #t2) ∧ (#t2 < #t1)) ∧
     (¬(∃ X2 Y2 #t3.
         (ServerCommit( X2, Y2, param ) @ #t3) ∧ (¬(#t3 = #t1)))))"
/*
guarded formula characterizing all counter-examples:
"∃ X Y param #t1.
  (ServerCommit( X, Y, param ) @ #t1)
 ∧
  ((∀ #t2. (RouterRunning( Y, X, param ) @ #t2) ⇒ ¬(#t2 < #t1)) ∨
   (∃ X2 Y2 #t3. (ServerCommit( X2, Y2, param ) @ #t3) ∧ ¬(#t3 = #t1)))"
*/
simplify
solve( (∀ #t2.
         (RouterRunning( ~RouterID, ~ServerID, <~qData, ~session_key> ) @ #t2)
        ⇒
         ¬(#t2 < #t1))  ∥
       (∃ X2 Y2 #t3.
         (ServerCommit( X2, Y2, <~qData, ~session_key> ) @ #t3) ∧ ¬(#t3 = #t1)) )
  case case_1
  solve( state_111111111111111112111111111111111( ~RouterID, ~ServerID,
                                                  ~ak_h, ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h,
                                                  ~tls_sh, ~tls_sk, encrypted_quote
         ) ▶₀ #t1 )
    case eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111
    solve( !KU( senc(sign(<~qData, swstate, nil>, ~ak_sk), ~session_key)
           ) @ #vk )
      case c_senc
      solve( !KU( sign(<~qData, swstate, nil>, ~ak_sk) ) @ #vk.1 )
        case c_sign
        by solve( !KU( ~session_key ) @ #vk.2 )
      next
        case outsencquotesessionkey_0_1111111111111111112111111111111111
        solve( (#vr.6 < #t2.3)  ∥ (#vr.6 = #t2.3)  ∥ (#vr.48 < #vr.6) )
          case case_1
          solve( (#vr.62 < #t2.5)  ∥ (#vr.62 = #t2.5) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.69 < #t2.1)  ∥ (#vr.69 = #t2.1) )
                case case_1
                solve( (#vr.70 < #t2.4)  ∥ (#vr.70 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.1), session_key.1
                           ) ▶₀ #t2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.73 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.1), session_key.1
                              ) ▶₀ #t2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.5)  ∥ (#vr.69 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.61 < #t2.5)  ∥ (#vr.61 = #t2.5) )
            case case_1
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
              case case_1
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
                case case_1
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.5 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.5 )
                  qed
                qed
              qed
            qed
          qed
        next
          case case_3
          solve( (#vr.62 < #t2.5)  ∥ (#vr.62 = #t2.5) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.69 < #t2.1)  ∥ (#vr.69 = #t2.1) )
                case case_1
                solve( (#vr.70 < #t2.4)  ∥ (#vr.70 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.1), session_key.1
                           ) ▶₀ #t2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.73 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.1), session_key.1
                              ) ▶₀ #t2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.5)  ∥ (#vr.69 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case outsencquotesessionkey_0_1111111111111111112211111111111111
        solve( (#vr.6 < #t2.3)  ∥ (#vr.6 = #t2.3)  ∥ (#vr.48 < #vr.6) )
          case case_1
          solve( (#vr.62 < #t2.5)  ∥ (#vr.62 = #t2.5) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.69 < #t2.1)  ∥ (#vr.69 = #t2.1) )
                case case_1
                solve( (#vr.70 < #t2.4)  ∥ (#vr.70 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.1), session_key.1
                              ) ▶₀ #t2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.1), session_key.1
                           ) ▶₀ #t2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.73 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.5)  ∥ (#vr.69 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.61 < #t2.5)  ∥ (#vr.61 = #t2.5) )
            case case_1
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
              case case_1
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
                case case_1
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.5 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.5 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.47 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case case_3
          solve( (#vr.62 < #t2.5)  ∥ (#vr.62 = #t2.5) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.69 < #t2.1)  ∥ (#vr.69 = #t2.1) )
                case case_1
                solve( (#vr.70 < #t2.4)  ∥ (#vr.70 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.1), session_key.1
                              ) ▶₀ #t2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.1), session_key.1
                           ) ▶₀ #t2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.73 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.5)  ∥ (#vr.69 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    by solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.48 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case outsencquotesessionkey_0_1111111111111111112111111111111111
      solve( (#vr.6 < #t2.3)  ∥ (#vr.6 = #t2.3)  ∥ (#vr.47 < #vr.6) )
        case case_1
        solve( (#vr.61 < #t2.5)  ∥ (#vr.61 = #t2.5) )
          case case_1
          solve( (#vr.66 < #t2.2)  ∥ (#vr.66 = #t2.2) )
            case case_1
            solve( (#vr.68 < #t2.1)  ∥ (#vr.68 = #t2.1) )
              case case_1
              solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.1 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.1 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.1 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.1 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.1 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.1 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.1 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.1 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              qed
            next
              case case_2
              solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.2 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.2 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.3 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.3 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.65 < #t2.3)  ∥ (#vr.65 = #t2.3) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.6 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.5 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.68 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.6 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        qed
      next
        case case_2
        solve( (#vr.60 < #t2.5)  ∥ (#vr.60 = #t2.5) )
          case case_1
          solve( (#vr.65 < #t2.3)  ∥ (#vr.65 = #t2.3) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.3 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', <swstate, nil> ) @ #t2.5 )
                                case insertPCRswstatenil_0_11111111111111111122
                                by solve( state_1111111111111111112( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                     ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                     ~tls_sk.1
                                          ) ▶₀ #t2.5 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.3 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', <swstate, nil> ) @ #t2.5 )
                                case insertPCRswstatenil_0_11111111111111111122
                                by solve( state_1111111111111111112( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                     ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                     ~tls_sk.1
                                          ) ▶₀ #t2.5 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.3 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', <swstate, nil> ) @ #t2.5 )
                                case insertPCRswstatenil_0_11111111111111111122
                                by solve( state_1111111111111111112( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                     ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                     ~tls_sk.1
                                          ) ▶₀ #t2.5 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.64 < #t2.4)  ∥ (#vr.64 = #t2.4) )
            case case_1
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
              case case_1
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            next
              case case_2
              solve( (#vr.65 < #t2.5)  ∥ (#vr.65 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.5 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.5 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.5 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.5 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2)  ∥ (#t2.6 = #t2)  ∥ (#vr.46 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              by solve( Insert( 'PCR', <swstate, nil> ) @ #t2.1 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              by solve( Insert( 'PCR', <swstate, nil> ) @ #t2.1 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              by solve( Insert( 'PCR', <swstate, nil> ) @ #t2.1 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.5 )
                qed
              qed
            qed
          qed
        qed
      next
        case case_3
        solve( (#vr.61 < #t2.5)  ∥ (#vr.61 = #t2.5) )
          case case_1
          solve( (#vr.66 < #t2.2)  ∥ (#vr.66 = #t2.2) )
            case case_1
            solve( (#vr.68 < #t2.1)  ∥ (#vr.68 = #t2.1) )
              case case_1
              solve( (#vr.69 < #t2.4)  ∥ (#vr.69 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.1 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.1 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.1 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.1 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.72 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.1 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.1 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.1 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.1 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              qed
            next
              case case_2
              solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.2 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.2 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.2 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.68 < #t2.4)  ∥ (#vr.68 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.3)  ∥ (#t2.6 = #t2.3)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.3 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.3 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.3 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.65 < #t2.3)  ∥ (#vr.65 = #t2.3) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.71 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.70 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.5 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.69 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.47 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.6 < #t2.6)  ∥ (#vr.6 = #t2.6)  ∥ (#vr.68 < #vr.6) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.6 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case outsencquotesessionkey_0_1111111111111111112211111111111111
      by contradiction /* from formulas */
    qed
  qed
next
  case case_2
  solve( (#t3 < #t1)  ∥ (#t1 < #t3) )
    case case_1
    solve( state_111111111111111112111111111111111( ~RouterID, ~ServerID,
                                                    ~ak_h, ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h,
                                                    ~tls_sh, ~tls_sk, encrypted_quote
           ) ▶₀ #t1 )
      case eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111
      solve( state_111111111111111112111111111111111( ~RouterID.1, ~ServerID.1,
                                                      ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData, ~session_key,
                                                      ~tid.1, ~tls_h.1, ~tls_sh.1, ~tls_sk.1, encrypted_quote
             ) ▶₀ #t3 )
        case eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111
        by contradiction /* cyclic */
      qed
    qed
  next
    case case_2
    solve( state_111111111111111112111111111111111( ~RouterID, ~ServerID,
                                                    ~ak_h, ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h,
                                                    ~tls_sh, ~tls_sk, encrypted_quote
           ) ▶₀ #t1 )
      case eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111
      solve( state_111111111111111112111111111111111( ~RouterID.1, ~ServerID.1,
                                                      ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData, ~session_key,
                                                      ~tid.1, ~tls_h.1, ~tls_sh.1, ~tls_sk.1, encrypted_quote
             ) ▶₀ #t3 )
        case eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111
        by contradiction /* cyclic */
      qed
    qed
  qed
qed

lemma NoReuse:
  all-traces
  "∀ k #t1 #t2.
    ((NMSUseKey( k ) @ #t1) ∧ (NMSUseKey( k ) @ #t2)) ⇒ (#t1 = #t2)"
/*
guarded formula characterizing all counter-examples:
"∃ k #t1 #t2.
  (NMSUseKey( k ) @ #t1) ∧ (NMSUseKey( k ) @ #t2) ∧ ¬(#t1 = #t2)"
*/
simplify
solve( (#t1 < #t2)  ∥ (#t2 < #t1) )
  case case_1
  solve( state_1111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                             ~tls_sk
         ) ▶₀ #t1 )
    case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
    solve( state_1111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                               ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1, ~session_key, ~tid.1,
                                               ~tls_h.1, ~tls_sh.1, ~tls_sk.1
           ) ▶₀ #t2 )
      case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
      by contradiction /* cyclic */
    qed
  qed
next
  case case_2
  solve( state_1111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                             ~tls_sk
         ) ▶₀ #t1 )
    case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
    solve( state_1111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                               ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1, ~session_key, ~tid.1,
                                               ~tls_h.1, ~tls_sh.1, ~tls_sk.1
           ) ▶₀ #t2 )
      case eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111
      by contradiction /* cyclic */
    qed
  qed
qed

lemma Corrupted:
  all-traces
  "∀ #t1.
    (Corrupted( ) @ #t1) ⇒
    (¬(∃ X Y param #t2. (ServerCommit( X, Y, param ) @ #t2) ∧ (#t1 < #t2)))"
/*
guarded formula characterizing all counter-examples:
"∃ #t1.
  (Corrupted( ) @ #t1)
 ∧
  ∃ X Y param #t2. (ServerCommit( X, Y, param ) @ #t2) ∧ #t1 < #t2"
*/
simplify
solve( state_1111111111111111112111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
       ) ▶₀ #t1 )
  case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
  solve( state_111111111111111112111111111111111( ~RouterID.1, ~ServerID.1,
                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData, ~session_key, ~tid,
                                                  ~tls_h.1, ~tls_sh.1, ~tls_sk.1, encrypted_quote
         ) ▶₀ #t2 )
    case eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111
    solve( !KU( senc(sign(<~qData, swstate, nil>, ~ak_sk), ~session_key)
           ) @ #vk )
      case c_senc
      solve( !KU( sign(<~qData, swstate, nil>, ~ak_sk) ) @ #vk.1 )
        case c_sign
        by solve( !KU( ~session_key ) @ #vk.2 )
      next
        case outsencquotesessionkey_0_1111111111111111112111111111111111
        solve( (#vr.28 < #t2.4)  ∥ (#vr.28 = #t2.4)  ∥ (#vr.51 < #vr.28) )
          case case_1
          solve( (#vr.1 < #t2.6)  ∥ (#vr.1 = #t2.6) )
            case case_1
            solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
              case case_1
              solve( (#vr.68 < #t2.3)  ∥ (#vr.68 = #t2.3) )
                case case_1
                solve( (#vr.69 < #t2.6)  ∥ (#vr.69 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.72 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.6)  ∥ (#vr.68 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                case case_1
                solve( (#vr.68 < #t2.6)  ∥ (#vr.68 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.5)  ∥ (#vr.69 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.72 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.1 < #t2.6)  ∥ (#vr.1 = #t2.6) )
            case case_1
            solve( (#vr.65 < #t2.5)  ∥ (#vr.65 = #t2.5) )
              case case_1
              solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                case case_1
                solve( (#vr.68 < #t2.6)  ∥ (#vr.68 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.66 < #t2.6)  ∥ (#vr.66 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.6 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.5 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.50 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.5 )
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
              case case_1
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
                case case_1
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.5 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.50 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.5 )
                  qed
                qed
              qed
            qed
          qed
        next
          case case_3
          solve( (#vr.1 < #t2.6)  ∥ (#vr.1 = #t2.6) )
            case case_1
            solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
              case case_1
              solve( (#vr.68 < #t2.3)  ∥ (#vr.68 = #t2.3) )
                case case_1
                solve( (#vr.69 < #t2.6)  ∥ (#vr.69 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.72 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.6)  ∥ (#vr.68 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.4)  ∥ (#vr.67 = #t2.4) )
                case case_1
                solve( (#vr.68 < #t2.6)  ∥ (#vr.68 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.51 < #t2.7) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.2)  ∥ (#vr.68 = #t2.2) )
                case case_1
                solve( (#vr.69 < #t2.5)  ∥ (#vr.69 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.1 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.72 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.1 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
                case case_1
                solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.2 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.2 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                qed
              next
                case case_2
                solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                  case case_1
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.3 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.3 )
                  qed
                next
                  case case_2
                  solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                    solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                                ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                ~tls_sh.1, ~tls_sk.1,
                                                                senc(~qData, session_key.2), session_key.2
                           ) ▶₀ #t2.4 )
                      case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                      solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.51 < #t2.6) )
                        case case_1
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_2
                        by solve( !KU( ~session_key ) @ #vk.2 )
                      next
                        case case_3
                        solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                          case case_1
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_2
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        next
                          case case_3
                          by solve( !KU( ~session_key ) @ #vk.2 )
                        qed
                      qed
                    qed
                  next
                    case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                    by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                   ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                   ~tls_sh.1, ~tls_sk.1,
                                                                   senc(~qData, session_key.2), session_key.2
                              ) ▶₀ #t2.4 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case outsencquotesessionkey_0_1111111111111111112111111111111111
      solve( (#vr.28 < #t2.4)  ∥ (#vr.28 = #t2.4)  ∥ (#vr.50 < #vr.28) )
        case case_1
        solve( (#vr.1 < #t2.6)  ∥ (#vr.1 = #t2.6) )
          case case_1
          solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
            case case_1
            solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.6)  ∥ (#vr.68 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.6 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.7 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
              case case_1
              solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.6 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.5 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.6)  ∥ (#vr.66 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.68 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.7 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.6 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.65 < #t2.3)  ∥ (#vr.65 = #t2.3) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.6 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.5 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.68 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.6 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        qed
      next
        case case_2
        solve( (#vr.1 < #t2.6)  ∥ (#vr.1 = #t2.6) )
          case case_1
          solve( (#vr.64 < #t2.5)  ∥ (#vr.64 = #t2.5) )
            case case_1
            solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
              case case_1
              solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.6)  ∥ (#vr.66 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.6 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.6 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.6 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.65 < #t2.5)  ∥ (#vr.65 = #t2.5) )
              case case_1
              solve( (#vr.66 < #t2.6)  ∥ (#vr.66 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.6 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.6 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.6 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            next
              case case_2
              solve( (#vr.65 < #t2.6)  ∥ (#vr.65 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.6 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.6 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.6 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.6 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.5 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.1)  ∥ (#t2.7 = #t2.1)  ∥ (#vr.49 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', <swstate, nil> ) @ #t2.6 )
                                case insertPCRswstatenil_0_11111111111111111122
                                by solve( state_1111111111111111112( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                     ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                     ~tls_sk.1
                                          ) ▶₀ #t2.6 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', <swstate, nil> ) @ #t2.6 )
                                case insertPCRswstatenil_0_11111111111111111122
                                by solve( state_1111111111111111112( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                     ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                     ~tls_sk.1
                                          ) ▶₀ #t2.6 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( Insert( 'PCR', <swstate, nil> ) @ #t2.6 )
                                case insertPCRswstatenil_0_11111111111111111122
                                by solve( state_1111111111111111112( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                     ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                     ~tls_sk.1
                                          ) ▶₀ #t2.6 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.5 )
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.64 < #t2.4)  ∥ (#vr.64 = #t2.4) )
            case case_1
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.5 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
              case case_1
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.5 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.5 )
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            next
              case case_2
              solve( (#vr.65 < #t2.5)  ∥ (#vr.65 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.5 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.5 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.5 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              solve( state_1111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                                ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case __0_111111111111111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.5 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.1)  ∥ (#t2.6 = #t2.1)  ∥ (#vr.49 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              by solve( Insert( 'PCR', <swstate, nil> ) @ #vr.1 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              by solve( Insert( 'PCR', <swstate, nil> ) @ #vr.1 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.2 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.1 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( Insert( <'authPolicy', ~ak_h>, nil ) @ #t2.4 )
                              case insertauthPolicyakhnil_0_1111111111111111111
                              by solve( Insert( 'PCR', <swstate, nil> ) @ #vr.1 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.5 )
                qed
              qed
            qed
          qed
        qed
      next
        case case_3
        solve( (#vr.1 < #t2.6)  ∥ (#vr.1 = #t2.6) )
          case case_1
          solve( (#vr.65 < #t2.4)  ∥ (#vr.65 = #t2.4) )
            case case_1
            solve( (#vr.67 < #t2.3)  ∥ (#vr.67 = #t2.3) )
              case case_1
              solve( (#vr.68 < #t2.6)  ∥ (#vr.68 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.71 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.6 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.4)  ∥ (#vr.66 = #t2.4) )
              case case_1
              solve( (#vr.67 < #t2.6)  ∥ (#vr.67 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.6 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.5 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.6)  ∥ (#vr.66 = #t2.6) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.5)  ∥ (#t2.7 = #t2.5)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.5 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.7 < #t2.6)  ∥ (#t2.7 = #t2.6)  ∥ (#vr.50 < #t2.7) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.7)  ∥ (#vr.28 = #t2.7)  ∥ (#vr.68 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.7 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.6 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        next
          case case_2
          solve( (#vr.65 < #t2.3)  ∥ (#vr.65 = #t2.3) )
            case case_1
            solve( (#vr.67 < #t2.2)  ∥ (#vr.67 = #t2.2) )
              case case_1
              solve( (#vr.68 < #t2.5)  ∥ (#vr.68 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.1 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.1 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.2 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.2 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.71 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.2 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.2 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.3 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.3 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.3 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                               ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                               ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertpublicPartakhpkaksk_0_111111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                          by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        next
                          case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                          by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                 ~tls_sk.1
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.5 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.5 )
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.1 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.4 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( state_1111111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                 ~ak_sh, ~ak_sk.1, ~tls_h.1, ~tls_sh.1,
                                                                 ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case insertpublicPartakhpkaksk_0_111111111111111111111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221
                            by solve( state_111111111111111111221( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          next
                            case insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211
                            by solve( state_111111111111111111211( ~RouterID.1, ~ServerID.1, ~ak_h.1,
                                                                   ~ak_sh.1, ~ak_sk.1, ~tls_h.1, ~ak_sh,
                                                                   ~tls_sk.1
                                      ) ▶₀ #t2.4 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.66 < #t2.3)  ∥ (#vr.66 = #t2.3) )
              case case_1
              solve( (#vr.67 < #t2.5)  ∥ (#vr.67 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.2 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.2 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.3 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.3 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.70 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.3 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.3 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.3 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                           ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                               ) ▶₀ #t2.4 )
                          case insertauthPolicyakhnil_0_1111111111111111111
                          by contradiction /* cyclic */
                        qed
                      next
                        case insertprivateParttlshtlssk_0_111111111111111111111111
                        by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                  ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                  ~tls_sh.1, ~ak_sk
                                  ) ▶₀ #t2.4 )
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.5 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.5 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.5 )
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.4 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( state_11111111111111111111( ~RouterID.1, ~ServerID.1, ~ak_h,
                                                             ~ak_sh.1, ~ak_sk, ~tls_h.1, ~tls_sh.1, ~tls_sk.1
                                 ) ▶₀ #t2.4 )
                            case insertauthPolicyakhnil_0_1111111111111111111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insertprivateParttlshtlssk_0_111111111111111111111111
                          by solve( state_111111111111111111111111( ~RouterID.1, ~ServerID.1,
                                                                    ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~ak_h,
                                                                    ~tls_sh.1, ~ak_sk
                                    ) ▶₀ #t2.4 )
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.66 < #t2.5)  ∥ (#vr.66 = #t2.5) )
                case case_1
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.3 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.3 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.4)  ∥ (#t2.6 = #t2.4)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.4 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.69 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.4 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.4 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, ~qData> ) @ #t2.4 )
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111
                  solve( state_11111111111111111121111111111( ~RouterID.1, ~ServerID.1,
                                                              ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                              ~tls_sh.1, ~tls_sk.1,
                                                              senc(~qData, session_key.1), session_key.1
                         ) ▶₀ #t2.4 )
                    case eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111
                    solve( (#t2.6 < #t2.5)  ∥ (#t2.6 = #t2.5)  ∥ (#vr.50 < #t2.6) )
                      case case_1
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_2
                      solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                        case insertprivatePartakhaksk_0_11111111111111111111
                        solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                          case insertpolicyDigestakshnil_0_1111111111111111111111
                          solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                            case insertsessionkeysessionkey_0_11111111111111111211111111
                            solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                     ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                     ~session_key, ~tid.2, ~tls_h.1,
                                                                     ~tls_sh.1, ~tls_sk.1
                                   ) ▶₀ #t2.5 )
                              case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                              by contradiction /* cyclic */
                            qed
                          qed
                        qed
                      qed
                    next
                      case case_3
                      solve( (#vr.28 < #t2.6)  ∥ (#vr.28 = #t2.6)  ∥ (#vr.68 < #vr.28) )
                        case case_1
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_2
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.6 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.6 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case case_3
                        solve( Insert( <'privatePart', ~ak_h>, ~ak_sk ) @ #t2.2 )
                          case insertprivatePartakhaksk_0_11111111111111111111
                          solve( Insert( <'policyDigest', ~ak_sh>, aP ) @ #t2.1 )
                            case insertpolicyDigestakshnil_0_1111111111111111111111
                            solve( Insert( 'session_key', ~session_key ) @ #t2.5 )
                              case insertsessionkeysessionkey_0_11111111111111111211111111
                              solve( state_11111111111111111211111111( ~RouterID.1, ~ServerID.1,
                                                                       ~ak_h.1, ~ak_sh.1, ~ak_sk.1, ~qData.1,
                                                                       ~session_key, ~tid.2, ~tls_h.1,
                                                                       ~tls_sh.1, ~tls_sk.1
                                     ) ▶₀ #t2.5 )
                                case eventSecretKeySessionKeysessionkey_0_1111111111111111121111111
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111
                  by solve( state_11111111111111111122111111111( ~RouterID.1, ~ServerID.1,
                                                                 ~ak_h, ~ak_sh, ~ak_sk.1, ~tid.1, ~tls_h.1,
                                                                 ~tls_sh.1, ~tls_sk.1,
                                                                 senc(~qData, session_key.1), session_key.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

rule (modulo E) Init[color=#ffffff process=new ~ak_sk;]:
   [ ] --[ Init( ) ]-> [ state_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newaksk_0_[color=#ffffff process=new ~ak_sk;]:
   [ state_( ), Fr( ~ak_sk ) ] --> [ state_1( ~ak_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outpkaksk_0_1[color=#ffffff process=out(pk(~ak_sk));]:
   [ state_1( ~ak_sk ) ] --> [ state_11( ~ak_sk ), Out( pk(~ak_sk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSecretKeyAKaksk_0_11[color=#ffffff process=event SecretKey( 'AK', ~ak_sk );]:
   [ state_11( ~ak_sk ) ]
  --[ SecretKey( 'AK', ~ak_sk ) ]->
   [ state_111( ~ak_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newakh_0_111[color=#ffffff process=new ~ak_h;]:
   [ state_111( ~ak_sk ), Fr( ~ak_h ) ] --> [ state_1111( ~ak_h, ~ak_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outakh_0_1111[color=#ffffff process=out(~ak_h);]:
   [ state_1111( ~ak_h, ~ak_sk ) ]
  -->
   [ state_11111( ~ak_h, ~ak_sk ), Out( ~ak_h ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newaksh_0_11111[color=#ffffff process=new ~ak_sh;]:
   [ state_11111( ~ak_h, ~ak_sk ), Fr( ~ak_sh ) ]
  -->
   [ state_111111( ~ak_h, ~ak_sh, ~ak_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outaksh_0_111111[color=#ffffff process=out(~ak_sh);]:
   [ state_111111( ~ak_h, ~ak_sh, ~ak_sk ) ]
  -->
   [ state_1111111( ~ak_h, ~ak_sh, ~ak_sk ), Out( ~ak_sh ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newtlssk_0_1111111[color=#ffffff process=new ~tls_sk;]:
   [ state_1111111( ~ak_h, ~ak_sh, ~ak_sk ), Fr( ~tls_sk ) ]
  -->
   [ state_11111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outpktlssk_0_11111111[color=#ffffff process=out(pk(~tls_sk));]:
   [ state_11111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_sk ) ]
  -->
   [ state_111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_sk ), Out( pk(~tls_sk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) newtlsh_0_111111111[color=#ffffff process=new ~tls_h;]:
   [ state_111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_sk ), Fr( ~tls_h ) ]
  -->
   [ state_1111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outtlsh_0_1111111111[color=#ffffff process=out(~tls_h);]:
   [ state_1111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sk ) ]
  -->
   [
   state_11111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sk ),
   Out( ~tls_h )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newtlssh_0_11111111111[color=#ffffff process=new ~tls_sh;]:
   [
   state_11111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sk ),
   Fr( ~tls_sh )
   ]
  -->
   [ state_111111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) outtlssh_0_111111111111[color=#ffffff process=out(~tls_sh);]:
   [ state_111111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk ) ]
  -->
   [
   state_1111111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk ),
   Out( ~tls_sh )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newRouterID_0_1111111111111[color=#ffffff process=new ~RouterID;]:
   [
   state_1111111111111( ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk ),
   Fr( ~RouterID )
   ]
  -->
   [
   state_11111111111111( ~RouterID, ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh,
                         ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outRouterID_0_11111111111111[color=#ffffff process=out(~RouterID);]:
   [
   state_11111111111111( ~RouterID, ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh,
                         ~tls_sk
   )
   ]
  -->
   [
   state_111111111111111( ~RouterID, ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh,
                          ~tls_sk
   ),
   Out( ~RouterID )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newServerID_0_111111111111111[color=#ffffff process=new ~ServerID;]:
   [
   state_111111111111111( ~RouterID, ~ak_h, ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh,
                          ~tls_sk
   ),
   Fr( ~ServerID )
   ]
  -->
   [
   state_1111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                           ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outServerID_0_1111111111111111[color=#ffffff process=out(~ServerID);]:
   [
   state_1111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                           ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_11111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                            ~tls_h, ~tls_sh, ~tls_sk
   ),
   Out( ~ServerID )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111[color=#807f40 process=|]:
   [
   state_11111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                            ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                             ~tls_h, ~tls_sh, ~tls_sk
   ),
   state_111111111111111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                             ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111[color=#807f40 process=|]:
   [
   state_111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                             ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_1111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                              ~tls_h, ~tls_sh, ~tls_sk
   ),
   state_1111111111111111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                              ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertauthPolicyakhnil_0_1111111111111111111[color=#7b4080 process=insert <'authPolicy', ~ak_h>,nil;]:
   [
   state_1111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                              ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( <'authPolicy', ~ak_h>, nil ) ]->
   [
   state_11111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                               ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertprivatePartakhaksk_0_11111111111111111111[color=#7b4080 process=insert <'privatePart', ~ak_h>,~ak_sk;]:
   [
   state_11111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                               ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( <'privatePart', ~ak_h>, ~ak_sk ) ]->
   [
   state_111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertpublicPartakhpkaksk_0_111111111111111111111[color=#7b4080 process=insert <'publicPart', ~ak_h>,pk(~ak_sk);]:
   [
   state_111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( <'publicPart', ~ak_h>, pk(~ak_sk) ) ]->
   [
   state_1111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertpolicyDigestakshnil_0_1111111111111111111111[color=#7b4080 process=insert <'policyDigest', ~ak_sh>,nil;]:
   [
   state_1111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( <'policyDigest', ~ak_sh>, nil ) ]->
   [
   state_11111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertauthPolicytlshswstatenilTPMCCPolicyPCRnil_0_11111111111111111111111[color=#7b4080 process=insert <'authPolicy', ~tls_h>,<<swstate, nil>, 'TPM_CC_PolicyPCR', nil>;]:
   [
   state_11111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[
  Insert( <'authPolicy', ~tls_h>, <<swstate, nil>, 'TPM_CC_PolicyPCR', nil>
  )
  ]->
   [
   state_111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertprivateParttlshtlssk_0_111111111111111111111111[color=#7b4080 process=insert <'privatePart', ~tls_h>,~tls_sk;]:
   [
   state_111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( <'privatePart', ~tls_h>, ~tls_sk ) ]->
   [
   state_1111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertpublicParttlshpktlssk_0_1111111111111111111111111[color=#7b4080 process=insert <'publicPart', ~tls_h>,pk(~tls_sk);]:
   [
   state_1111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( <'publicPart', ~tls_h>, pk(~tls_sk) ) ]->
   [
   state_11111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111111111111[color=#7b4080 process=!]:
   [
   state_11111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   !semistate_111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __1_11111111111111111111111111[color=#7b4080 process=!]:
   [
   !semistate_111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) TpmQuoteIntidTPMQuotekhkshdata_0_111111111111111111111111111[color=#7b4080 process= [ Tpm2QuoteIn( tid, <'TPM2_Quote', k_h, k_sh, data> ) ] --> [ ];]:
   [
   state_111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   ),
   Tpm2QuoteIn( tid, <'TPM2_Quote', k_h, k_sh, data> )
   ]
  -->
   [
   state_1111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTPMReceiveCommandTPMQuotekhkshdata_0_1111111111111111111111111111[color=#7b4080 process=event TPM_ReceiveCommand( <'TPM2_Quote', k_h, k_sh, data> );]:
   [
   state_1111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, tid
   )
   ]
  --[ TPM_ReceiveCommand( <'TPM2_Quote', k_h, k_sh, data> ) ]->
   [
   state_11111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lockdevice_0_11111111111111111111111111111[color=#7b4080 process=lock 'device';]:
   [
   state_11111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, tid
   ),
   Fr( lock )
   ]
  --[ Lock_0( '0', lock, 'device' ), Lock( '0', lock, 'device' ) ]->
   [
   state_111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupPCRaspcr_0_111111111111111111111111111111[color=#7b4080 process=lookup 'PCR' as pcr]:
   [
   state_111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock, tid
   )
   ]
  --[ IsIn( 'PCR', pcr ) ]->
   [
   state_1111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock,
                                          pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupPCRaspcr_1_111111111111111111111111111111[color=#7b4080 process=lookup 'PCR' as pcr]:
   [
   state_111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock, tid
   )
   ]
  --[ IsNotSet( 'PCR' ) ]->
   [
   state_1111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupauthPolicykhasaP_0_1111111111111111111111111111111[color=#7b4080 process=lookup <'authPolicy', k_h> as aP]:
   [
   state_1111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock,
                                          pcr, tid
   )
   ]
  --[ IsIn( <'authPolicy', k_h>, aP ) ]->
   [
   state_11111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                           lock, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupauthPolicykhasaP_1_1111111111111111111111111111111[color=#7b4080 process=lookup <'authPolicy', k_h> as aP]:
   [
   state_1111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock,
                                          pcr, tid
   )
   ]
  --[ IsNotSet( <'authPolicy', k_h> ) ]->
   [
   state_11111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock,
                                           pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookuppolicyDigestkshaspD_0_11111111111111111111111111111111[color=#7b4080 process=lookup <'policyDigest', k_sh> as pD]:
   [
   state_11111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                           lock, pcr, tid
   )
   ]
  --[ IsIn( <'policyDigest', k_sh>, pD ) ]->
   [
   state_111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                            lock, pD, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookuppolicyDigestkshaspD_1_11111111111111111111111111111111[color=#7b4080 process=lookup <'policyDigest', k_sh> as pD]:
   [
   state_11111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                           lock, pcr, tid
   )
   ]
  --[ IsNotSet( <'policyDigest', k_sh> ) ]->
   [
   state_111111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                            lock, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) ifpDaP_0_111111111111111111111111111111111[color=#7b4080 process=if pD=aP]:
   [
   state_111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                            lock, pD, pcr, tid
   )
   ]
  --[ Pred_Eq( pD, aP ) ]->
   [
   state_1111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                             lock, pD, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) ifpDaP_1_111111111111111111111111111111111[color=#7b4080 process=if pD=aP]:
   [
   state_111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                            lock, pD, pcr, tid
   )
   ]
  --[ Pred_Not_Eq( pD, aP ) ]->
   [
   state_1111111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                             lock, pD, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupprivatePartkhaskprivatePart_0_1111111111111111111111111111111111[color=#7b4080 process=lookup <'privatePart', k_h> as k_privatePart]:
   [
   state_1111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                             lock, pD, pcr, tid
   )
   ]
  --[ IsIn( <'privatePart', k_h>, k_privatePart ) ]->
   [
   state_11111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h,
                                              k_privatePart, k_sh, lock, pD, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupprivatePartkhaskprivatePart_1_1111111111111111111111111111111111[color=#7b4080 process=lookup <'privatePart', k_h> as k_privatePart]:
   [
   state_1111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                             lock, pD, pcr, tid
   )
   ]
  --[ IsNotSet( <'privatePart', k_h> ) ]->
   [
   state_11111111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                              lock, pD, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) TpmQuoteOuttidsigndatapcrkprivatePart_0_11111111111111111111111111111111111[color=#7b4080 process= [ ] --> [ Tpm2QuoteOut( tid, sign(<data, pcr>, k_privatePart) ) ];]:
   [
   state_11111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h,
                                              k_privatePart, k_sh, lock, pD, pcr, tid
   )
   ]
  -->
   [
   state_111111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h,
                                               k_privatePart, k_sh, lock, pD, pcr, tid
   ),
   Tpm2QuoteOut( tid, sign(<data, pcr>, k_privatePart) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) unlockdevice_0_111111111111111111111111111111111111[color=#7b4080 process=unlock 'device';]:
   [
   state_111111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h,
                                               k_privatePart, k_sh, lock, pD, pcr, tid
   )
   ]
  --[ Unlock_0( '0', lock, 'device' ), Unlock( '0', lock, 'device' ) ]->
   [
   state_1111111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                                ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h,
                                                k_privatePart, k_sh, lock, pD, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_1111111111111111111111111111111111111[color=#7b4080 process=0]:
   [
   state_1111111111111111111111111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                                ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h,
                                                k_privatePart, k_sh, lock, pD, pcr, tid
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) unlockdevice_0_11111111111111111111111111111111112[color=#7b4080 process=unlock 'device';]:
   [
   state_11111111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                              lock, pD, pcr, tid
   )
   ]
  --[ Unlock_0( '0', lock, 'device' ), Unlock( '0', lock, 'device' ) ]->
   [
   state_111111111111111111111111111111111121( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                               lock, pD, pcr, tid
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111111111111111111121[color=#7b4080 process=0]:
   [
   state_111111111111111111111111111111111121( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                               lock, pD, pcr, tid
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_1111111111111111111111111111111112[color=#7b4080 process=0]:
   [
   state_1111111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                             lock, pD, pcr, tid
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111111111111111112[color=#7b4080 process=0]:
   [
   state_111111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, aP, data, k_h, k_sh,
                                            lock, pcr, tid
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111111111111111112[color=#7b4080 process=0]:
   [
   state_11111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock,
                                           pcr, tid
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_1111111111111111111111111111112[color=#7b4080 process=0]:
   [
   state_1111111111111111111111111111112( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk, data, k_h, k_sh, lock, tid
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertPCRxswstatenil_0_11111111111111111121[color=#454080 process=insert 'PCR',<'x', swstate, nil>;]:
   [
   state_1111111111111111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                              ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( 'PCR', <'x', swstate, nil> ) ]->
   [
   state_111111111111111111211( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertpolicyDigesttlsshxswstatenilTPMCCPolicyPCRnil_0_111111111111111111211[color=#454080 process=insert <'policyDigest', ~tls_sh>,<<'x', swstate, nil>, 'TPM_CC_PolicyPCR', nil>;]:
   [
   state_111111111111111111211( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[
  Insert( <'policyDigest', ~tls_sh>,
          <<'x', swstate, nil>, 'TPM_CC_PolicyPCR', nil>
  )
  ]->
   [
   state_1111111111111111112111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventCorrupted_0_1111111111111111112111[color=#454080 process=event Corrupted( );]:
   [
   state_1111111111111111112111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Corrupted( ) ]->
   [
   state_11111111111111111121111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111121111[color=#454080 process=!]:
   [
   state_11111111111111111121111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   !semistate_111111111111111111211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __1_11111111111111111121111[color=#454080 process=!]:
   [
   !semistate_111111111111111111211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_111111111111111111211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newtid_0_111111111111111111211111[color=#454080 process=new ~tid;]:
   [
   state_111111111111111111211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   ),
   Fr( ~tid )
   ]
  -->
   [
   state_1111111111111111112111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyAKRouterIDpkaksk_0_1111111111111111112111111[color=#454080 process=event HasKey( 'AK', ~RouterID, pk(~ak_sk) );]:
   [
   state_1111111111111111112111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ HasKey( 'AK', ~RouterID, pk(~ak_sk) ) ]->
   [
   state_11111111111111111121111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupsessionkeyassessionkey_0_11111111111111111121111111[color=#454080 process=lookup 'session_key' as session_key]:
   [
   state_11111111111111111121111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ IsIn( 'session_key', session_key ) ]->
   [
   state_111111111111111111211111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupsessionkeyassessionkey_1_11111111111111111121111111[color=#454080 process=lookup 'session_key' as session_key]:
   [
   state_11111111111111111121111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ IsNotSet( 'session_key' ) ]->
   [
   state_111111111111111111211111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inencryptedqData_0_111111111111111111211111111[color=#454080 process=in(encrypted_qData);]:
   [
   state_111111111111111111211111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, session_key
   ),
   In( encrypted_qData )
   ]
  -->
   [
   state_1111111111111111112111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111[color=#454080 process=event Receive( sdec(encrypted_qData, session_key) );]:
   [
   state_1111111111111111112111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]
  --[ Receive( sdec(encrypted_qData, session_key) ) ]->
   [
   state_11111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]

  /*
  rule (modulo AC) eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112111111111[color=#454080 process=event Receive( sdec(encrypted_qData, session_key) );]:
     [
     state_1111111111111111112111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                         ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
     )
     ]
    --[ Receive( z ) ]->
     [
     state_11111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                          ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
     )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.13
       session_key
             = session_key.13
       z     = sdec(encrypted_qData.13, session_key.13)
    
    2. encrypted_qData
             = senc(x.13, x.14)
       session_key
             = x.14
       z     = x.13
  */

rule (modulo E) eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111[color=#454080 process=event TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, 
                  sdec(encrypted_qData, session_key)>
);]:
   [
   state_11111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]
  --[
  TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, 
                    sdec(encrypted_qData, session_key)>
  )
  ]->
   [
   state_111111111111111111211111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                         session_key
   )
   ]

  /*
  rule (modulo AC) eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111121111111111[color=#454080 process=event TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, 
                  sdec(encrypted_qData, session_key)>
);]:
     [
     state_11111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                          ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
     )
     ]
    --[ TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, z> ) ]->
     [
     state_111111111111111111211111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           session_key
     )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.15
       session_key
             = session_key.16
       z     = sdec(encrypted_qData.15, session_key.16)
    
    2. encrypted_qData
             = senc(z.18, session_key.16)
       session_key
             = session_key.16
       z     = z.18
  */

rule (modulo E) TpmQuoteIntidTPMQuoteakhakshsdecencryptedqDatasessionkey_0_111111111111111111211111111111[color=#454080 process= [ ]
-->
 [
 Tpm2QuoteIn( ~tid,
              <'TPM2_Quote', ~ak_h, ~ak_sh, sdec(encrypted_qData, session_key)>
 )
 ];]:
   [
   state_111111111111111111211111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                         session_key
   )
   ]
  -->
   [
   state_1111111111111111112111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                          session_key
   ),
   Tpm2QuoteIn( ~tid,
                <'TPM2_Quote', ~ak_h, ~ak_sh, sdec(encrypted_qData, session_key)>
   )
   ]

  /*
  rule (modulo AC) TpmQuoteIntidTPMQuoteakhakshsdecencryptedqDatasessionkey_0_111111111111111111211111111111[color=#454080 process= [ ]
-->
 [
 Tpm2QuoteIn( ~tid,
              <'TPM2_Quote', ~ak_h, ~ak_sh, sdec(encrypted_qData, session_key)>
 )
 ];]:
     [
     state_111111111111111111211111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           session_key
     )
     ]
    -->
     [
     state_1111111111111111112111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                            session_key
     ),
     Tpm2QuoteIn( ~tid, <'TPM2_Quote', ~ak_h, ~ak_sh, z> )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.15
       session_key
             = session_key.16
       z     = sdec(encrypted_qData.15, session_key.16)
    
    2. encrypted_qData
             = senc(z.18, session_key.16)
       session_key
             = session_key.16
       z     = z.18
  */

rule (modulo E) TpmQuoteOuttidquote_0_1111111111111111112111111111111[color=#454080 process= [ Tpm2QuoteOut( ~tid, quote ) ] --> [ ];]:
   [
   state_1111111111111111112111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                          session_key
   ),
   Tpm2QuoteOut( ~tid, quote )
   ]
  -->
   [
   state_11111111111111111121111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           quote, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventGenerateValueQUOTERouterIDquote_0_11111111111111111121111111111111[color=#454080 process=event GenerateValue( 'QUOTE', ~RouterID, quote );]:
   [
   state_11111111111111111121111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           quote, session_key
   )
   ]
  --[ GenerateValue( 'QUOTE', ~RouterID, quote ) ]->
   [
   state_111111111111111111211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                            quote, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventRouterRunningRouterIDServerIDsdecencryptedqDatasessionkey_0_111111111111111111211111111111111[color=#454080 process=event RouterRunning( ~RouterID, ~ServerID,
               sdec(encrypted_qData, session_key)
);]:
   [
   state_111111111111111111211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                            quote, session_key
   )
   ]
  --[
  RouterRunning( ~RouterID, ~ServerID, sdec(encrypted_qData, session_key) )
  ]->
   [
   state_1111111111111111112111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                             quote, session_key
   )
   ]

  /*
  rule (modulo AC) eventRouterRunningRouterIDServerIDsdecencryptedqDatasessionkey_0_111111111111111111211111111111111[color=#454080 process=event RouterRunning( ~RouterID, ~ServerID,
               sdec(encrypted_qData, session_key)
);]:
     [
     state_111111111111111111211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                              quote, session_key
     )
     ]
    --[ RouterRunning( ~RouterID, ~ServerID, z ) ]->
     [
     state_1111111111111111112111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                               encrypted_qData, quote, session_key
     )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.14
       session_key
             = session_key.14
       z     = sdec(encrypted_qData.14, session_key.14)
    
    2. encrypted_qData
             = senc(x.14, x.15)
       session_key
             = x.15
       z     = x.14
  */

rule (modulo E) outsencquotesessionkey_0_1111111111111111112111111111111111[color=#454080 process=out(senc(quote, session_key));]:
   [
   state_1111111111111111112111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                             quote, session_key
   )
   ]
  -->
   [
   state_11111111111111111121111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                              quote, session_key
   ),
   Out( senc(quote, session_key) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventRouterFinish_0_11111111111111111121111111111111111[color=#454080 process=event RouterFinish1( );]:
   [
   state_11111111111111111121111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                              quote, session_key
   )
   ]
  --[ RouterFinish1( ) ]->
   [
   state_111111111111111111211111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                               encrypted_qData, quote, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111211111111111111111[color=#454080 process=0]:
   [
   state_111111111111111111211111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                               encrypted_qData, quote, session_key
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111211111112[color=#454080 process=0]:
   [
   state_111111111111111111211111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertPCRswstatenil_0_11111111111111111122[color=#454080 process=insert 'PCR',<swstate, nil>;]:
   [
   state_1111111111111111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                              ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( 'PCR', <swstate, nil> ) ]->
   [
   state_111111111111111111221( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertpolicyDigesttlsshswstatenilTPMCCPolicyPCRnil_0_111111111111111111221[color=#454080 process=insert <'policyDigest', ~tls_sh>,<<swstate, nil>, 'TPM_CC_PolicyPCR', nil>;]:
   [
   state_111111111111111111221( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[
  Insert( <'policyDigest', ~tls_sh>,
          <<swstate, nil>, 'TPM_CC_PolicyPCR', nil>
  )
  ]->
   [
   state_1111111111111111112211( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventTrusted_0_1111111111111111112211[color=#454080 process=event Trusted( );]:
   [
   state_1111111111111111112211( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Trusted( ) ]->
   [
   state_11111111111111111122111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111122111[color=#454080 process=!]:
   [
   state_11111111111111111122111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   !semistate_111111111111111111221111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __1_11111111111111111122111[color=#454080 process=!]:
   [
   !semistate_111111111111111111221111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_111111111111111111221111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newtid_0_111111111111111111221111[color=#454080 process=new ~tid;]:
   [
   state_111111111111111111221111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   ),
   Fr( ~tid )
   ]
  -->
   [
   state_1111111111111111112211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyAKRouterIDpkaksk_0_1111111111111111112211111[color=#454080 process=event HasKey( 'AK', ~RouterID, pk(~ak_sk) );]:
   [
   state_1111111111111111112211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ HasKey( 'AK', ~RouterID, pk(~ak_sk) ) ]->
   [
   state_11111111111111111122111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupsessionkeyassessionkey_0_11111111111111111122111111[color=#454080 process=lookup 'session_key' as session_key]:
   [
   state_11111111111111111122111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ IsIn( 'session_key', session_key ) ]->
   [
   state_111111111111111111221111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookupsessionkeyassessionkey_1_11111111111111111122111111[color=#454080 process=lookup 'session_key' as session_key]:
   [
   state_11111111111111111122111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ IsNotSet( 'session_key' ) ]->
   [
   state_111111111111111111221111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inencryptedqData_0_111111111111111111221111111[color=#454080 process=in(encrypted_qData);]:
   [
   state_111111111111111111221111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, session_key
   ),
   In( encrypted_qData )
   ]
  -->
   [
   state_1111111111111111112211111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111[color=#454080 process=event Receive( sdec(encrypted_qData, session_key) );]:
   [
   state_1111111111111111112211111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]
  --[ Receive( sdec(encrypted_qData, session_key) ) ]->
   [
   state_11111111111111111122111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]

  /*
  rule (modulo AC) eventReceivesdecencryptedqDatasessionkey_0_1111111111111111112211111111[color=#454080 process=event Receive( sdec(encrypted_qData, session_key) );]:
     [
     state_1111111111111111112211111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                         ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
     )
     ]
    --[ Receive( z ) ]->
     [
     state_11111111111111111122111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                          ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
     )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.13
       session_key
             = session_key.13
       z     = sdec(encrypted_qData.13, session_key.13)
    
    2. encrypted_qData
             = senc(x.13, x.14)
       session_key
             = x.14
       z     = x.13
  */

rule (modulo E) eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111[color=#454080 process=event TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, 
                  sdec(encrypted_qData, session_key)>
);]:
   [
   state_11111111111111111122111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
   )
   ]
  --[
  TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, 
                    sdec(encrypted_qData, session_key)>
  )
  ]->
   [
   state_111111111111111111221111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                         session_key
   )
   ]

  /*
  rule (modulo AC) eventTPMSendCommandTPMQuoteakhakshsdecencryptedqDatasessionkey_0_11111111111111111122111111111[color=#454080 process=event TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, 
                  sdec(encrypted_qData, session_key)>
);]:
     [
     state_11111111111111111122111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                          ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData, session_key
     )
     ]
    --[ TPM_SendCommand( <'TPM2_Quote', ~ak_h, ~ak_sh, z> ) ]->
     [
     state_111111111111111111221111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           session_key
     )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.15
       session_key
             = session_key.16
       z     = sdec(encrypted_qData.15, session_key.16)
    
    2. encrypted_qData
             = senc(z.18, session_key.16)
       session_key
             = session_key.16
       z     = z.18
  */

rule (modulo E) TpmQuoteIntidTPMQuoteakhakshsdecencryptedqDatasessionkey_0_111111111111111111221111111111[color=#454080 process= [ ]
-->
 [
 Tpm2QuoteIn( ~tid,
              <'TPM2_Quote', ~ak_h, ~ak_sh, sdec(encrypted_qData, session_key)>
 )
 ];]:
   [
   state_111111111111111111221111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                         session_key
   )
   ]
  -->
   [
   state_1111111111111111112211111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                          session_key
   ),
   Tpm2QuoteIn( ~tid,
                <'TPM2_Quote', ~ak_h, ~ak_sh, sdec(encrypted_qData, session_key)>
   )
   ]

  /*
  rule (modulo AC) TpmQuoteIntidTPMQuoteakhakshsdecencryptedqDatasessionkey_0_111111111111111111221111111111[color=#454080 process= [ ]
-->
 [
 Tpm2QuoteIn( ~tid,
              <'TPM2_Quote', ~ak_h, ~ak_sh, sdec(encrypted_qData, session_key)>
 )
 ];]:
     [
     state_111111111111111111221111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           session_key
     )
     ]
    -->
     [
     state_1111111111111111112211111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                            session_key
     ),
     Tpm2QuoteIn( ~tid, <'TPM2_Quote', ~ak_h, ~ak_sh, z> )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.15
       session_key
             = session_key.16
       z     = sdec(encrypted_qData.15, session_key.16)
    
    2. encrypted_qData
             = senc(z.18, session_key.16)
       session_key
             = session_key.16
       z     = z.18
  */

rule (modulo E) TpmQuoteOuttidquote_0_1111111111111111112211111111111[color=#454080 process= [ Tpm2QuoteOut( ~tid, quote ) ] --> [ ];]:
   [
   state_1111111111111111112211111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                          session_key
   ),
   Tpm2QuoteOut( ~tid, quote )
   ]
  -->
   [
   state_11111111111111111122111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           quote, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventGenerateValueQUOTERouterIDquote_0_11111111111111111122111111111111[color=#454080 process=event GenerateValue( 'QUOTE', ~RouterID, quote );]:
   [
   state_11111111111111111122111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                           quote, session_key
   )
   ]
  --[ GenerateValue( 'QUOTE', ~RouterID, quote ) ]->
   [
   state_111111111111111111221111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                            quote, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventRouterRunningRouterIDServerIDsdecencryptedqDatasessionkeysessionkey_0_111111111111111111221111111111111[color=#454080 process=event RouterRunning( ~RouterID, ~ServerID,
               <sdec(encrypted_qData, session_key), session_key>
);]:
   [
   state_111111111111111111221111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                            quote, session_key
   )
   ]
  --[
  RouterRunning( ~RouterID, ~ServerID,
                 <sdec(encrypted_qData, session_key), session_key>
  )
  ]->
   [
   state_1111111111111111112211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                             quote, session_key
   )
   ]

  /*
  rule (modulo AC) eventRouterRunningRouterIDServerIDsdecencryptedqDatasessionkeysessionkey_0_111111111111111111221111111111111[color=#454080 process=event RouterRunning( ~RouterID, ~ServerID,
               <sdec(encrypted_qData, session_key), session_key>
);]:
     [
     state_111111111111111111221111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                              quote, session_key
     )
     ]
    --[ RouterRunning( ~RouterID, ~ServerID, <z, session_key> ) ]->
     [
     state_1111111111111111112211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                               encrypted_qData, quote, session_key
     )
     ]
    variants (modulo AC)
    1. encrypted_qData
             = encrypted_qData.14
       session_key
             = session_key.14
       z     = sdec(encrypted_qData.14, session_key.14)
    
    2. encrypted_qData
             = senc(x.14, x.15)
       session_key
             = x.15
       z     = x.14
  */

rule (modulo E) outsencquotesessionkey_0_1111111111111111112211111111111111[color=#454080 process=out(senc(quote, session_key));]:
   [
   state_1111111111111111112211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                             quote, session_key
   )
   ]
  -->
   [
   state_11111111111111111122111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                              quote, session_key
   ),
   Out( senc(quote, session_key) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventRouterFinish_0_11111111111111111122111111111111111[color=#454080 process=event RouterFinish2( );]:
   [
   state_11111111111111111122111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk, encrypted_qData,
                                              quote, session_key
   )
   ]
  --[ RouterFinish2( ) ]->
   [
   state_111111111111111111221111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                               encrypted_qData, quote, session_key
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111221111111111111111[color=#454080 process=0]:
   [
   state_111111111111111111221111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                               ~ak_sh, ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk,
                                               encrypted_qData, quote, session_key
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111111221111112[color=#454080 process=0]:
   [
   state_111111111111111111221111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_111111111111111112[color=#464080 process=!]:
   [
   state_111111111111111112( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                             ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   !semistate_1111111111111111121( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __1_111111111111111112[color=#464080 process=!]:
   [
   !semistate_1111111111111111121( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_1111111111111111121( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                              ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newtid_0_1111111111111111121[color=#464080 process=new ~tid;]:
   [
   state_1111111111111111121( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                              ~tls_h, ~tls_sh, ~tls_sk
   ),
   Fr( ~tid )
   ]
  -->
   [
   state_11111111111111111211( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                               ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newsessionkey_0_11111111111111111211[color=#464080 process=new ~session_key;]:
   [
   state_11111111111111111211( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                               ~tid, ~tls_h, ~tls_sh, ~tls_sk
   ),
   Fr( ~session_key )
   ]
  -->
   [
   state_111111111111111112111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) newqData_0_111111111111111112111[color=#464080 process=new ~qData;]:
   [
   state_111111111111111112111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh, ~ak_sk,
                                ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   ),
   Fr( ~qData )
   ]
  -->
   [
   state_1111111111111111121111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventGenerateKeytidsessionkey_0_1111111111111111121111[color=#464080 process=event GenerateKey( ~tid, ~session_key );]:
   [
   state_1111111111111111121111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                 ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ GenerateKey( ~tid, ~session_key ) ]->
   [
   state_11111111111111111211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventGenerateQDatatidqData_0_11111111111111111211111[color=#464080 process=event GenerateQData( ~tid, ~qData );]:
   [
   state_11111111111111111211111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                  ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ GenerateQData( ~tid, ~qData ) ]->
   [
   state_111111111111111112111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSourceqData_0_111111111111111112111111[color=#464080 process=event Source( ~qData );]:
   [
   state_111111111111111112111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                   ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Source( ~qData ) ]->
   [
   state_1111111111111111121111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventSecretKeySessionKeysessionkey_0_1111111111111111121111111[color=#464080 process=event SecretKey( 'SessionKey', ~session_key );]:
   [
   state_1111111111111111121111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                    ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ SecretKey( 'SessionKey', ~session_key ) ]->
   [
   state_11111111111111111211111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insertsessionkeysessionkey_0_11111111111111111211111111[color=#464080 process=insert 'session_key',~session_key;]:
   [
   state_11111111111111111211111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                     ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ Insert( 'session_key', ~session_key ) ]->
   [
   state_111111111111111112111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventHasKeyAKServerIDpkaksk_0_111111111111111112111111111[color=#464080 process=event HasKey( 'AK', ~ServerID, pk(~ak_sk) );]:
   [
   state_111111111111111112111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                      ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ HasKey( 'AK', ~ServerID, pk(~ak_sk) ) ]->
   [
   state_1111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventNMSUseKeysessionkey_0_1111111111111111121111111111[color=#464080 process=event NMSUseKey( ~session_key );]:
   [
   state_1111111111111111121111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                       ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  --[ NMSUseKey( ~session_key ) ]->
   [
   state_11111111111111111211111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) outsencqDatasessionkey_0_11111111111111111211111111111[color=#464080 process=out(senc(~qData, ~session_key));]:
   [
   state_11111111111111111211111111111( ~RouterID, ~ServerID, ~ak_h, ~ak_sh,
                                        ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   )
   ]
  -->
   [
   state_111111111111111112111111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   ),
   Out( senc(~qData, ~session_key) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) inencryptedquote_0_111111111111111112111111111111[color=#464080 process=in(encrypted_quote);]:
   [
   state_111111111111111112111111111111( ~RouterID, ~ServerID, ~ak_h,
                                         ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh, ~tls_sk
   ),
   In( encrypted_quote )
   ]
  -->
   [
   state_1111111111111111121111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                          ~tls_sk, encrypted_quote
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) ifverifysdecencryptedquotesessionkeyqDataswstatenilpkaksktrue_0_1111111111111111121111111111111[color=#464080 process=if verify(sdec(encrypted_quote, ~session_key), <~qData, swstate, nil>,
       pk(~ak_sk))=true]:
   [
   state_1111111111111111121111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                          ~tls_sk, encrypted_quote
   )
   ]
  --[
  Pred_Eq( verify(sdec(encrypted_quote, ~session_key),
                  <~qData, swstate, nil>, pk(~ak_sk)),
           true
  )
  ]->
   [
   state_11111111111111111211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                           ~tls_sk, encrypted_quote
   )
   ]

  /*
  rule (modulo AC) ifverifysdecencryptedquotesessionkeyqDataswstatenilpkaksktrue_0_1111111111111111121111111111111[color=#464080 process=if verify(sdec(encrypted_quote, ~session_key), <~qData, swstate, nil>,
       pk(~ak_sk))=true]:
     [
     state_1111111111111111121111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                            ~tls_sk, encrypted_quote
     )
     ]
    --[ Pred_Eq( z, true ) ]->
     [
     state_11111111111111111211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                             ~tls_sk, encrypted_quote
     )
     ]
    variants (modulo AC)
    1. ~ak_sk
             = ~ak_sk.14
       ~qData
             = ~qData.14
       ~session_key
             = ~session_key.14
       encrypted_quote
             = encrypted_quote.14
       z     = verify(sdec(encrypted_quote.14, ~session_key.14),
                      <~qData.14, swstate, nil>, pk(~ak_sk.14))
    
    2. ~ak_sk
             = ~x.14
       ~qData
             = ~x.15
       ~session_key
             = ~x.16
       encrypted_quote
             = senc(sign(<~x.15, swstate, nil>, ~x.14), ~x.16)
       z     = true
    
    3. ~ak_sk
             = ~ak_sk.20
       ~qData
             = ~qData.20
       ~session_key
             = ~x.14
       encrypted_quote
             = senc(x.19, ~x.14)
       z     = verify(x.19, <~qData.20, swstate, nil>, pk(~ak_sk.20))
  */

rule (modulo E) ifverifysdecencryptedquotesessionkeyqDataswstatenilpkaksktrue_1_1111111111111111121111111111111[color=#464080 process=if verify(sdec(encrypted_quote, ~session_key), <~qData, swstate, nil>,
       pk(~ak_sk))=true]:
   [
   state_1111111111111111121111111111111( ~RouterID, ~ServerID, ~ak_h,
                                          ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                          ~tls_sk, encrypted_quote
   )
   ]
  --[
  Pred_Not_Eq( verify(sdec(encrypted_quote, ~session_key),
                      <~qData, swstate, nil>, pk(~ak_sk)),
               true
  )
  ]->
   [
   state_11111111111111111211111111111112( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                           ~tls_sk, encrypted_quote
   )
   ]

  /*
  rule (modulo AC) ifverifysdecencryptedquotesessionkeyqDataswstatenilpkaksktrue_1_1111111111111111121111111111111[color=#464080 process=if verify(sdec(encrypted_quote, ~session_key), <~qData, swstate, nil>,
       pk(~ak_sk))=true]:
     [
     state_1111111111111111121111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                            ~tls_sk, encrypted_quote
     )
     ]
    --[ Pred_Not_Eq( z, true ) ]->
     [
     state_11111111111111111211111111111112( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                             ~tls_sk, encrypted_quote
     )
     ]
    variants (modulo AC)
    1. ~ak_sk
             = ~ak_sk.14
       ~qData
             = ~qData.14
       ~session_key
             = ~session_key.14
       encrypted_quote
             = encrypted_quote.14
       z     = verify(sdec(encrypted_quote.14, ~session_key.14),
                      <~qData.14, swstate, nil>, pk(~ak_sk.14))
    
    2. ~ak_sk
             = ~x.14
       ~qData
             = ~x.15
       ~session_key
             = ~x.16
       encrypted_quote
             = senc(sign(<~x.15, swstate, nil>, ~x.14), ~x.16)
       z     = true
    
    3. ~ak_sk
             = ~ak_sk.20
       ~qData
             = ~qData.20
       ~session_key
             = ~x.14
       encrypted_quote
             = senc(x.19, ~x.14)
       z     = verify(x.19, <~qData.20, swstate, nil>, pk(~ak_sk.20))
  */

rule (modulo E) eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111[color=#464080 process=event ReceiveValue( 'QUOTE', ~ServerID,
              sdec(encrypted_quote, ~session_key)
);]:
   [
   state_11111111111111111211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                           ~tls_sk, encrypted_quote
   )
   ]
  --[
  ReceiveValue( 'QUOTE', ~ServerID, sdec(encrypted_quote, ~session_key) )
  ]->
   [
   state_111111111111111112111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                            ~tls_sk, encrypted_quote
   )
   ]

  /*
  rule (modulo AC) eventReceiveValueQUOTEServerIDsdecencryptedquotesessionkey_0_11111111111111111211111111111111[color=#464080 process=event ReceiveValue( 'QUOTE', ~ServerID,
              sdec(encrypted_quote, ~session_key)
);]:
     [
     state_11111111111111111211111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                             ~tls_sk, encrypted_quote
     )
     ]
    --[ ReceiveValue( 'QUOTE', ~ServerID, z ) ]->
     [
     state_111111111111111112111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                              ~tls_sk, encrypted_quote
     )
     ]
    variants (modulo AC)
    1. ~session_key
             = ~session_key.16
       encrypted_quote
             = encrypted_quote.21
       z     = sdec(encrypted_quote.21, ~session_key.16)
    
    2. ~session_key
             = ~session_key.21
       encrypted_quote
             = senc(z.28, ~session_key.21)
       z     = z.28
  */

rule (modulo E) eventServerCommitServerIDRouterIDqDatasessionkey_0_111111111111111112111111111111111[color=#464080 process=event ServerCommit( ~ServerID, ~RouterID, <~qData, ~session_key> );]:
   [
   state_111111111111111112111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                            ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                            ~tls_sk, encrypted_quote
   )
   ]
  --[ ServerCommit( ~ServerID, ~RouterID, <~qData, ~session_key> ) ]->
   [
   state_1111111111111111121111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                             ~tls_sk, encrypted_quote
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) eventServerFinish_0_1111111111111111121111111111111111[color=#464080 process=event ServerFinish( );]:
   [
   state_1111111111111111121111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                             ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                             ~tls_sk, encrypted_quote
   )
   ]
  --[ ServerFinish( ) ]->
   [
   state_11111111111111111211111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                              ~tls_sk, encrypted_quote
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111211111111111111111[color=#464080 process=0]:
   [
   state_11111111111111111211111111111111111( ~RouterID, ~ServerID, ~ak_h,
                                              ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                              ~tls_sk, encrypted_quote
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) __0_11111111111111111211111111111112[color=#464080 process=0]:
   [
   state_11111111111111111211111111111112( ~RouterID, ~ServerID, ~ak_h,
                                           ~ak_sh, ~ak_sk, ~qData, ~session_key, ~tid, ~tls_h, ~tls_sh,
                                           ~tls_sk, encrypted_quote
   )
   ]
  -->
   [ ]

  /* has exactly the trivial AC variant */

restriction set_in:
  "∀ x y #t3.
    (IsIn( x, y ) @ #t3) ⇒
    (∃ #t2.
      ((Insert( x, y ) @ #t2) ∧ (#t2 < #t3)) ∧
      (∀ #t1 yp.
        (Insert( x, yp ) @ #t1) ⇒ (((#t1 < #t2) ∨ (#t1 = #t2)) ∨ (#t3 < #t1))))"

restriction set_notin:
  "∀ x #t3.
    (IsNotSet( x ) @ #t3) ⇒ (∀ #t1 y. (Insert( x, y ) @ #t1) ⇒ (#t3 < #t1))"
  // safety formula

restriction predicate_eq:
  "∀ #i a b. (Pred_Eq( a, b ) @ #i) ⇒ (a = b)"
  // safety formula

restriction predicate_not_eq:
  "∀ #i a b. (Pred_Not_Eq( a, b ) @ #i) ⇒ (¬(a = b))"
  // safety formula

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction locking_0:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_0( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_0( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

/* All well-formedness checks were successful. */

end